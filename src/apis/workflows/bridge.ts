/**
*
* This file is autogenerated from the configuration file at `config/apis/workflows.json`.
*
* DO NOT EDIT DIRECTLY
*
* If you need to change the contents of this file please edit the above configuration file and
* then run:
*
* ```
* yarn cs-gen platform-apis
* ```
*
**/

import type {
GetEntitiesExecutionResultsV1QueryParams,
  PostEntitiesExecuteV1QueryParams,
  PostEntitiesExecutionActionsV1QueryParams,
GetEntitiesExecutionResultsV1ApiResponse,
  PostEntitiesExecuteV1ApiResponse,
  PostEntitiesExecutionActionsV1ApiResponse,
GetEntitiesExecutionResultsV1RequestMessage,
  PostEntitiesExecuteV1RequestMessage,
  PostEntitiesExecutionActionsV1RequestMessage,
PostEntitiesExecuteV1PostData,
  PostEntitiesExecutionActionsV1PostData,
} from './types';

import type { Bridge } from '../../bridge';

export class WorkflowsApiBridge {

private bridge;

constructor(bridge: Bridge) {
  this.bridge = bridge;
}


    async getEntitiesExecutionResultsV1(urlParams: GetEntitiesExecutionResultsV1QueryParams): Promise<GetEntitiesExecutionResultsV1ApiResponse> {
        
            const message: GetEntitiesExecutionResultsV1RequestMessage = {
                type: 'api',
                api: 'workflows',
                method: 'getEntitiesExecutionResultsV1',
                payload: {
                  params: urlParams,
                },
            };
        

        return this.bridge.postMessage(message);
    }

    async postEntitiesExecuteV1(postBody: PostEntitiesExecuteV1PostData, urlParams: PostEntitiesExecuteV1QueryParams = {}): Promise<PostEntitiesExecuteV1ApiResponse> {
        
            const message: PostEntitiesExecuteV1RequestMessage = {
                type: 'api',
                api: 'workflows',
                method: 'postEntitiesExecuteV1',
                payload: {
                  body: postBody,
                  params: urlParams,
                },
            };
        

        return this.bridge.postMessage(message);
    }

    async postEntitiesExecutionActionsV1(postBody: PostEntitiesExecutionActionsV1PostData, urlParams: PostEntitiesExecutionActionsV1QueryParams): Promise<PostEntitiesExecutionActionsV1ApiResponse> {
        
            const message: PostEntitiesExecutionActionsV1RequestMessage = {
                type: 'api',
                api: 'workflows',
                method: 'postEntitiesExecutionActionsV1',
                payload: {
                  body: postBody,
                  params: urlParams,
                },
            };
        

        return this.bridge.postMessage(message);
    }

}
