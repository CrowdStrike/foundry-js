/**
 *
 * This file is autogenerated.
 *
 * DO NOT EDIT DIRECTLY
 *
 **/

import type { Bridge } from '../../bridge';

import type {
  ApiResponsePayload,
  BaseApiRequestMessage,
  BaseApiResponseMessage,
  BaseUrlParams,
  QueryParam,
} from '../../types';

export type AlertsRequestApi = 'alerts';

export type CommonApiResponseMessage =
  BaseApiResponseMessage<ApiResponsePayload>;

export interface CommonApiRequestMessage
  extends BaseApiRequestMessage<BaseUrlParams, unknown> {
  api: AlertsRequestApi;
}

// types for deleteEntitiesSuppressedDevicesV1

export interface DeleteEntitiesSuppressedDevicesV1QueryParams
  extends BaseUrlParams {
  ids?: QueryParam;
}

export type DeleteEntitiesSuppressedDevicesV1ApiResponse = ApiResponsePayload;

export type DeleteEntitiesSuppressedDevicesV1ResponseMessage =
  BaseApiResponseMessage<DeleteEntitiesSuppressedDevicesV1ApiResponse>;

export interface DeleteEntitiesSuppressedDevicesV1RequestMessage
  extends BaseApiRequestMessage<DeleteEntitiesSuppressedDevicesV1QueryParams> {
  api: AlertsRequestApi;
  method: 'deleteEntitiesSuppressedDevicesV1';
}

// types for getQueriesAlertsV1

export interface GetQueriesAlertsV1QueryParams extends BaseUrlParams {
  filter?: string;
  limit?: QueryParam;
  offset?: QueryParam;
  q?: QueryParam;
  sort?: QueryParam;
}

export type GetQueriesAlertsV1ApiResponse = ApiResponsePayload;

export type GetQueriesAlertsV1ResponseMessage =
  BaseApiResponseMessage<GetQueriesAlertsV1ApiResponse>;

export interface GetQueriesAlertsV1RequestMessage
  extends BaseApiRequestMessage<GetQueriesAlertsV1QueryParams> {
  api: AlertsRequestApi;
  method: 'getQueriesAlertsV1';
}

// types for getQueriesAlertsV2

export interface GetQueriesAlertsV2QueryParams extends BaseUrlParams {
  filter?: string;
  limit?: QueryParam;
  offset?: QueryParam;
  q?: QueryParam;
  sort?: QueryParam;
  msspRouteCid?: QueryParam;
  includeHidden?: QueryParam;
}

export type GetQueriesAlertsV2ApiResponse = ApiResponsePayload;

export type GetQueriesAlertsV2ResponseMessage =
  BaseApiResponseMessage<GetQueriesAlertsV2ApiResponse>;

export interface GetQueriesAlertsV2RequestMessage
  extends BaseApiRequestMessage<GetQueriesAlertsV2QueryParams> {
  api: AlertsRequestApi;
  method: 'getQueriesAlertsV2';
}

// types for patchCombinedAlertsV2

export type PatchCombinedAlertsV2QueryParams = BaseUrlParams;

export type PatchCombinedAlertsV2ApiResponse = ApiResponsePayload;

export type PatchCombinedAlertsV2PostData = Record<string, never>;

export type PatchCombinedAlertsV2ResponseMessage =
  BaseApiResponseMessage<PatchCombinedAlertsV2ApiResponse>;

export interface PatchCombinedAlertsV2RequestMessage
  extends BaseApiRequestMessage<
    PatchCombinedAlertsV2QueryParams,
    PatchCombinedAlertsV2PostData
  > {
  api: AlertsRequestApi;
  method: 'patchCombinedAlertsV2';
}

// types for patchCombinedAlertsV3

export interface PatchCombinedAlertsV3QueryParams extends BaseUrlParams {
  msspRouteCid?: QueryParam;
  includeHidden?: QueryParam;
}

export type PatchCombinedAlertsV3ApiResponse = ApiResponsePayload;

export type PatchCombinedAlertsV3PostData = Record<string, never>;

export type PatchCombinedAlertsV3ResponseMessage =
  BaseApiResponseMessage<PatchCombinedAlertsV3ApiResponse>;

export interface PatchCombinedAlertsV3RequestMessage
  extends BaseApiRequestMessage<
    PatchCombinedAlertsV3QueryParams,
    PatchCombinedAlertsV3PostData
  > {
  api: AlertsRequestApi;
  method: 'patchCombinedAlertsV3';
}

// types for patchEntitiesAlertsV2

export type PatchEntitiesAlertsV2QueryParams = BaseUrlParams;

export type PatchEntitiesAlertsV2ApiResponse = ApiResponsePayload;

export type PatchEntitiesAlertsV2PostData = Record<string, never>;

export type PatchEntitiesAlertsV2ResponseMessage =
  BaseApiResponseMessage<PatchEntitiesAlertsV2ApiResponse>;

export interface PatchEntitiesAlertsV2RequestMessage
  extends BaseApiRequestMessage<
    PatchEntitiesAlertsV2QueryParams,
    PatchEntitiesAlertsV2PostData
  > {
  api: AlertsRequestApi;
  method: 'patchEntitiesAlertsV2';
}

// types for patchEntitiesAlertsV3

export interface PatchEntitiesAlertsV3QueryParams extends BaseUrlParams {
  msspRouteCid?: QueryParam;
}

export type PatchEntitiesAlertsV3ApiResponse = ApiResponsePayload;

export type PatchEntitiesAlertsV3PostData = Record<string, never>;

export type PatchEntitiesAlertsV3ResponseMessage =
  BaseApiResponseMessage<PatchEntitiesAlertsV3ApiResponse>;

export interface PatchEntitiesAlertsV3RequestMessage
  extends BaseApiRequestMessage<
    PatchEntitiesAlertsV3QueryParams,
    PatchEntitiesAlertsV3PostData
  > {
  api: AlertsRequestApi;
  method: 'patchEntitiesAlertsV3';
}

// types for patchEntitiesSuppressedDevicesV1

export interface PatchEntitiesSuppressedDevicesV1QueryParams
  extends BaseUrlParams {
  ids?: QueryParam;
}

export type PatchEntitiesSuppressedDevicesV1ApiResponse = ApiResponsePayload;

export type PatchEntitiesSuppressedDevicesV1PostData = Record<string, never>;

export type PatchEntitiesSuppressedDevicesV1ResponseMessage =
  BaseApiResponseMessage<PatchEntitiesSuppressedDevicesV1ApiResponse>;

export interface PatchEntitiesSuppressedDevicesV1RequestMessage
  extends BaseApiRequestMessage<
    PatchEntitiesSuppressedDevicesV1QueryParams,
    PatchEntitiesSuppressedDevicesV1PostData
  > {
  api: AlertsRequestApi;
  method: 'patchEntitiesSuppressedDevicesV1';
}

// types for postAggregatesAlertsV1

export interface PostAggregatesAlertsV1QueryParams extends BaseUrlParams {
  dateRanges?: QueryParam;
  field?: QueryParam;
  filter?: string;
  from?: QueryParam;
  include?: QueryParam;
  interval?: QueryParam;
  minDocCount?: QueryParam;
  missing?: QueryParam;
  name?: QueryParam;
  q?: QueryParam;
  ranges?: QueryParam;
  size?: QueryParam;
  sort?: QueryParam;
  subAggregates?: QueryParam;
  timeZone?: QueryParam;
  type?: QueryParam;
}

export type PostAggregatesAlertsV1ApiResponse = ApiResponsePayload;

export type PostAggregatesAlertsV1PostData = Record<string, never>;

export type PostAggregatesAlertsV1ResponseMessage =
  BaseApiResponseMessage<PostAggregatesAlertsV1ApiResponse>;

export interface PostAggregatesAlertsV1RequestMessage
  extends BaseApiRequestMessage<
    PostAggregatesAlertsV1QueryParams,
    PostAggregatesAlertsV1PostData
  > {
  api: AlertsRequestApi;
  method: 'postAggregatesAlertsV1';
}

// types for postAggregatesAlertsV2

export interface PostAggregatesAlertsV2QueryParams extends BaseUrlParams {
  dateRanges?: QueryParam;
  field?: QueryParam;
  filter?: string;
  from?: QueryParam;
  include?: QueryParam;
  interval?: QueryParam;
  minDocCount?: QueryParam;
  missing?: QueryParam;
  msspRouteCid?: QueryParam;
  name?: QueryParam;
  q?: QueryParam;
  ranges?: QueryParam;
  size?: QueryParam;
  sort?: QueryParam;
  subAggregates?: QueryParam;
  timeZone?: QueryParam;
  type?: QueryParam;
  includeHidden?: QueryParam;
}

export type PostAggregatesAlertsV2ApiResponse = ApiResponsePayload;

export type PostAggregatesAlertsV2PostData = Record<string, never>;

export type PostAggregatesAlertsV2ResponseMessage =
  BaseApiResponseMessage<PostAggregatesAlertsV2ApiResponse>;

export interface PostAggregatesAlertsV2RequestMessage
  extends BaseApiRequestMessage<
    PostAggregatesAlertsV2QueryParams,
    PostAggregatesAlertsV2PostData
  > {
  api: AlertsRequestApi;
  method: 'postAggregatesAlertsV2';
}

// types for postEntitiesAlertsV1

export interface PostEntitiesAlertsV1QueryParams extends BaseUrlParams {
  ids?: QueryParam;
}

export type PostEntitiesAlertsV1ApiResponse = ApiResponsePayload;

export type PostEntitiesAlertsV1PostData = Record<string, never>;

export type PostEntitiesAlertsV1ResponseMessage =
  BaseApiResponseMessage<PostEntitiesAlertsV1ApiResponse>;

export interface PostEntitiesAlertsV1RequestMessage
  extends BaseApiRequestMessage<
    PostEntitiesAlertsV1QueryParams,
    PostEntitiesAlertsV1PostData
  > {
  api: AlertsRequestApi;
  method: 'postEntitiesAlertsV1';
}

// types for postEntitiesAlertsV2

export interface PostEntitiesAlertsV2QueryParams extends BaseUrlParams {
  compositeIds?: QueryParam;
}

export type PostEntitiesAlertsV2ApiResponse = ApiResponsePayload;

export type PostEntitiesAlertsV2PostData = Record<string, never>;

export type PostEntitiesAlertsV2ResponseMessage =
  BaseApiResponseMessage<PostEntitiesAlertsV2ApiResponse>;

export interface PostEntitiesAlertsV2RequestMessage
  extends BaseApiRequestMessage<
    PostEntitiesAlertsV2QueryParams,
    PostEntitiesAlertsV2PostData
  > {
  api: AlertsRequestApi;
  method: 'postEntitiesAlertsV2';
}

// types for postEntitiesSuppressedDevicesV1

export type PostEntitiesSuppressedDevicesV1QueryParams = BaseUrlParams;

export type PostEntitiesSuppressedDevicesV1ApiResponse = ApiResponsePayload;

export type PostEntitiesSuppressedDevicesV1PostData = Record<string, never>;

export type PostEntitiesSuppressedDevicesV1ResponseMessage =
  BaseApiResponseMessage<PostEntitiesSuppressedDevicesV1ApiResponse>;

export interface PostEntitiesSuppressedDevicesV1RequestMessage
  extends BaseApiRequestMessage<
    PostEntitiesSuppressedDevicesV1QueryParams,
    PostEntitiesSuppressedDevicesV1PostData
  > {
  api: AlertsRequestApi;
  method: 'postEntitiesSuppressedDevicesV1';
}

// general types

export type AlertsApiRequestMessage =
  | DeleteEntitiesSuppressedDevicesV1RequestMessage
  | GetQueriesAlertsV1RequestMessage
  | GetQueriesAlertsV2RequestMessage
  | PatchCombinedAlertsV2RequestMessage
  | PatchCombinedAlertsV3RequestMessage
  | PatchEntitiesAlertsV2RequestMessage
  | PatchEntitiesAlertsV3RequestMessage
  | PatchEntitiesSuppressedDevicesV1RequestMessage
  | PostAggregatesAlertsV1RequestMessage
  | PostAggregatesAlertsV2RequestMessage
  | PostEntitiesAlertsV1RequestMessage
  | PostEntitiesAlertsV2RequestMessage
  | PostEntitiesSuppressedDevicesV1RequestMessage;

export type AlertsApiResponseMessage =
  | DeleteEntitiesSuppressedDevicesV1ResponseMessage
  | GetQueriesAlertsV1ResponseMessage
  | GetQueriesAlertsV2ResponseMessage
  | PatchCombinedAlertsV2ResponseMessage
  | PatchCombinedAlertsV3ResponseMessage
  | PatchEntitiesAlertsV2ResponseMessage
  | PatchEntitiesAlertsV3ResponseMessage
  | PatchEntitiesSuppressedDevicesV1ResponseMessage
  | PostAggregatesAlertsV1ResponseMessage
  | PostAggregatesAlertsV2ResponseMessage
  | PostEntitiesAlertsV1ResponseMessage
  | PostEntitiesAlertsV2ResponseMessage
  | PostEntitiesSuppressedDevicesV1ResponseMessage;

export class AlertsApiBridge {
  private bridge;

  constructor(bridge: Bridge) {
    this.bridge = bridge;
  }

  getBridge() {
    return this.bridge;
  }

  async deleteEntitiesSuppressedDevicesV1(
    urlParams: DeleteEntitiesSuppressedDevicesV1QueryParams = {},
  ): Promise<DeleteEntitiesSuppressedDevicesV1ApiResponse> {
    const message: DeleteEntitiesSuppressedDevicesV1RequestMessage = {
      type: 'api',
      api: 'alerts',
      method: 'deleteEntitiesSuppressedDevicesV1',
      payload: {
        params: urlParams,
      },
    };

    return this.bridge.postMessage(message);
  }

  /**
   * @deprecated This method is deprecated. Use getQueriesAlertsV2 instead.
   */
  async getQueriesAlertsV1(
    urlParams: GetQueriesAlertsV1QueryParams = {},
  ): Promise<GetQueriesAlertsV1ApiResponse> {
    console.warn('This method is deprecated. Use getQueriesAlertsV2 instead.');
    const message: GetQueriesAlertsV1RequestMessage = {
      type: 'api',
      api: 'alerts',
      method: 'getQueriesAlertsV1',
      payload: {
        params: urlParams,
      },
    };

    return this.bridge.postMessage(message);
  }

  async getQueriesAlertsV2(
    urlParams: GetQueriesAlertsV2QueryParams = {},
  ): Promise<GetQueriesAlertsV2ApiResponse> {
    const message: GetQueriesAlertsV2RequestMessage = {
      type: 'api',
      api: 'alerts',
      method: 'getQueriesAlertsV2',
      payload: {
        params: urlParams,
      },
    };

    return this.bridge.postMessage(message);
  }

  /**
   * @deprecated This method is deprecated. Use patchCombinedAlertsV3 instead.
   */
  async patchCombinedAlertsV2(
    postBody: PatchCombinedAlertsV2PostData,
    urlParams: PatchCombinedAlertsV2QueryParams = {},
  ): Promise<PatchCombinedAlertsV2ApiResponse> {
    console.warn(
      'This method is deprecated. Use patchCombinedAlertsV3 instead.',
    );
    const message: PatchCombinedAlertsV2RequestMessage = {
      type: 'api',
      api: 'alerts',
      method: 'patchCombinedAlertsV2',
      payload: {
        body: postBody,
        params: urlParams,
      },
    };

    return this.bridge.postMessage(message);
  }

  async patchCombinedAlertsV3(
    postBody: PatchCombinedAlertsV3PostData,
    urlParams: PatchCombinedAlertsV3QueryParams = {},
  ): Promise<PatchCombinedAlertsV3ApiResponse> {
    const message: PatchCombinedAlertsV3RequestMessage = {
      type: 'api',
      api: 'alerts',
      method: 'patchCombinedAlertsV3',
      payload: {
        body: postBody,
        params: urlParams,
      },
    };

    return this.bridge.postMessage(message);
  }

  /**
   * @deprecated This method is deprecated. Use patchEntitiesAlertsV3 instead.
   */
  async patchEntitiesAlertsV2(
    postBody: PatchEntitiesAlertsV2PostData,
    urlParams: PatchEntitiesAlertsV2QueryParams = {},
  ): Promise<PatchEntitiesAlertsV2ApiResponse> {
    console.warn(
      'This method is deprecated. Use patchEntitiesAlertsV3 instead.',
    );
    const message: PatchEntitiesAlertsV2RequestMessage = {
      type: 'api',
      api: 'alerts',
      method: 'patchEntitiesAlertsV2',
      payload: {
        body: postBody,
        params: urlParams,
      },
    };

    return this.bridge.postMessage(message);
  }

  async patchEntitiesAlertsV3(
    postBody: PatchEntitiesAlertsV3PostData,
    urlParams: PatchEntitiesAlertsV3QueryParams = {},
  ): Promise<PatchEntitiesAlertsV3ApiResponse> {
    const message: PatchEntitiesAlertsV3RequestMessage = {
      type: 'api',
      api: 'alerts',
      method: 'patchEntitiesAlertsV3',
      payload: {
        body: postBody,
        params: urlParams,
      },
    };

    return this.bridge.postMessage(message);
  }

  async patchEntitiesSuppressedDevicesV1(
    postBody: PatchEntitiesSuppressedDevicesV1PostData,
    urlParams: PatchEntitiesSuppressedDevicesV1QueryParams = {},
  ): Promise<PatchEntitiesSuppressedDevicesV1ApiResponse> {
    const message: PatchEntitiesSuppressedDevicesV1RequestMessage = {
      type: 'api',
      api: 'alerts',
      method: 'patchEntitiesSuppressedDevicesV1',
      payload: {
        body: postBody,
        params: urlParams,
      },
    };

    return this.bridge.postMessage(message);
  }

  /**
   * @deprecated This method is deprecated. Use postAggregatesAlertsV2 instead.
   */
  async postAggregatesAlertsV1(
    postBody: PostAggregatesAlertsV1PostData,
    urlParams: PostAggregatesAlertsV1QueryParams = {},
  ): Promise<PostAggregatesAlertsV1ApiResponse> {
    console.warn(
      'This method is deprecated. Use postAggregatesAlertsV2 instead.',
    );
    const message: PostAggregatesAlertsV1RequestMessage = {
      type: 'api',
      api: 'alerts',
      method: 'postAggregatesAlertsV1',
      payload: {
        body: postBody,
        params: urlParams,
      },
    };

    return this.bridge.postMessage(message);
  }

  async postAggregatesAlertsV2(
    postBody: PostAggregatesAlertsV2PostData,
    urlParams: PostAggregatesAlertsV2QueryParams = {},
  ): Promise<PostAggregatesAlertsV2ApiResponse> {
    const message: PostAggregatesAlertsV2RequestMessage = {
      type: 'api',
      api: 'alerts',
      method: 'postAggregatesAlertsV2',
      payload: {
        body: postBody,
        params: urlParams,
      },
    };

    return this.bridge.postMessage(message);
  }

  /**
   * @deprecated This method is deprecated. Use postEntitiesAlertsV2 instead.
   */
  async postEntitiesAlertsV1(
    postBody: PostEntitiesAlertsV1PostData,
    urlParams: PostEntitiesAlertsV1QueryParams = {},
  ): Promise<PostEntitiesAlertsV1ApiResponse> {
    console.warn(
      'This method is deprecated. Use postEntitiesAlertsV2 instead.',
    );
    const message: PostEntitiesAlertsV1RequestMessage = {
      type: 'api',
      api: 'alerts',
      method: 'postEntitiesAlertsV1',
      payload: {
        body: postBody,
        params: urlParams,
      },
    };

    return this.bridge.postMessage(message);
  }

  async postEntitiesAlertsV2(
    postBody: PostEntitiesAlertsV2PostData,
    urlParams: PostEntitiesAlertsV2QueryParams = {},
  ): Promise<PostEntitiesAlertsV2ApiResponse> {
    const message: PostEntitiesAlertsV2RequestMessage = {
      type: 'api',
      api: 'alerts',
      method: 'postEntitiesAlertsV2',
      payload: {
        body: postBody,
        params: urlParams,
      },
    };

    return this.bridge.postMessage(message);
  }

  async postEntitiesSuppressedDevicesV1(
    postBody: PostEntitiesSuppressedDevicesV1PostData,
    urlParams: PostEntitiesSuppressedDevicesV1QueryParams = {},
  ): Promise<PostEntitiesSuppressedDevicesV1ApiResponse> {
    const message: PostEntitiesSuppressedDevicesV1RequestMessage = {
      type: 'api',
      api: 'alerts',
      method: 'postEntitiesSuppressedDevicesV1',
      payload: {
        body: postBody,
        params: urlParams,
      },
    };

    return this.bridge.postMessage(message);
  }
}
