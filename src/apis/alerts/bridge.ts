/**
*
* This file is autogenerated from the configuration file at `config/apis/alerts.json`.
*
* DO NOT EDIT DIRECTLY
*
* If you need to change the contents of this file please edit the above configuration file and
* then run:
*
* ```
* yarn cs-gen platform-apis
* ```
*
**/

import type {
DeleteEntitiesSuppressedDevicesV1QueryParams,
  GetQueriesAlertsV1QueryParams,
  PatchCombinedAlertsV2QueryParams,
  PatchEntitiesAlertsV2QueryParams,
  PatchEntitiesSuppressedDevicesV1QueryParams,
  PostAggregatesAlertsV1QueryParams,
  PostEntitiesAlertsV1QueryParams,
  PostEntitiesSuppressedDevicesV1QueryParams,
DeleteEntitiesSuppressedDevicesV1ApiResponse,
  GetQueriesAlertsV1ApiResponse,
  PatchCombinedAlertsV2ApiResponse,
  PatchEntitiesAlertsV2ApiResponse,
  PatchEntitiesSuppressedDevicesV1ApiResponse,
  PostAggregatesAlertsV1ApiResponse,
  PostEntitiesAlertsV1ApiResponse,
  PostEntitiesSuppressedDevicesV1ApiResponse,
DeleteEntitiesSuppressedDevicesV1RequestMessage,
  GetQueriesAlertsV1RequestMessage,
  PatchCombinedAlertsV2RequestMessage,
  PatchEntitiesAlertsV2RequestMessage,
  PatchEntitiesSuppressedDevicesV1RequestMessage,
  PostAggregatesAlertsV1RequestMessage,
  PostEntitiesAlertsV1RequestMessage,
  PostEntitiesSuppressedDevicesV1RequestMessage,
PatchCombinedAlertsV2PostData,
  PatchEntitiesAlertsV2PostData,
  PatchEntitiesSuppressedDevicesV1PostData,
  PostAggregatesAlertsV1PostData,
  PostEntitiesAlertsV1PostData,
  PostEntitiesSuppressedDevicesV1PostData,
} from './types';

import type { Bridge } from '../../bridge';

export class AlertsApiBridge {

private bridge;

constructor(bridge: Bridge) {
  this.bridge = bridge;
}


    async deleteEntitiesSuppressedDevicesV1(urlParams: DeleteEntitiesSuppressedDevicesV1QueryParams = {}): Promise<DeleteEntitiesSuppressedDevicesV1ApiResponse> {
        
            const message: DeleteEntitiesSuppressedDevicesV1RequestMessage = {
                type: 'api',
                api: 'alerts',
                method: 'deleteEntitiesSuppressedDevicesV1',
                payload: {
                  params: urlParams,
                },
            };
        

        return this.bridge.postMessage(message);
    }

    async getQueriesAlertsV1(urlParams: GetQueriesAlertsV1QueryParams = {}): Promise<GetQueriesAlertsV1ApiResponse> {
        
            const message: GetQueriesAlertsV1RequestMessage = {
                type: 'api',
                api: 'alerts',
                method: 'getQueriesAlertsV1',
                payload: {
                  params: urlParams,
                },
            };
        

        return this.bridge.postMessage(message);
    }

    async patchCombinedAlertsV2(postBody: PatchCombinedAlertsV2PostData, urlParams: PatchCombinedAlertsV2QueryParams = {}): Promise<PatchCombinedAlertsV2ApiResponse> {
        
            const message: PatchCombinedAlertsV2RequestMessage = {
                type: 'api',
                api: 'alerts',
                method: 'patchCombinedAlertsV2',
                payload: {
                  body: postBody,
                  params: urlParams,
                },
            };
        

        return this.bridge.postMessage(message);
    }

    async patchEntitiesAlertsV2(postBody: PatchEntitiesAlertsV2PostData, urlParams: PatchEntitiesAlertsV2QueryParams = {}): Promise<PatchEntitiesAlertsV2ApiResponse> {
        
            const message: PatchEntitiesAlertsV2RequestMessage = {
                type: 'api',
                api: 'alerts',
                method: 'patchEntitiesAlertsV2',
                payload: {
                  body: postBody,
                  params: urlParams,
                },
            };
        

        return this.bridge.postMessage(message);
    }

    async patchEntitiesSuppressedDevicesV1(postBody: PatchEntitiesSuppressedDevicesV1PostData, urlParams: PatchEntitiesSuppressedDevicesV1QueryParams = {}): Promise<PatchEntitiesSuppressedDevicesV1ApiResponse> {
        
            const message: PatchEntitiesSuppressedDevicesV1RequestMessage = {
                type: 'api',
                api: 'alerts',
                method: 'patchEntitiesSuppressedDevicesV1',
                payload: {
                  body: postBody,
                  params: urlParams,
                },
            };
        

        return this.bridge.postMessage(message);
    }

    async postAggregatesAlertsV1(postBody: PostAggregatesAlertsV1PostData, urlParams: PostAggregatesAlertsV1QueryParams = {}): Promise<PostAggregatesAlertsV1ApiResponse> {
        
            const message: PostAggregatesAlertsV1RequestMessage = {
                type: 'api',
                api: 'alerts',
                method: 'postAggregatesAlertsV1',
                payload: {
                  body: postBody,
                  params: urlParams,
                },
            };
        

        return this.bridge.postMessage(message);
    }

    async postEntitiesAlertsV1(postBody: PostEntitiesAlertsV1PostData, urlParams: PostEntitiesAlertsV1QueryParams = {}): Promise<PostEntitiesAlertsV1ApiResponse> {
        
            const message: PostEntitiesAlertsV1RequestMessage = {
                type: 'api',
                api: 'alerts',
                method: 'postEntitiesAlertsV1',
                payload: {
                  body: postBody,
                  params: urlParams,
                },
            };
        

        return this.bridge.postMessage(message);
    }

    async postEntitiesSuppressedDevicesV1(postBody: PostEntitiesSuppressedDevicesV1PostData, urlParams: PostEntitiesSuppressedDevicesV1QueryParams = {}): Promise<PostEntitiesSuppressedDevicesV1ApiResponse> {
        
            const message: PostEntitiesSuppressedDevicesV1RequestMessage = {
                type: 'api',
                api: 'alerts',
                method: 'postEntitiesSuppressedDevicesV1',
                payload: {
                  body: postBody,
                  params: urlParams,
                },
            };
        

        return this.bridge.postMessage(message);
    }

}
