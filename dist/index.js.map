{"version":3,"file":"index.js","sources":["../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/v4.js","../src/apis/version.ts","../src/utils.ts","../src/bridge.ts","../node_modules/tslib/tslib.es6.js","../node_modules/emittery/maps.js","../node_modules/emittery/index.js","../node_modules/typescript-memoize/dist/es2015/memoize-decorator.js","../src/apis/alerts/index.ts","../src/apis/cloud-security-assets/index.ts","../src/apis/cloudregistration/index.ts","../src/apis/container-security/index.ts","../src/apis/cspm-registration/index.ts","../src/apis/customobjects/index.ts","../src/apis/detects/index.ts","../src/apis/devices/index.ts","../src/apis/faas-gateway/index.ts","../src/apis/fwmgr/index.ts","../src/apis/incidents/index.ts","../src/apis/loggingapi/index.ts","../src/apis/mitre/index.ts","../src/apis/plugins/index.ts","../src/apis/registry-assessment/index.ts","../src/apis/remote-response/index.ts","../src/apis/user-management/index.ts","../src/apis/workflows/index.ts","../src/apis/public-api.ts","../src/abstraction/api-integration.ts","../src/abstraction/cloud-function.ts","../src/abstraction/collection.ts","../src/abstraction/logscale.ts","../src/lib/navigation.ts","../src/lib/resize-tracker.ts","../src/lib/ui.ts","../src/api.ts"],"sourcesContent":["import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","export const VERSION = 'current';\n","import FalconApi from 'api';\nimport type { LocalData, MessageEnvelope, ResponseMessage } from './types';\n\nexport function assertConnection<DATA extends LocalData>(\n  falcon: FalconApi<DATA>,\n) {\n  if (!falcon.isConnected) {\n    throw new Error(\n      'You cannot call this API before having established a connection to the host!',\n    );\n  }\n}\n\nexport function isValidResponse<DATA extends LocalData>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  event: MessageEvent<MessageEnvelope<ResponseMessage<DATA>> | any>,\n): event is MessageEvent<MessageEnvelope<ResponseMessage<DATA>>> {\n  return !!event?.data?.meta?.messageId;\n}\n","import { v4 as uuidv4 } from 'uuid';\n\nimport { VERSION } from './apis/version';\nimport { isValidResponse } from './utils';\n\nimport type {\n  BroadcastMessage,\n  DataUpdateMessage,\n  LivereloadMessage,\n  LocalData,\n  MessageEnvelope,\n  PayloadOf,\n  RequestMessage,\n  ResponseMessage,\n  UnidirectionalRequestMessage,\n} from './types';\n\nconst CONNECTION_TIMEOUT = 5_000;\nconst API_TIMEOUT = 30_000;\nconst NAVIGATION_TIMEOUT = 5_000;\n\nfunction timeoutForMessage(message: RequestMessage): number | null {\n  const timeout =\n    message.type === 'connect'\n      ? CONNECTION_TIMEOUT\n      : message.type === 'api'\n        ? API_TIMEOUT\n        : message.type === 'navigateTo'\n          ? NAVIGATION_TIMEOUT\n          : // Requests not explicitly covered above will not have a timeout. This includes 'fileUpload', which is a user interaction that can take any amount of time.\n            null;\n\n  // In tests we have mocked responses which do not require long timeouts\n  return timeout !== null && process.env.VITEST ? 40 : timeout;\n}\n\ninterface BridgeOptions<DATA extends LocalData> {\n  onDataUpdate?: (event: DataUpdateMessage<DATA>) => void;\n  onBroadcast?: (event: BroadcastMessage) => void;\n  onLivereload?: (event: LivereloadMessage) => void;\n}\n\nexport class Bridge<DATA extends LocalData = LocalData> {\n  private onDataUpdate: BridgeOptions<DATA>['onDataUpdate'];\n  private onBroadcast: BridgeOptions<DATA>['onBroadcast'];\n  private onLivereload: BridgeOptions<DATA>['onLivereload'];\n  private pendingMessages = new Map<\n    string,\n        (_result: PayloadOf<ResponseMessage>) => void\n  >();\n\n  private targetOrigin = '*';\n\n  constructor({\n    onDataUpdate,\n    onBroadcast,\n    onLivereload,\n  }: BridgeOptions<DATA> = {}) {\n    this.onDataUpdate = onDataUpdate;\n    this.onBroadcast = onBroadcast;\n    this.onLivereload = onLivereload;\n\n    window.addEventListener('message', this.handleMessageWrapper);\n  }\n\n  public destroy() {\n    window.removeEventListener('message', this.handleMessageWrapper);\n  }\n\n  public setOrigin(origin: string) {\n    this.targetOrigin = origin;\n  }\n\n  sendUnidirectionalMessage(message: UnidirectionalRequestMessage) {\n    const messageId = uuidv4();\n    const eventData: MessageEnvelope<UnidirectionalRequestMessage> = {\n      message,\n      meta: {\n        messageId,\n        version: VERSION,\n      },\n    };\n\n    window.parent.postMessage(eventData, this.targetOrigin);\n  }\n\n  async postMessage<\n    REQ extends RequestMessage = RequestMessage,\n    ResolvedValue = void,\n  >(message: REQ): Promise<ResolvedValue> {\n    return new Promise((resolve, reject) => {\n      const messageId = uuidv4();\n\n      let timeoutTimer: ReturnType<typeof setTimeout> | undefined;\n      const timeoutValue = timeoutForMessage(message);\n\n      if (timeoutValue !== null) {\n        timeoutTimer = setTimeout(() => {\n          reject(\n            new Error(\n              `Waiting for response from foundry host for \"${message.type}\" message (ID: ${messageId}) timed out after ${timeoutValue}ms`,\n            ),\n          );\n        }, timeoutValue);\n      }\n\n      this.pendingMessages.set(messageId, (result) => {\n        if (timeoutTimer) {\n          clearTimeout(timeoutTimer);\n        }\n\n        resolve(result as ResolvedValue);\n      });\n\n      const eventData: MessageEnvelope<REQ> = {\n        message,\n        meta: {\n          messageId,\n          version: VERSION,\n        },\n      };\n\n      window.parent.postMessage(eventData, this.targetOrigin);\n    });\n  }\n\n  private handleMessageWrapper = (\n    event: MessageEvent<MessageEnvelope<ResponseMessage<DATA>> | unknown>,\n  ) => {\n    return this.handleMessage(event);\n  };\n\n  public handleMessage = (\n    event: MessageEvent<MessageEnvelope<ResponseMessage<DATA>> | unknown>,\n  ) => {\n    if (!isValidResponse<DATA>(event)) {\n      return;\n    }\n\n    const { message } = event.data;\n\n    if (message.type === 'data') {\n      this.onDataUpdate?.(message);\n\n      // data update events are unidirectional and originated from the host, so there cannot be a callback waiting for this message\n      return;\n    }\n\n    if (message.type === 'broadcast') {\n      this.onBroadcast?.(message);\n\n      // data update events are unidirectional and are proxied via the host, so there cannot be a callback waiting for this message\n      return;\n    }\n\n    if (message.type === 'livereload') {\n      this.onLivereload?.(message);\n\n      // livereload events are unidirectional and are proxied via the host, so there cannot be a callback waiting for this message\n      return;\n    }\n\n    const { messageId } = event.data.meta;\n    const callback = this.pendingMessages.get(messageId);\n\n    if (!callback) {\n      this.throwError(`Received unexpected message`);\n      return;\n    }\n\n    this.pendingMessages.delete(messageId);\n\n    callback(message.payload);\n  };\n\n  public throwError(message: string): void {\n    throw new Error(message);\n  }\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nvar ownKeys = function(o) {\r\n    ownKeys = Object.getOwnPropertyNames || function (o) {\r\n        var ar = [];\r\n        for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\r\n        return ar;\r\n    };\r\n    return ownKeys(o);\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    var r, s = 0;\r\n    function next() {\r\n        while (r = env.stack.pop()) {\r\n            try {\r\n                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\r\n                if (r.dispose) {\r\n                    var result = r.dispose.call(r.value);\r\n                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n                }\r\n                else s |= 1;\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\r\n    if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\r\n        return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\r\n            return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\r\n        });\r\n    }\r\n    return path;\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __esDecorate: __esDecorate,\r\n    __runInitializers: __runInitializers,\r\n    __propKey: __propKey,\r\n    __setFunctionName: __setFunctionName,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n    __rewriteRelativeImportExtension: __rewriteRelativeImportExtension,\r\n};\r\n","export const anyMap = new WeakMap();\nexport const eventsMap = new WeakMap();\nexport const producersMap = new WeakMap();\n","import {anyMap, producersMap, eventsMap} from './maps.js';\n\nconst anyProducer = Symbol('anyProducer');\nconst resolvedPromise = Promise.resolve();\n\n// Define symbols for \"meta\" events.\nconst listenerAdded = Symbol('listenerAdded');\nconst listenerRemoved = Symbol('listenerRemoved');\n\nlet canEmitMetaEvents = false;\nlet isGlobalDebugEnabled = false;\n\nconst isEventKeyType = key => typeof key === 'string' || typeof key === 'symbol' || typeof key === 'number';\n\nfunction assertEventName(eventName) {\n\tif (!isEventKeyType(eventName)) {\n\t\tthrow new TypeError('`eventName` must be a string, symbol, or number');\n\t}\n}\n\nfunction assertListener(listener) {\n\tif (typeof listener !== 'function') {\n\t\tthrow new TypeError('listener must be a function');\n\t}\n}\n\nfunction getListeners(instance, eventName) {\n\tconst events = eventsMap.get(instance);\n\tif (!events.has(eventName)) {\n\t\treturn;\n\t}\n\n\treturn events.get(eventName);\n}\n\nfunction getEventProducers(instance, eventName) {\n\tconst key = isEventKeyType(eventName) ? eventName : anyProducer;\n\tconst producers = producersMap.get(instance);\n\tif (!producers.has(key)) {\n\t\treturn;\n\t}\n\n\treturn producers.get(key);\n}\n\nfunction enqueueProducers(instance, eventName, eventData) {\n\tconst producers = producersMap.get(instance);\n\tif (producers.has(eventName)) {\n\t\tfor (const producer of producers.get(eventName)) {\n\t\t\tproducer.enqueue(eventData);\n\t\t}\n\t}\n\n\tif (producers.has(anyProducer)) {\n\t\tconst item = Promise.all([eventName, eventData]);\n\t\tfor (const producer of producers.get(anyProducer)) {\n\t\t\tproducer.enqueue(item);\n\t\t}\n\t}\n}\n\nfunction iterator(instance, eventNames) {\n\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\n\tlet isFinished = false;\n\tlet flush = () => {};\n\tlet queue = [];\n\n\tconst producer = {\n\t\tenqueue(item) {\n\t\t\tqueue.push(item);\n\t\t\tflush();\n\t\t},\n\t\tfinish() {\n\t\t\tisFinished = true;\n\t\t\tflush();\n\t\t},\n\t};\n\n\tfor (const eventName of eventNames) {\n\t\tlet set = getEventProducers(instance, eventName);\n\t\tif (!set) {\n\t\t\tset = new Set();\n\t\t\tconst producers = producersMap.get(instance);\n\t\t\tproducers.set(eventName, set);\n\t\t}\n\n\t\tset.add(producer);\n\t}\n\n\treturn {\n\t\tasync next() {\n\t\t\tif (!queue) {\n\t\t\t\treturn {done: true};\n\t\t\t}\n\n\t\t\tif (queue.length === 0) {\n\t\t\t\tif (isFinished) {\n\t\t\t\t\tqueue = undefined;\n\t\t\t\t\treturn this.next();\n\t\t\t\t}\n\n\t\t\t\tawait new Promise(resolve => {\n\t\t\t\t\tflush = resolve;\n\t\t\t\t});\n\n\t\t\t\treturn this.next();\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdone: false,\n\t\t\t\tvalue: await queue.shift(),\n\t\t\t};\n\t\t},\n\n\t\tasync return(value) {\n\t\t\tqueue = undefined;\n\n\t\t\tfor (const eventName of eventNames) {\n\t\t\t\tconst set = getEventProducers(instance, eventName);\n\t\t\t\tif (set) {\n\t\t\t\t\tset.delete(producer);\n\t\t\t\t\tif (set.size === 0) {\n\t\t\t\t\t\tconst producers = producersMap.get(instance);\n\t\t\t\t\t\tproducers.delete(eventName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tflush();\n\n\t\t\treturn arguments.length > 0\n\t\t\t\t? {done: true, value: await value}\n\t\t\t\t: {done: true};\n\t\t},\n\n\t\t[Symbol.asyncIterator]() {\n\t\t\treturn this;\n\t\t},\n\t};\n}\n\nfunction defaultMethodNamesOrAssert(methodNames) {\n\tif (methodNames === undefined) {\n\t\treturn allEmitteryMethods;\n\t}\n\n\tif (!Array.isArray(methodNames)) {\n\t\tthrow new TypeError('`methodNames` must be an array of strings');\n\t}\n\n\tfor (const methodName of methodNames) {\n\t\tif (!allEmitteryMethods.includes(methodName)) {\n\t\t\tif (typeof methodName !== 'string') {\n\t\t\t\tthrow new TypeError('`methodNames` element must be a string');\n\t\t\t}\n\n\t\t\tthrow new Error(`${methodName} is not Emittery method`);\n\t\t}\n\t}\n\n\treturn methodNames;\n}\n\nconst isMetaEvent = eventName => eventName === listenerAdded || eventName === listenerRemoved;\n\nfunction emitMetaEvent(emitter, eventName, eventData) {\n\tif (isMetaEvent(eventName)) {\n\t\ttry {\n\t\t\tcanEmitMetaEvents = true;\n\t\t\temitter.emit(eventName, eventData);\n\t\t} finally {\n\t\t\tcanEmitMetaEvents = false;\n\t\t}\n\t}\n}\n\nexport default class Emittery {\n\tstatic mixin(emitteryPropertyName, methodNames) {\n\t\tmethodNames = defaultMethodNamesOrAssert(methodNames);\n\t\treturn target => {\n\t\t\tif (typeof target !== 'function') {\n\t\t\t\tthrow new TypeError('`target` must be function');\n\t\t\t}\n\n\t\t\tfor (const methodName of methodNames) {\n\t\t\t\tif (target.prototype[methodName] !== undefined) {\n\t\t\t\t\tthrow new Error(`The property \\`${methodName}\\` already exists on \\`target\\``);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction getEmitteryProperty() {\n\t\t\t\tObject.defineProperty(this, emitteryPropertyName, {\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tvalue: new Emittery(),\n\t\t\t\t});\n\t\t\t\treturn this[emitteryPropertyName];\n\t\t\t}\n\n\t\t\tObject.defineProperty(target.prototype, emitteryPropertyName, {\n\t\t\t\tenumerable: false,\n\t\t\t\tget: getEmitteryProperty,\n\t\t\t});\n\n\t\t\tconst emitteryMethodCaller = methodName => function (...args) {\n\t\t\t\treturn this[emitteryPropertyName][methodName](...args);\n\t\t\t};\n\n\t\t\tfor (const methodName of methodNames) {\n\t\t\t\tObject.defineProperty(target.prototype, methodName, {\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tvalue: emitteryMethodCaller(methodName),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn target;\n\t\t};\n\t}\n\n\tstatic get isDebugEnabled() {\n\t\t// In a browser environment, `globalThis.process` can potentially reference a DOM Element with a `#process` ID,\n\t\t// so instead of just type checking `globalThis.process`, we need to make sure that `globalThis.process.env` exists.\n\t\t// eslint-disable-next-line n/prefer-global/process\n\t\tif (typeof globalThis.process?.env !== 'object') {\n\t\t\treturn isGlobalDebugEnabled;\n\t\t}\n\n\t\t// eslint-disable-next-line n/prefer-global/process\n\t\tconst {env} = globalThis.process ?? {env: {}};\n\t\treturn env.DEBUG === 'emittery' || env.DEBUG === '*' || isGlobalDebugEnabled;\n\t}\n\n\tstatic set isDebugEnabled(newValue) {\n\t\tisGlobalDebugEnabled = newValue;\n\t}\n\n\tconstructor(options = {}) {\n\t\tanyMap.set(this, new Set());\n\t\teventsMap.set(this, new Map());\n\t\tproducersMap.set(this, new Map());\n\n\t\tproducersMap.get(this).set(anyProducer, new Set());\n\n\t\tthis.debug = options.debug ?? {};\n\n\t\tif (this.debug.enabled === undefined) {\n\t\t\tthis.debug.enabled = false;\n\t\t}\n\n\t\tif (!this.debug.logger) {\n\t\t\tthis.debug.logger = (type, debugName, eventName, eventData) => {\n\t\t\t\ttry {\n\t\t\t\t\t// TODO: Use https://github.com/sindresorhus/safe-stringify when the package is more mature. Just copy-paste the code.\n\t\t\t\t\teventData = JSON.stringify(eventData);\n\t\t\t\t} catch {\n\t\t\t\t\teventData = `Object with the following keys failed to stringify: ${Object.keys(eventData).join(',')}`;\n\t\t\t\t}\n\n\t\t\t\tif (typeof eventName === 'symbol' || typeof eventName === 'number') {\n\t\t\t\t\teventName = eventName.toString();\n\t\t\t\t}\n\n\t\t\t\tconst currentTime = new Date();\n\t\t\t\tconst logTime = `${currentTime.getHours()}:${currentTime.getMinutes()}:${currentTime.getSeconds()}.${currentTime.getMilliseconds()}`;\n\t\t\t\tconsole.log(`[${logTime}][emittery:${type}][${debugName}] Event Name: ${eventName}\\n\\tdata: ${eventData}`);\n\t\t\t};\n\t\t}\n\t}\n\n\tlogIfDebugEnabled(type, eventName, eventData) {\n\t\tif (Emittery.isDebugEnabled || this.debug.enabled) {\n\t\t\tthis.debug.logger(type, this.debug.name, eventName, eventData);\n\t\t}\n\t}\n\n\ton(eventNames, listener) {\n\t\tassertListener(listener);\n\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t\tlet set = getListeners(this, eventName);\n\t\t\tif (!set) {\n\t\t\t\tset = new Set();\n\t\t\t\tconst events = eventsMap.get(this);\n\t\t\t\tevents.set(eventName, set);\n\t\t\t}\n\n\t\t\tset.add(listener);\n\n\t\t\tthis.logIfDebugEnabled('subscribe', eventName, undefined);\n\n\t\t\tif (!isMetaEvent(eventName)) {\n\t\t\t\temitMetaEvent(this, listenerAdded, {eventName, listener});\n\t\t\t}\n\t\t}\n\n\t\treturn this.off.bind(this, eventNames, listener);\n\t}\n\n\toff(eventNames, listener) {\n\t\tassertListener(listener);\n\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t\tconst set = getListeners(this, eventName);\n\t\t\tif (set) {\n\t\t\t\tset.delete(listener);\n\t\t\t\tif (set.size === 0) {\n\t\t\t\t\tconst events = eventsMap.get(this);\n\t\t\t\t\tevents.delete(eventName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.logIfDebugEnabled('unsubscribe', eventName, undefined);\n\n\t\t\tif (!isMetaEvent(eventName)) {\n\t\t\t\temitMetaEvent(this, listenerRemoved, {eventName, listener});\n\t\t\t}\n\t\t}\n\t}\n\n\tonce(eventNames) {\n\t\tlet off_;\n\n\t\tconst promise = new Promise(resolve => {\n\t\t\toff_ = this.on(eventNames, data => {\n\t\t\t\toff_();\n\t\t\t\tresolve(data);\n\t\t\t});\n\t\t});\n\n\t\tpromise.off = off_;\n\t\treturn promise;\n\t}\n\n\tevents(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t}\n\n\t\treturn iterator(this, eventNames);\n\t}\n\n\tasync emit(eventName, eventData) {\n\t\tassertEventName(eventName);\n\n\t\tif (isMetaEvent(eventName) && !canEmitMetaEvents) {\n\t\t\tthrow new TypeError('`eventName` cannot be meta event `listenerAdded` or `listenerRemoved`');\n\t\t}\n\n\t\tthis.logIfDebugEnabled('emit', eventName, eventData);\n\n\t\tenqueueProducers(this, eventName, eventData);\n\n\t\tconst listeners = getListeners(this, eventName) ?? new Set();\n\t\tconst anyListeners = anyMap.get(this);\n\t\tconst staticListeners = [...listeners];\n\t\tconst staticAnyListeners = isMetaEvent(eventName) ? [] : [...anyListeners];\n\n\t\tawait resolvedPromise;\n\t\tawait Promise.all([\n\t\t\t...staticListeners.map(async listener => {\n\t\t\t\tif (listeners.has(listener)) {\n\t\t\t\t\treturn listener(eventData);\n\t\t\t\t}\n\t\t\t}),\n\t\t\t...staticAnyListeners.map(async listener => {\n\t\t\t\tif (anyListeners.has(listener)) {\n\t\t\t\t\treturn listener(eventName, eventData);\n\t\t\t\t}\n\t\t\t}),\n\t\t]);\n\t}\n\n\tasync emitSerial(eventName, eventData) {\n\t\tassertEventName(eventName);\n\n\t\tif (isMetaEvent(eventName) && !canEmitMetaEvents) {\n\t\t\tthrow new TypeError('`eventName` cannot be meta event `listenerAdded` or `listenerRemoved`');\n\t\t}\n\n\t\tthis.logIfDebugEnabled('emitSerial', eventName, eventData);\n\n\t\tconst listeners = getListeners(this, eventName) ?? new Set();\n\t\tconst anyListeners = anyMap.get(this);\n\t\tconst staticListeners = [...listeners];\n\t\tconst staticAnyListeners = [...anyListeners];\n\n\t\tawait resolvedPromise;\n\t\t/* eslint-disable no-await-in-loop */\n\t\tfor (const listener of staticListeners) {\n\t\t\tif (listeners.has(listener)) {\n\t\t\t\tawait listener(eventData);\n\t\t\t}\n\t\t}\n\n\t\tfor (const listener of staticAnyListeners) {\n\t\t\tif (anyListeners.has(listener)) {\n\t\t\t\tawait listener(eventName, eventData);\n\t\t\t}\n\t\t}\n\t\t/* eslint-enable no-await-in-loop */\n\t}\n\n\tonAny(listener) {\n\t\tassertListener(listener);\n\n\t\tthis.logIfDebugEnabled('subscribeAny', undefined, undefined);\n\n\t\tanyMap.get(this).add(listener);\n\t\temitMetaEvent(this, listenerAdded, {listener});\n\t\treturn this.offAny.bind(this, listener);\n\t}\n\n\tanyEvent() {\n\t\treturn iterator(this);\n\t}\n\n\toffAny(listener) {\n\t\tassertListener(listener);\n\n\t\tthis.logIfDebugEnabled('unsubscribeAny', undefined, undefined);\n\n\t\temitMetaEvent(this, listenerRemoved, {listener});\n\t\tanyMap.get(this).delete(listener);\n\t}\n\n\tclearListeners(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\n\t\tfor (const eventName of eventNames) {\n\t\t\tthis.logIfDebugEnabled('clear', eventName, undefined);\n\n\t\t\tif (isEventKeyType(eventName)) {\n\t\t\t\tconst set = getListeners(this, eventName);\n\t\t\t\tif (set) {\n\t\t\t\t\tset.clear();\n\t\t\t\t}\n\n\t\t\t\tconst producers = getEventProducers(this, eventName);\n\t\t\t\tif (producers) {\n\t\t\t\t\tfor (const producer of producers) {\n\t\t\t\t\t\tproducer.finish();\n\t\t\t\t\t}\n\n\t\t\t\t\tproducers.clear();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanyMap.get(this).clear();\n\n\t\t\t\tfor (const [eventName, listeners] of eventsMap.get(this).entries()) {\n\t\t\t\t\tlisteners.clear();\n\t\t\t\t\teventsMap.get(this).delete(eventName);\n\t\t\t\t}\n\n\t\t\t\tfor (const [eventName, producers] of producersMap.get(this).entries()) {\n\t\t\t\t\tfor (const producer of producers) {\n\t\t\t\t\t\tproducer.finish();\n\t\t\t\t\t}\n\n\t\t\t\t\tproducers.clear();\n\t\t\t\t\tproducersMap.get(this).delete(eventName);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tlistenerCount(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tlet count = 0;\n\n\t\tfor (const eventName of eventNames) {\n\t\t\tif (isEventKeyType(eventName)) {\n\t\t\t\tcount += anyMap.get(this).size\n\t\t\t\t\t+ (getListeners(this, eventName)?.size ?? 0)\n\t\t\t\t\t+ (getEventProducers(this, eventName)?.size ?? 0)\n\t\t\t\t\t+ (getEventProducers(this)?.size ?? 0);\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (eventName !== undefined) {\n\t\t\t\tassertEventName(eventName);\n\t\t\t}\n\n\t\t\tcount += anyMap.get(this).size;\n\n\t\t\tfor (const value of eventsMap.get(this).values()) {\n\t\t\t\tcount += value.size;\n\t\t\t}\n\n\t\t\tfor (const value of producersMap.get(this).values()) {\n\t\t\t\tcount += value.size;\n\t\t\t}\n\t\t}\n\n\t\treturn count;\n\t}\n\n\tbindMethods(target, methodNames) {\n\t\tif (typeof target !== 'object' || target === null) {\n\t\t\tthrow new TypeError('`target` must be an object');\n\t\t}\n\n\t\tmethodNames = defaultMethodNamesOrAssert(methodNames);\n\n\t\tfor (const methodName of methodNames) {\n\t\t\tif (target[methodName] !== undefined) {\n\t\t\t\tthrow new Error(`The property \\`${methodName}\\` already exists on \\`target\\``);\n\t\t\t}\n\n\t\t\tObject.defineProperty(target, methodName, {\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: this[methodName].bind(this),\n\t\t\t});\n\t\t}\n\t}\n}\n\nconst allEmitteryMethods = Object.getOwnPropertyNames(Emittery.prototype).filter(v => v !== 'constructor');\n\nObject.defineProperty(Emittery, 'listenerAdded', {\n\tvalue: listenerAdded,\n\twritable: false,\n\tenumerable: true,\n\tconfigurable: false,\n});\nObject.defineProperty(Emittery, 'listenerRemoved', {\n\tvalue: listenerRemoved,\n\twritable: false,\n\tenumerable: true,\n\tconfigurable: false,\n});\n","export function Memoize(args) {\n    let hashFunction;\n    let duration;\n    let tags;\n    if (typeof args === 'object') {\n        hashFunction = args.hashFunction;\n        duration = args.expiring;\n        tags = args.tags;\n    }\n    else {\n        hashFunction = args;\n    }\n    return (target, propertyKey, descriptor) => {\n        if (descriptor.value != null) {\n            descriptor.value = getNewFunction(descriptor.value, hashFunction, duration, tags);\n        }\n        else if (descriptor.get != null) {\n            descriptor.get = getNewFunction(descriptor.get, hashFunction, duration, tags);\n        }\n        else {\n            throw 'Only put a Memoize() decorator on a method or get accessor.';\n        }\n    };\n}\nexport function MemoizeExpiring(expiring, hashFunction) {\n    return Memoize({\n        expiring,\n        hashFunction\n    });\n}\nconst clearCacheTagsMap = new Map();\nexport function clear(tags) {\n    const cleared = new Set();\n    for (const tag of tags) {\n        const maps = clearCacheTagsMap.get(tag);\n        if (maps) {\n            for (const mp of maps) {\n                if (!cleared.has(mp)) {\n                    mp.clear();\n                    cleared.add(mp);\n                }\n            }\n        }\n    }\n    return cleared.size;\n}\nfunction getNewFunction(originalMethod, hashFunction, duration = 0, tags) {\n    const propMapName = Symbol(`__memoized_map__`);\n    return function (...args) {\n        let returnedValue;\n        if (!this.hasOwnProperty(propMapName)) {\n            Object.defineProperty(this, propMapName, {\n                configurable: false,\n                enumerable: false,\n                writable: false,\n                value: new Map()\n            });\n        }\n        let myMap = this[propMapName];\n        if (Array.isArray(tags)) {\n            for (const tag of tags) {\n                if (clearCacheTagsMap.has(tag)) {\n                    clearCacheTagsMap.get(tag).push(myMap);\n                }\n                else {\n                    clearCacheTagsMap.set(tag, [myMap]);\n                }\n            }\n        }\n        if (hashFunction || args.length > 0 || duration > 0) {\n            let hashKey;\n            if (hashFunction === true) {\n                hashKey = args.map(a => a.toString()).join('!');\n            }\n            else if (hashFunction) {\n                hashKey = hashFunction.apply(this, args);\n            }\n            else {\n                hashKey = args[0];\n            }\n            const timestampKey = `${hashKey}__timestamp`;\n            let isExpired = false;\n            if (duration > 0) {\n                if (!myMap.has(timestampKey)) {\n                    isExpired = true;\n                }\n                else {\n                    let timestamp = myMap.get(timestampKey);\n                    isExpired = (Date.now() - timestamp) > duration;\n                }\n            }\n            if (myMap.has(hashKey) && !isExpired) {\n                returnedValue = myMap.get(hashKey);\n            }\n            else {\n                returnedValue = originalMethod.apply(this, args);\n                myMap.set(hashKey, returnedValue);\n                if (duration > 0) {\n                    myMap.set(timestampKey, Date.now());\n                }\n            }\n        }\n        else {\n            const hashKey = this;\n            if (myMap.has(hashKey)) {\n                returnedValue = myMap.get(hashKey);\n            }\n            else {\n                returnedValue = originalMethod.apply(this, args);\n                myMap.set(hashKey, returnedValue);\n            }\n        }\n        return returnedValue;\n    };\n}\n//# sourceMappingURL=memoize-decorator.js.map","/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\n\nimport type { Bridge } from '../../bridge';\n\nimport type {\n  ApiResponsePayload,\n  BaseApiRequestMessage,\n  BaseApiResponseMessage,\n  BaseUrlParams,\n  QueryParam,\n} from '../../types';\n\nexport type AlertsRequestApi = 'alerts';\n\nexport type CommonApiResponseMessage =\n  BaseApiResponseMessage<ApiResponsePayload>;\n\nexport interface CommonApiRequestMessage\n  extends BaseApiRequestMessage<BaseUrlParams, unknown> {\n  api: AlertsRequestApi;\n}\n\n// types for deleteEntitiesSuppressedDevicesV1\n\nexport interface DeleteEntitiesSuppressedDevicesV1QueryParams\n  extends BaseUrlParams {\n  ids?: QueryParam;\n}\n\nexport type DeleteEntitiesSuppressedDevicesV1ApiResponse = ApiResponsePayload;\n\nexport type DeleteEntitiesSuppressedDevicesV1ResponseMessage =\n  BaseApiResponseMessage<DeleteEntitiesSuppressedDevicesV1ApiResponse>;\n\nexport interface DeleteEntitiesSuppressedDevicesV1RequestMessage\n  extends BaseApiRequestMessage<DeleteEntitiesSuppressedDevicesV1QueryParams> {\n  api: AlertsRequestApi;\n  method: 'deleteEntitiesSuppressedDevicesV1';\n}\n\n// types for getQueriesAlertsV1\n\nexport interface GetQueriesAlertsV1QueryParams extends BaseUrlParams {\n  filter?: string;\n  limit?: QueryParam;\n  offset?: QueryParam;\n  q?: QueryParam;\n  sort?: QueryParam;\n}\n\nexport type GetQueriesAlertsV1ApiResponse = ApiResponsePayload;\n\nexport type GetQueriesAlertsV1ResponseMessage =\n  BaseApiResponseMessage<GetQueriesAlertsV1ApiResponse>;\n\nexport interface GetQueriesAlertsV1RequestMessage\n  extends BaseApiRequestMessage<GetQueriesAlertsV1QueryParams> {\n  api: AlertsRequestApi;\n  method: 'getQueriesAlertsV1';\n}\n\n// types for getQueriesAlertsV2\n\nexport interface GetQueriesAlertsV2QueryParams extends BaseUrlParams {\n  filter?: string;\n  limit?: QueryParam;\n  offset?: QueryParam;\n  q?: QueryParam;\n  sort?: QueryParam;\n  msspRouteCid?: QueryParam;\n  includeHidden?: QueryParam;\n}\n\nexport type GetQueriesAlertsV2ApiResponse = ApiResponsePayload;\n\nexport type GetQueriesAlertsV2ResponseMessage =\n  BaseApiResponseMessage<GetQueriesAlertsV2ApiResponse>;\n\nexport interface GetQueriesAlertsV2RequestMessage\n  extends BaseApiRequestMessage<GetQueriesAlertsV2QueryParams> {\n  api: AlertsRequestApi;\n  method: 'getQueriesAlertsV2';\n}\n\n// types for patchCombinedAlertsV2\n\nexport type PatchCombinedAlertsV2QueryParams = BaseUrlParams;\n\nexport type PatchCombinedAlertsV2ApiResponse = ApiResponsePayload;\n\nexport type PatchCombinedAlertsV2PostData = Record<string, never>;\n\nexport type PatchCombinedAlertsV2ResponseMessage =\n  BaseApiResponseMessage<PatchCombinedAlertsV2ApiResponse>;\n\nexport interface PatchCombinedAlertsV2RequestMessage\n  extends BaseApiRequestMessage<\n    PatchCombinedAlertsV2QueryParams,\n    PatchCombinedAlertsV2PostData\n  > {\n  api: AlertsRequestApi;\n  method: 'patchCombinedAlertsV2';\n}\n\n// types for patchCombinedAlertsV3\n\nexport interface PatchCombinedAlertsV3QueryParams extends BaseUrlParams {\n  msspRouteCid?: QueryParam;\n  includeHidden?: QueryParam;\n}\n\nexport type PatchCombinedAlertsV3ApiResponse = ApiResponsePayload;\n\nexport type PatchCombinedAlertsV3PostData = Record<string, never>;\n\nexport type PatchCombinedAlertsV3ResponseMessage =\n  BaseApiResponseMessage<PatchCombinedAlertsV3ApiResponse>;\n\nexport interface PatchCombinedAlertsV3RequestMessage\n  extends BaseApiRequestMessage<\n    PatchCombinedAlertsV3QueryParams,\n    PatchCombinedAlertsV3PostData\n  > {\n  api: AlertsRequestApi;\n  method: 'patchCombinedAlertsV3';\n}\n\n// types for patchEntitiesAlertsV2\n\nexport type PatchEntitiesAlertsV2QueryParams = BaseUrlParams;\n\nexport type PatchEntitiesAlertsV2ApiResponse = ApiResponsePayload;\n\nexport type PatchEntitiesAlertsV2PostData = Record<string, never>;\n\nexport type PatchEntitiesAlertsV2ResponseMessage =\n  BaseApiResponseMessage<PatchEntitiesAlertsV2ApiResponse>;\n\nexport interface PatchEntitiesAlertsV2RequestMessage\n  extends BaseApiRequestMessage<\n    PatchEntitiesAlertsV2QueryParams,\n    PatchEntitiesAlertsV2PostData\n  > {\n  api: AlertsRequestApi;\n  method: 'patchEntitiesAlertsV2';\n}\n\n// types for patchEntitiesAlertsV3\n\nexport interface PatchEntitiesAlertsV3QueryParams extends BaseUrlParams {\n  msspRouteCid?: QueryParam;\n}\n\nexport type PatchEntitiesAlertsV3ApiResponse = ApiResponsePayload;\n\nexport type PatchEntitiesAlertsV3PostData = Record<string, never>;\n\nexport type PatchEntitiesAlertsV3ResponseMessage =\n  BaseApiResponseMessage<PatchEntitiesAlertsV3ApiResponse>;\n\nexport interface PatchEntitiesAlertsV3RequestMessage\n  extends BaseApiRequestMessage<\n    PatchEntitiesAlertsV3QueryParams,\n    PatchEntitiesAlertsV3PostData\n  > {\n  api: AlertsRequestApi;\n  method: 'patchEntitiesAlertsV3';\n}\n\n// types for patchEntitiesSuppressedDevicesV1\n\nexport interface PatchEntitiesSuppressedDevicesV1QueryParams\n  extends BaseUrlParams {\n  ids?: QueryParam;\n}\n\nexport type PatchEntitiesSuppressedDevicesV1ApiResponse = ApiResponsePayload;\n\nexport type PatchEntitiesSuppressedDevicesV1PostData = Record<string, never>;\n\nexport type PatchEntitiesSuppressedDevicesV1ResponseMessage =\n  BaseApiResponseMessage<PatchEntitiesSuppressedDevicesV1ApiResponse>;\n\nexport interface PatchEntitiesSuppressedDevicesV1RequestMessage\n  extends BaseApiRequestMessage<\n    PatchEntitiesSuppressedDevicesV1QueryParams,\n    PatchEntitiesSuppressedDevicesV1PostData\n  > {\n  api: AlertsRequestApi;\n  method: 'patchEntitiesSuppressedDevicesV1';\n}\n\n// types for postAggregatesAlertsV1\n\nexport interface PostAggregatesAlertsV1QueryParams extends BaseUrlParams {\n  dateRanges?: QueryParam;\n  field?: QueryParam;\n  filter?: string;\n  from?: QueryParam;\n  include?: QueryParam;\n  interval?: QueryParam;\n  minDocCount?: QueryParam;\n  missing?: QueryParam;\n  name?: QueryParam;\n  q?: QueryParam;\n  ranges?: QueryParam;\n  size?: QueryParam;\n  sort?: QueryParam;\n  subAggregates?: QueryParam;\n  timeZone?: QueryParam;\n  type?: QueryParam;\n}\n\nexport type PostAggregatesAlertsV1ApiResponse = ApiResponsePayload;\n\nexport type PostAggregatesAlertsV1PostData = Record<string, never>;\n\nexport type PostAggregatesAlertsV1ResponseMessage =\n  BaseApiResponseMessage<PostAggregatesAlertsV1ApiResponse>;\n\nexport interface PostAggregatesAlertsV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostAggregatesAlertsV1QueryParams,\n    PostAggregatesAlertsV1PostData\n  > {\n  api: AlertsRequestApi;\n  method: 'postAggregatesAlertsV1';\n}\n\n// types for postAggregatesAlertsV2\n\nexport interface PostAggregatesAlertsV2QueryParams extends BaseUrlParams {\n  dateRanges?: QueryParam;\n  field?: QueryParam;\n  filter?: string;\n  from?: QueryParam;\n  include?: QueryParam;\n  interval?: QueryParam;\n  minDocCount?: QueryParam;\n  missing?: QueryParam;\n  msspRouteCid?: QueryParam;\n  name?: QueryParam;\n  q?: QueryParam;\n  ranges?: QueryParam;\n  size?: QueryParam;\n  sort?: QueryParam;\n  subAggregates?: QueryParam;\n  timeZone?: QueryParam;\n  type?: QueryParam;\n  includeHidden?: QueryParam;\n}\n\nexport type PostAggregatesAlertsV2ApiResponse = ApiResponsePayload;\n\nexport type PostAggregatesAlertsV2PostData = Record<string, never>;\n\nexport type PostAggregatesAlertsV2ResponseMessage =\n  BaseApiResponseMessage<PostAggregatesAlertsV2ApiResponse>;\n\nexport interface PostAggregatesAlertsV2RequestMessage\n  extends BaseApiRequestMessage<\n    PostAggregatesAlertsV2QueryParams,\n    PostAggregatesAlertsV2PostData\n  > {\n  api: AlertsRequestApi;\n  method: 'postAggregatesAlertsV2';\n}\n\n// types for postEntitiesAlertsV1\n\nexport interface PostEntitiesAlertsV1QueryParams extends BaseUrlParams {\n  ids?: QueryParam;\n}\n\nexport type PostEntitiesAlertsV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesAlertsV1PostData = Record<string, never>;\n\nexport type PostEntitiesAlertsV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesAlertsV1ApiResponse>;\n\nexport interface PostEntitiesAlertsV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesAlertsV1QueryParams,\n    PostEntitiesAlertsV1PostData\n  > {\n  api: AlertsRequestApi;\n  method: 'postEntitiesAlertsV1';\n}\n\n// types for postEntitiesAlertsV2\n\nexport interface PostEntitiesAlertsV2QueryParams extends BaseUrlParams {\n  compositeIds?: QueryParam;\n}\n\nexport type PostEntitiesAlertsV2ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesAlertsV2PostData = Record<string, never>;\n\nexport type PostEntitiesAlertsV2ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesAlertsV2ApiResponse>;\n\nexport interface PostEntitiesAlertsV2RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesAlertsV2QueryParams,\n    PostEntitiesAlertsV2PostData\n  > {\n  api: AlertsRequestApi;\n  method: 'postEntitiesAlertsV2';\n}\n\n// types for postEntitiesSuppressedDevicesV1\n\nexport type PostEntitiesSuppressedDevicesV1QueryParams = BaseUrlParams;\n\nexport type PostEntitiesSuppressedDevicesV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesSuppressedDevicesV1PostData = Record<string, never>;\n\nexport type PostEntitiesSuppressedDevicesV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesSuppressedDevicesV1ApiResponse>;\n\nexport interface PostEntitiesSuppressedDevicesV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesSuppressedDevicesV1QueryParams,\n    PostEntitiesSuppressedDevicesV1PostData\n  > {\n  api: AlertsRequestApi;\n  method: 'postEntitiesSuppressedDevicesV1';\n}\n\n// general types\n\nexport type AlertsApiRequestMessage =\n  | DeleteEntitiesSuppressedDevicesV1RequestMessage\n  | GetQueriesAlertsV1RequestMessage\n  | GetQueriesAlertsV2RequestMessage\n  | PatchCombinedAlertsV2RequestMessage\n  | PatchCombinedAlertsV3RequestMessage\n  | PatchEntitiesAlertsV2RequestMessage\n  | PatchEntitiesAlertsV3RequestMessage\n  | PatchEntitiesSuppressedDevicesV1RequestMessage\n  | PostAggregatesAlertsV1RequestMessage\n  | PostAggregatesAlertsV2RequestMessage\n  | PostEntitiesAlertsV1RequestMessage\n  | PostEntitiesAlertsV2RequestMessage\n  | PostEntitiesSuppressedDevicesV1RequestMessage;\n\nexport type AlertsApiResponseMessage =\n  | DeleteEntitiesSuppressedDevicesV1ResponseMessage\n  | GetQueriesAlertsV1ResponseMessage\n  | GetQueriesAlertsV2ResponseMessage\n  | PatchCombinedAlertsV2ResponseMessage\n  | PatchCombinedAlertsV3ResponseMessage\n  | PatchEntitiesAlertsV2ResponseMessage\n  | PatchEntitiesAlertsV3ResponseMessage\n  | PatchEntitiesSuppressedDevicesV1ResponseMessage\n  | PostAggregatesAlertsV1ResponseMessage\n  | PostAggregatesAlertsV2ResponseMessage\n  | PostEntitiesAlertsV1ResponseMessage\n  | PostEntitiesAlertsV2ResponseMessage\n  | PostEntitiesSuppressedDevicesV1ResponseMessage;\n\nexport class AlertsApiBridge {\n  private bridge;\n\n  constructor(bridge: Bridge) {\n    this.bridge = bridge;\n  }\n\n  getBridge() {\n    return this.bridge;\n  }\n\n  async deleteEntitiesSuppressedDevicesV1(\n    urlParams: DeleteEntitiesSuppressedDevicesV1QueryParams = {},\n  ): Promise<DeleteEntitiesSuppressedDevicesV1ApiResponse> {\n    const message: DeleteEntitiesSuppressedDevicesV1RequestMessage = {\n      type: 'api',\n      api: 'alerts',\n      method: 'deleteEntitiesSuppressedDevicesV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  /**\n   * @deprecated This method is deprecated. Use getQueriesAlertsV2 instead.\n   */\n  async getQueriesAlertsV1(\n    urlParams: GetQueriesAlertsV1QueryParams = {},\n  ): Promise<GetQueriesAlertsV1ApiResponse> {\n    console.warn('This method is deprecated. Use getQueriesAlertsV2 instead.');\n    const message: GetQueriesAlertsV1RequestMessage = {\n      type: 'api',\n      api: 'alerts',\n      method: 'getQueriesAlertsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getQueriesAlertsV2(\n    urlParams: GetQueriesAlertsV2QueryParams = {},\n  ): Promise<GetQueriesAlertsV2ApiResponse> {\n    const message: GetQueriesAlertsV2RequestMessage = {\n      type: 'api',\n      api: 'alerts',\n      method: 'getQueriesAlertsV2',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  /**\n   * @deprecated This method is deprecated. Use patchCombinedAlertsV3 instead.\n   */\n  async patchCombinedAlertsV2(\n    postBody: PatchCombinedAlertsV2PostData,\n    urlParams: PatchCombinedAlertsV2QueryParams = {},\n  ): Promise<PatchCombinedAlertsV2ApiResponse> {\n    console.warn(\n      'This method is deprecated. Use patchCombinedAlertsV3 instead.',\n    );\n    const message: PatchCombinedAlertsV2RequestMessage = {\n      type: 'api',\n      api: 'alerts',\n      method: 'patchCombinedAlertsV2',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async patchCombinedAlertsV3(\n    postBody: PatchCombinedAlertsV3PostData,\n    urlParams: PatchCombinedAlertsV3QueryParams = {},\n  ): Promise<PatchCombinedAlertsV3ApiResponse> {\n    const message: PatchCombinedAlertsV3RequestMessage = {\n      type: 'api',\n      api: 'alerts',\n      method: 'patchCombinedAlertsV3',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  /**\n   * @deprecated This method is deprecated. Use patchEntitiesAlertsV3 instead.\n   */\n  async patchEntitiesAlertsV2(\n    postBody: PatchEntitiesAlertsV2PostData,\n    urlParams: PatchEntitiesAlertsV2QueryParams = {},\n  ): Promise<PatchEntitiesAlertsV2ApiResponse> {\n    console.warn(\n      'This method is deprecated. Use patchEntitiesAlertsV3 instead.',\n    );\n    const message: PatchEntitiesAlertsV2RequestMessage = {\n      type: 'api',\n      api: 'alerts',\n      method: 'patchEntitiesAlertsV2',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async patchEntitiesAlertsV3(\n    postBody: PatchEntitiesAlertsV3PostData,\n    urlParams: PatchEntitiesAlertsV3QueryParams = {},\n  ): Promise<PatchEntitiesAlertsV3ApiResponse> {\n    const message: PatchEntitiesAlertsV3RequestMessage = {\n      type: 'api',\n      api: 'alerts',\n      method: 'patchEntitiesAlertsV3',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async patchEntitiesSuppressedDevicesV1(\n    postBody: PatchEntitiesSuppressedDevicesV1PostData,\n    urlParams: PatchEntitiesSuppressedDevicesV1QueryParams = {},\n  ): Promise<PatchEntitiesSuppressedDevicesV1ApiResponse> {\n    const message: PatchEntitiesSuppressedDevicesV1RequestMessage = {\n      type: 'api',\n      api: 'alerts',\n      method: 'patchEntitiesSuppressedDevicesV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  /**\n   * @deprecated This method is deprecated. Use postAggregatesAlertsV2 instead.\n   */\n  async postAggregatesAlertsV1(\n    postBody: PostAggregatesAlertsV1PostData,\n    urlParams: PostAggregatesAlertsV1QueryParams = {},\n  ): Promise<PostAggregatesAlertsV1ApiResponse> {\n    console.warn(\n      'This method is deprecated. Use postAggregatesAlertsV2 instead.',\n    );\n    const message: PostAggregatesAlertsV1RequestMessage = {\n      type: 'api',\n      api: 'alerts',\n      method: 'postAggregatesAlertsV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postAggregatesAlertsV2(\n    postBody: PostAggregatesAlertsV2PostData,\n    urlParams: PostAggregatesAlertsV2QueryParams = {},\n  ): Promise<PostAggregatesAlertsV2ApiResponse> {\n    const message: PostAggregatesAlertsV2RequestMessage = {\n      type: 'api',\n      api: 'alerts',\n      method: 'postAggregatesAlertsV2',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  /**\n   * @deprecated This method is deprecated. Use postEntitiesAlertsV2 instead.\n   */\n  async postEntitiesAlertsV1(\n    postBody: PostEntitiesAlertsV1PostData,\n    urlParams: PostEntitiesAlertsV1QueryParams = {},\n  ): Promise<PostEntitiesAlertsV1ApiResponse> {\n    console.warn(\n      'This method is deprecated. Use postEntitiesAlertsV2 instead.',\n    );\n    const message: PostEntitiesAlertsV1RequestMessage = {\n      type: 'api',\n      api: 'alerts',\n      method: 'postEntitiesAlertsV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesAlertsV2(\n    postBody: PostEntitiesAlertsV2PostData,\n    urlParams: PostEntitiesAlertsV2QueryParams = {},\n  ): Promise<PostEntitiesAlertsV2ApiResponse> {\n    const message: PostEntitiesAlertsV2RequestMessage = {\n      type: 'api',\n      api: 'alerts',\n      method: 'postEntitiesAlertsV2',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesSuppressedDevicesV1(\n    postBody: PostEntitiesSuppressedDevicesV1PostData,\n    urlParams: PostEntitiesSuppressedDevicesV1QueryParams = {},\n  ): Promise<PostEntitiesSuppressedDevicesV1ApiResponse> {\n    const message: PostEntitiesSuppressedDevicesV1RequestMessage = {\n      type: 'api',\n      api: 'alerts',\n      method: 'postEntitiesSuppressedDevicesV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n}\n","/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\n\nimport type { Bridge } from '../../bridge';\n\nimport type {\n  ApiResponsePayload,\n  BaseApiRequestMessage,\n  BaseApiResponseMessage,\n  BaseUrlParams,\n} from '../../types';\n\nexport type CloudSecurityAssetsRequestApi = 'cloudSecurityAssets';\n\nexport type CommonApiResponseMessage =\n  BaseApiResponseMessage<ApiResponsePayload>;\n\nexport interface CommonApiRequestMessage\n  extends BaseApiRequestMessage<BaseUrlParams, unknown> {\n  api: CloudSecurityAssetsRequestApi;\n}\n\n// types for getAggregatesResourcesCountByManagedByV1\n\nexport interface GetAggregatesResourcesCountByManagedByV1QueryParams\n  extends BaseUrlParams {\n  filter?: string;\n}\n\nexport type GetAggregatesResourcesCountByManagedByV1ApiResponse =\n  ApiResponsePayload;\n\nexport type GetAggregatesResourcesCountByManagedByV1ResponseMessage =\n  BaseApiResponseMessage<GetAggregatesResourcesCountByManagedByV1ApiResponse>;\n\nexport interface GetAggregatesResourcesCountByManagedByV1RequestMessage\n  extends BaseApiRequestMessage<GetAggregatesResourcesCountByManagedByV1QueryParams> {\n  api: CloudSecurityAssetsRequestApi;\n  method: 'getAggregatesResourcesCountByManagedByV1';\n}\n\n// general types\n\nexport type CloudSecurityAssetsApiRequestMessage =\n  GetAggregatesResourcesCountByManagedByV1RequestMessage;\n\nexport type CloudSecurityAssetsApiResponseMessage =\n  GetAggregatesResourcesCountByManagedByV1ResponseMessage;\n\nexport class CloudSecurityAssetsApiBridge {\n  private bridge;\n\n  constructor(bridge: Bridge) {\n    this.bridge = bridge;\n  }\n\n  getBridge() {\n    return this.bridge;\n  }\n\n  async getAggregatesResourcesCountByManagedByV1(\n    urlParams: GetAggregatesResourcesCountByManagedByV1QueryParams = {},\n  ): Promise<GetAggregatesResourcesCountByManagedByV1ApiResponse> {\n    const message: GetAggregatesResourcesCountByManagedByV1RequestMessage = {\n      type: 'api',\n      api: 'cloudSecurityAssets',\n      method: 'getAggregatesResourcesCountByManagedByV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n}\n","/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\n\nimport type { Bridge } from '../../bridge';\n\nimport type {\n  ApiResponsePayload,\n  BaseApiRequestMessage,\n  BaseApiResponseMessage,\n  BaseUrlParams,\n  QueryParam,\n} from '../../types';\n\nexport type CloudregistrationRequestApi = 'cloudregistration';\n\nexport type CommonApiResponseMessage =\n  BaseApiResponseMessage<ApiResponsePayload>;\n\nexport interface CommonApiRequestMessage\n  extends BaseApiRequestMessage<BaseUrlParams, unknown> {\n  api: CloudregistrationRequestApi;\n}\n\n// types for getCloudSecurityRegistrationAwsCombinedAccountsV1\n\nexport interface GetCloudSecurityRegistrationAwsCombinedAccountsV1QueryParams\n  extends BaseUrlParams {\n  filter?: string;\n  sort?: QueryParam;\n  nextToken?: QueryParam;\n  limit?: QueryParam;\n  offset?: QueryParam;\n  ids?: QueryParam;\n  organizationIds?: QueryParam;\n  status?: QueryParam;\n  updateUrls?: QueryParam;\n}\n\nexport type GetCloudSecurityRegistrationAwsCombinedAccountsV1ApiResponse =\n  ApiResponsePayload;\n\nexport type GetCloudSecurityRegistrationAwsCombinedAccountsV1ResponseMessage =\n  BaseApiResponseMessage<GetCloudSecurityRegistrationAwsCombinedAccountsV1ApiResponse>;\n\nexport interface GetCloudSecurityRegistrationAwsCombinedAccountsV1RequestMessage\n  extends BaseApiRequestMessage<GetCloudSecurityRegistrationAwsCombinedAccountsV1QueryParams> {\n  api: CloudregistrationRequestApi;\n  method: 'getCloudSecurityRegistrationAwsCombinedAccountsV1';\n}\n\n// general types\n\nexport type CloudregistrationApiRequestMessage =\n  GetCloudSecurityRegistrationAwsCombinedAccountsV1RequestMessage;\n\nexport type CloudregistrationApiResponseMessage =\n  GetCloudSecurityRegistrationAwsCombinedAccountsV1ResponseMessage;\n\nexport class CloudregistrationApiBridge {\n  private bridge;\n\n  constructor(bridge: Bridge) {\n    this.bridge = bridge;\n  }\n\n  getBridge() {\n    return this.bridge;\n  }\n\n  async getCloudSecurityRegistrationAwsCombinedAccountsV1(\n    urlParams: GetCloudSecurityRegistrationAwsCombinedAccountsV1QueryParams = {},\n  ): Promise<GetCloudSecurityRegistrationAwsCombinedAccountsV1ApiResponse> {\n    const message: GetCloudSecurityRegistrationAwsCombinedAccountsV1RequestMessage =\n      {\n        type: 'api',\n        api: 'cloudregistration',\n        method: 'getCloudSecurityRegistrationAwsCombinedAccountsV1',\n        payload: {\n          params: urlParams,\n        },\n      };\n\n    return this.bridge.postMessage(message);\n  }\n}\n","/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\n\nimport type { Bridge } from '../../bridge';\n\nimport type {\n  ApiResponsePayload,\n  BaseApiRequestMessage,\n  BaseApiResponseMessage,\n  BaseUrlParams,\n  QueryParam,\n} from '../../types';\n\nexport type ContainerSecurityRequestApi = 'containerSecurity';\n\nexport type CommonApiResponseMessage =\n  BaseApiResponseMessage<ApiResponsePayload>;\n\nexport interface CommonApiRequestMessage\n  extends BaseApiRequestMessage<BaseUrlParams, unknown> {\n  api: ContainerSecurityRequestApi;\n}\n\n// types for getAggregatesClustersCountV1\n\nexport interface GetAggregatesClustersCountV1QueryParams extends BaseUrlParams {\n  filter?: string;\n}\n\nexport type GetAggregatesClustersCountV1ApiResponse = ApiResponsePayload;\n\nexport type GetAggregatesClustersCountV1ResponseMessage =\n  BaseApiResponseMessage<GetAggregatesClustersCountV1ApiResponse>;\n\nexport interface GetAggregatesClustersCountV1RequestMessage\n  extends BaseApiRequestMessage<GetAggregatesClustersCountV1QueryParams> {\n  api: ContainerSecurityRequestApi;\n  method: 'getAggregatesClustersCountV1';\n}\n\n// types for getAggregatesContainersCountV1\n\nexport interface GetAggregatesContainersCountV1QueryParams\n  extends BaseUrlParams {\n  filter?: string;\n}\n\nexport type GetAggregatesContainersCountV1ApiResponse = ApiResponsePayload;\n\nexport type GetAggregatesContainersCountV1ResponseMessage =\n  BaseApiResponseMessage<GetAggregatesContainersCountV1ApiResponse>;\n\nexport interface GetAggregatesContainersCountV1RequestMessage\n  extends BaseApiRequestMessage<GetAggregatesContainersCountV1QueryParams> {\n  api: ContainerSecurityRequestApi;\n  method: 'getAggregatesContainersCountV1';\n}\n\n// types for getAggregatesContainersGroupByManagedV1\n\nexport interface GetAggregatesContainersGroupByManagedV1QueryParams\n  extends BaseUrlParams {\n  filter?: string;\n  limit?: QueryParam;\n  offset?: QueryParam;\n}\n\nexport type GetAggregatesContainersGroupByManagedV1ApiResponse =\n  ApiResponsePayload;\n\nexport type GetAggregatesContainersGroupByManagedV1ResponseMessage =\n  BaseApiResponseMessage<GetAggregatesContainersGroupByManagedV1ApiResponse>;\n\nexport interface GetAggregatesContainersGroupByManagedV1RequestMessage\n  extends BaseApiRequestMessage<GetAggregatesContainersGroupByManagedV1QueryParams> {\n  api: ContainerSecurityRequestApi;\n  method: 'getAggregatesContainersGroupByManagedV1';\n}\n\n// types for getAggregatesContainersSensorCoverageV1\n\nexport interface GetAggregatesContainersSensorCoverageV1QueryParams\n  extends BaseUrlParams {\n  filter?: string;\n  limit?: QueryParam;\n  offset?: QueryParam;\n}\n\nexport type GetAggregatesContainersSensorCoverageV1ApiResponse =\n  ApiResponsePayload;\n\nexport type GetAggregatesContainersSensorCoverageV1ResponseMessage =\n  BaseApiResponseMessage<GetAggregatesContainersSensorCoverageV1ApiResponse>;\n\nexport interface GetAggregatesContainersSensorCoverageV1RequestMessage\n  extends BaseApiRequestMessage<GetAggregatesContainersSensorCoverageV1QueryParams> {\n  api: ContainerSecurityRequestApi;\n  method: 'getAggregatesContainersSensorCoverageV1';\n}\n\n// types for getAggregatesImagesCountByStateV1\n\nexport interface GetAggregatesImagesCountByStateV1QueryParams\n  extends BaseUrlParams {\n  filter?: string;\n}\n\nexport type GetAggregatesImagesCountByStateV1ApiResponse = ApiResponsePayload;\n\nexport type GetAggregatesImagesCountByStateV1ResponseMessage =\n  BaseApiResponseMessage<GetAggregatesImagesCountByStateV1ApiResponse>;\n\nexport interface GetAggregatesImagesCountByStateV1RequestMessage\n  extends BaseApiRequestMessage<GetAggregatesImagesCountByStateV1QueryParams> {\n  api: ContainerSecurityRequestApi;\n  method: 'getAggregatesImagesCountByStateV1';\n}\n\n// types for getAggregatesNodesCountV1\n\nexport interface GetAggregatesNodesCountV1QueryParams extends BaseUrlParams {\n  filter?: string;\n}\n\nexport type GetAggregatesNodesCountV1ApiResponse = ApiResponsePayload;\n\nexport type GetAggregatesNodesCountV1ResponseMessage =\n  BaseApiResponseMessage<GetAggregatesNodesCountV1ApiResponse>;\n\nexport interface GetAggregatesNodesCountV1RequestMessage\n  extends BaseApiRequestMessage<GetAggregatesNodesCountV1QueryParams> {\n  api: ContainerSecurityRequestApi;\n  method: 'getAggregatesNodesCountV1';\n}\n\n// types for getAggregatesPodsCountV1\n\nexport interface GetAggregatesPodsCountV1QueryParams extends BaseUrlParams {\n  filter?: string;\n}\n\nexport type GetAggregatesPodsCountV1ApiResponse = ApiResponsePayload;\n\nexport type GetAggregatesPodsCountV1ResponseMessage =\n  BaseApiResponseMessage<GetAggregatesPodsCountV1ApiResponse>;\n\nexport interface GetAggregatesPodsCountV1RequestMessage\n  extends BaseApiRequestMessage<GetAggregatesPodsCountV1QueryParams> {\n  api: ContainerSecurityRequestApi;\n  method: 'getAggregatesPodsCountV1';\n}\n\n// types for getAggregatesUnidentifiedContainersCountV1\n\nexport interface GetAggregatesUnidentifiedContainersCountV1QueryParams\n  extends BaseUrlParams {\n  filter?: string;\n}\n\nexport type GetAggregatesUnidentifiedContainersCountV1ApiResponse =\n  ApiResponsePayload;\n\nexport type GetAggregatesUnidentifiedContainersCountV1ResponseMessage =\n  BaseApiResponseMessage<GetAggregatesUnidentifiedContainersCountV1ApiResponse>;\n\nexport interface GetAggregatesUnidentifiedContainersCountV1RequestMessage\n  extends BaseApiRequestMessage<GetAggregatesUnidentifiedContainersCountV1QueryParams> {\n  api: ContainerSecurityRequestApi;\n  method: 'getAggregatesUnidentifiedContainersCountV1';\n}\n\n// types for getCombinedClustersV1\n\nexport interface GetCombinedClustersV1QueryParams extends BaseUrlParams {\n  filter?: string;\n  limit?: QueryParam;\n  offset?: QueryParam;\n  sort?: QueryParam;\n}\n\nexport type GetCombinedClustersV1ApiResponse = ApiResponsePayload;\n\nexport type GetCombinedClustersV1ResponseMessage =\n  BaseApiResponseMessage<GetCombinedClustersV1ApiResponse>;\n\nexport interface GetCombinedClustersV1RequestMessage\n  extends BaseApiRequestMessage<GetCombinedClustersV1QueryParams> {\n  api: ContainerSecurityRequestApi;\n  method: 'getCombinedClustersV1';\n}\n\n// general types\n\nexport type ContainerSecurityApiRequestMessage =\n  | GetAggregatesClustersCountV1RequestMessage\n  | GetAggregatesContainersCountV1RequestMessage\n  | GetAggregatesContainersGroupByManagedV1RequestMessage\n  | GetAggregatesContainersSensorCoverageV1RequestMessage\n  | GetAggregatesImagesCountByStateV1RequestMessage\n  | GetAggregatesNodesCountV1RequestMessage\n  | GetAggregatesPodsCountV1RequestMessage\n  | GetAggregatesUnidentifiedContainersCountV1RequestMessage\n  | GetCombinedClustersV1RequestMessage;\n\nexport type ContainerSecurityApiResponseMessage =\n  | GetAggregatesClustersCountV1ResponseMessage\n  | GetAggregatesContainersCountV1ResponseMessage\n  | GetAggregatesContainersGroupByManagedV1ResponseMessage\n  | GetAggregatesContainersSensorCoverageV1ResponseMessage\n  | GetAggregatesImagesCountByStateV1ResponseMessage\n  | GetAggregatesNodesCountV1ResponseMessage\n  | GetAggregatesPodsCountV1ResponseMessage\n  | GetAggregatesUnidentifiedContainersCountV1ResponseMessage\n  | GetCombinedClustersV1ResponseMessage;\n\nexport class ContainerSecurityApiBridge {\n  private bridge;\n\n  constructor(bridge: Bridge) {\n    this.bridge = bridge;\n  }\n\n  getBridge() {\n    return this.bridge;\n  }\n\n  async getAggregatesClustersCountV1(\n    urlParams: GetAggregatesClustersCountV1QueryParams = {},\n  ): Promise<GetAggregatesClustersCountV1ApiResponse> {\n    const message: GetAggregatesClustersCountV1RequestMessage = {\n      type: 'api',\n      api: 'containerSecurity',\n      method: 'getAggregatesClustersCountV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getAggregatesContainersCountV1(\n    urlParams: GetAggregatesContainersCountV1QueryParams = {},\n  ): Promise<GetAggregatesContainersCountV1ApiResponse> {\n    const message: GetAggregatesContainersCountV1RequestMessage = {\n      type: 'api',\n      api: 'containerSecurity',\n      method: 'getAggregatesContainersCountV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getAggregatesContainersGroupByManagedV1(\n    urlParams: GetAggregatesContainersGroupByManagedV1QueryParams = {},\n  ): Promise<GetAggregatesContainersGroupByManagedV1ApiResponse> {\n    const message: GetAggregatesContainersGroupByManagedV1RequestMessage = {\n      type: 'api',\n      api: 'containerSecurity',\n      method: 'getAggregatesContainersGroupByManagedV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getAggregatesContainersSensorCoverageV1(\n    urlParams: GetAggregatesContainersSensorCoverageV1QueryParams = {},\n  ): Promise<GetAggregatesContainersSensorCoverageV1ApiResponse> {\n    const message: GetAggregatesContainersSensorCoverageV1RequestMessage = {\n      type: 'api',\n      api: 'containerSecurity',\n      method: 'getAggregatesContainersSensorCoverageV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getAggregatesImagesCountByStateV1(\n    urlParams: GetAggregatesImagesCountByStateV1QueryParams = {},\n  ): Promise<GetAggregatesImagesCountByStateV1ApiResponse> {\n    const message: GetAggregatesImagesCountByStateV1RequestMessage = {\n      type: 'api',\n      api: 'containerSecurity',\n      method: 'getAggregatesImagesCountByStateV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getAggregatesNodesCountV1(\n    urlParams: GetAggregatesNodesCountV1QueryParams = {},\n  ): Promise<GetAggregatesNodesCountV1ApiResponse> {\n    const message: GetAggregatesNodesCountV1RequestMessage = {\n      type: 'api',\n      api: 'containerSecurity',\n      method: 'getAggregatesNodesCountV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getAggregatesPodsCountV1(\n    urlParams: GetAggregatesPodsCountV1QueryParams = {},\n  ): Promise<GetAggregatesPodsCountV1ApiResponse> {\n    const message: GetAggregatesPodsCountV1RequestMessage = {\n      type: 'api',\n      api: 'containerSecurity',\n      method: 'getAggregatesPodsCountV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getAggregatesUnidentifiedContainersCountV1(\n    urlParams: GetAggregatesUnidentifiedContainersCountV1QueryParams = {},\n  ): Promise<GetAggregatesUnidentifiedContainersCountV1ApiResponse> {\n    const message: GetAggregatesUnidentifiedContainersCountV1RequestMessage = {\n      type: 'api',\n      api: 'containerSecurity',\n      method: 'getAggregatesUnidentifiedContainersCountV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getCombinedClustersV1(\n    urlParams: GetCombinedClustersV1QueryParams = {},\n  ): Promise<GetCombinedClustersV1ApiResponse> {\n    const message: GetCombinedClustersV1RequestMessage = {\n      type: 'api',\n      api: 'containerSecurity',\n      method: 'getCombinedClustersV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n}\n","/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\n\nimport type { Bridge } from '../../bridge';\n\nimport type {\n  ApiResponsePayload,\n  BaseApiRequestMessage,\n  BaseApiResponseMessage,\n  BaseUrlParams,\n  QueryParam,\n} from '../../types';\n\nexport type CspmRegistrationRequestApi = 'cspmRegistration';\n\nexport type CommonApiResponseMessage =\n  BaseApiResponseMessage<ApiResponsePayload>;\n\nexport interface CommonApiRequestMessage\n  extends BaseApiRequestMessage<BaseUrlParams, unknown> {\n  api: CspmRegistrationRequestApi;\n}\n\n// types for getCspmregistrationCloudConnectCspmAzureCombinedAccountsV1\n\nexport interface GetCspmregistrationCloudConnectCspmAzureCombinedAccountsV1QueryParams\n  extends BaseUrlParams {\n  filter?: string;\n  sort?: QueryParam;\n  nextToken?: QueryParam;\n  limit?: QueryParam;\n  offset?: QueryParam;\n}\n\nexport type GetCspmregistrationCloudConnectCspmAzureCombinedAccountsV1ApiResponse =\n  ApiResponsePayload;\n\nexport type GetCspmregistrationCloudConnectCspmAzureCombinedAccountsV1ResponseMessage =\n  BaseApiResponseMessage<GetCspmregistrationCloudConnectCspmAzureCombinedAccountsV1ApiResponse>;\n\nexport interface GetCspmregistrationCloudConnectCspmAzureCombinedAccountsV1RequestMessage\n  extends BaseApiRequestMessage<GetCspmregistrationCloudConnectCspmAzureCombinedAccountsV1QueryParams> {\n  api: CspmRegistrationRequestApi;\n  method: 'getCspmregistrationCloudConnectCspmAzureCombinedAccountsV1';\n}\n\n// types for getCspmregistrationCloudConnectCspmGcpCombinedAccountsV1\n\nexport interface GetCspmregistrationCloudConnectCspmGcpCombinedAccountsV1QueryParams\n  extends BaseUrlParams {\n  filter?: string;\n  sort?: QueryParam;\n  nextToken?: QueryParam;\n  limit?: QueryParam;\n  offset?: QueryParam;\n}\n\nexport type GetCspmregistrationCloudConnectCspmGcpCombinedAccountsV1ApiResponse =\n  ApiResponsePayload;\n\nexport type GetCspmregistrationCloudConnectCspmGcpCombinedAccountsV1ResponseMessage =\n  BaseApiResponseMessage<GetCspmregistrationCloudConnectCspmGcpCombinedAccountsV1ApiResponse>;\n\nexport interface GetCspmregistrationCloudConnectCspmGcpCombinedAccountsV1RequestMessage\n  extends BaseApiRequestMessage<GetCspmregistrationCloudConnectCspmGcpCombinedAccountsV1QueryParams> {\n  api: CspmRegistrationRequestApi;\n  method: 'getCspmregistrationCloudConnectCspmGcpCombinedAccountsV1';\n}\n\n// general types\n\nexport type CspmRegistrationApiRequestMessage =\n  | GetCspmregistrationCloudConnectCspmAzureCombinedAccountsV1RequestMessage\n  | GetCspmregistrationCloudConnectCspmGcpCombinedAccountsV1RequestMessage;\n\nexport type CspmRegistrationApiResponseMessage =\n  | GetCspmregistrationCloudConnectCspmAzureCombinedAccountsV1ResponseMessage\n  | GetCspmregistrationCloudConnectCspmGcpCombinedAccountsV1ResponseMessage;\n\nexport class CspmRegistrationApiBridge {\n  private bridge;\n\n  constructor(bridge: Bridge) {\n    this.bridge = bridge;\n  }\n\n  getBridge() {\n    return this.bridge;\n  }\n\n  async getCspmregistrationCloudConnectCspmAzureCombinedAccountsV1(\n    urlParams: GetCspmregistrationCloudConnectCspmAzureCombinedAccountsV1QueryParams = {},\n  ): Promise<GetCspmregistrationCloudConnectCspmAzureCombinedAccountsV1ApiResponse> {\n    const message: GetCspmregistrationCloudConnectCspmAzureCombinedAccountsV1RequestMessage =\n      {\n        type: 'api',\n        api: 'cspmRegistration',\n        method: 'getCspmregistrationCloudConnectCspmAzureCombinedAccountsV1',\n        payload: {\n          params: urlParams,\n        },\n      };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getCspmregistrationCloudConnectCspmGcpCombinedAccountsV1(\n    urlParams: GetCspmregistrationCloudConnectCspmGcpCombinedAccountsV1QueryParams = {},\n  ): Promise<GetCspmregistrationCloudConnectCspmGcpCombinedAccountsV1ApiResponse> {\n    const message: GetCspmregistrationCloudConnectCspmGcpCombinedAccountsV1RequestMessage =\n      {\n        type: 'api',\n        api: 'cspmRegistration',\n        method: 'getCspmregistrationCloudConnectCspmGcpCombinedAccountsV1',\n        payload: {\n          params: urlParams,\n        },\n      };\n\n    return this.bridge.postMessage(message);\n  }\n}\n","/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\n\nimport type { Bridge } from '../../bridge';\n\nimport type {\n  ApiResponsePayload,\n  BaseApiRequestMessage,\n  BaseApiResponseMessage,\n  BaseUrlParams,\n  QueryParam,\n} from '../../types';\n\nexport type CustomobjectsRequestApi = 'customobjects';\n\nexport type CommonApiResponseMessage =\n  BaseApiResponseMessage<ApiResponsePayload>;\n\nexport interface CommonApiRequestMessage\n  extends BaseApiRequestMessage<BaseUrlParams, unknown> {\n  api: CustomobjectsRequestApi;\n}\n\n// types for deleteV1CollectionsCollectionNameObjectsObjectKey\n\nexport type DeleteV1CollectionsCollectionNameObjectsObjectKeyQueryParams =\n  BaseUrlParams;\n\nexport type DeleteV1CollectionsCollectionNameObjectsObjectKeyApiResponse =\n  ApiResponsePayload;\n\nexport type DeleteV1CollectionsCollectionNameObjectsObjectKeyResponseMessage =\n  BaseApiResponseMessage<DeleteV1CollectionsCollectionNameObjectsObjectKeyApiResponse>;\n\nexport interface DeleteV1CollectionsCollectionNameObjectsObjectKeyRequestMessage\n  extends BaseApiRequestMessage<DeleteV1CollectionsCollectionNameObjectsObjectKeyQueryParams> {\n  api: CustomobjectsRequestApi;\n  method: 'deleteV1CollectionsCollectionNameObjectsObjectKey';\n}\n\n// types for getV1Collections\n\nexport interface GetV1CollectionsQueryParams extends BaseUrlParams {\n  startKey?: QueryParam;\n  endKey?: QueryParam;\n  limit?: QueryParam;\n}\n\nexport type GetV1CollectionsApiResponse = ApiResponsePayload;\n\nexport type GetV1CollectionsResponseMessage =\n  BaseApiResponseMessage<GetV1CollectionsApiResponse>;\n\nexport interface GetV1CollectionsRequestMessage\n  extends BaseApiRequestMessage<GetV1CollectionsQueryParams> {\n  api: CustomobjectsRequestApi;\n  method: 'getV1Collections';\n}\n\n// types for getV1CollectionsCollectionNameObjects\n\nexport interface GetV1CollectionsCollectionNameObjectsQueryParams\n  extends BaseUrlParams {\n  startKey?: QueryParam;\n  endKey?: QueryParam;\n  limit?: QueryParam;\n}\n\nexport type GetV1CollectionsCollectionNameObjectsApiResponse =\n  ApiResponsePayload;\n\nexport type GetV1CollectionsCollectionNameObjectsResponseMessage =\n  BaseApiResponseMessage<GetV1CollectionsCollectionNameObjectsApiResponse>;\n\nexport interface GetV1CollectionsCollectionNameObjectsRequestMessage\n  extends BaseApiRequestMessage<GetV1CollectionsCollectionNameObjectsQueryParams> {\n  api: CustomobjectsRequestApi;\n  method: 'getV1CollectionsCollectionNameObjects';\n}\n\n// types for getV1CollectionsCollectionNameObjectsObjectKey\n\nexport type GetV1CollectionsCollectionNameObjectsObjectKeyQueryParams =\n  BaseUrlParams;\n\nexport type GetV1CollectionsCollectionNameObjectsObjectKeyApiResponse =\n  ApiResponsePayload;\n\nexport type GetV1CollectionsCollectionNameObjectsObjectKeyResponseMessage =\n  BaseApiResponseMessage<GetV1CollectionsCollectionNameObjectsObjectKeyApiResponse>;\n\nexport interface GetV1CollectionsCollectionNameObjectsObjectKeyRequestMessage\n  extends BaseApiRequestMessage<GetV1CollectionsCollectionNameObjectsObjectKeyQueryParams> {\n  api: CustomobjectsRequestApi;\n  method: 'getV1CollectionsCollectionNameObjectsObjectKey';\n}\n\n// types for getV1CollectionsCollectionNameObjectsObjectKeyMetadata\n\nexport type GetV1CollectionsCollectionNameObjectsObjectKeyMetadataQueryParams =\n  BaseUrlParams;\n\nexport type GetV1CollectionsCollectionNameObjectsObjectKeyMetadataApiResponse =\n  ApiResponsePayload;\n\nexport type GetV1CollectionsCollectionNameObjectsObjectKeyMetadataResponseMessage =\n  BaseApiResponseMessage<GetV1CollectionsCollectionNameObjectsObjectKeyMetadataApiResponse>;\n\nexport interface GetV1CollectionsCollectionNameObjectsObjectKeyMetadataRequestMessage\n  extends BaseApiRequestMessage<GetV1CollectionsCollectionNameObjectsObjectKeyMetadataQueryParams> {\n  api: CustomobjectsRequestApi;\n  method: 'getV1CollectionsCollectionNameObjectsObjectKeyMetadata';\n}\n\n// types for postV1CollectionsCollectionNameObjects\n\nexport interface PostV1CollectionsCollectionNameObjectsQueryParams\n  extends BaseUrlParams {\n  filter?: string;\n  limit?: QueryParam;\n  offset?: QueryParam;\n  sort?: QueryParam;\n}\n\nexport type PostV1CollectionsCollectionNameObjectsApiResponse =\n  ApiResponsePayload;\n\nexport type PostV1CollectionsCollectionNameObjectsPostData = Record<string, never>;\n\nexport type PostV1CollectionsCollectionNameObjectsResponseMessage =\n  BaseApiResponseMessage<PostV1CollectionsCollectionNameObjectsApiResponse>;\n\nexport interface PostV1CollectionsCollectionNameObjectsRequestMessage\n  extends BaseApiRequestMessage<\n    PostV1CollectionsCollectionNameObjectsQueryParams,\n    PostV1CollectionsCollectionNameObjectsPostData\n  > {\n  api: CustomobjectsRequestApi;\n  method: 'postV1CollectionsCollectionNameObjects';\n}\n\n// types for putV1CollectionsCollectionNameObjectsObjectKey\n\nexport type PutV1CollectionsCollectionNameObjectsObjectKeyQueryParams =\n  BaseUrlParams;\n\nexport type PutV1CollectionsCollectionNameObjectsObjectKeyApiResponse =\n  ApiResponsePayload;\n\nexport type PutV1CollectionsCollectionNameObjectsObjectKeyPostData = Record<string, never>;\n\nexport type PutV1CollectionsCollectionNameObjectsObjectKeyResponseMessage =\n  BaseApiResponseMessage<PutV1CollectionsCollectionNameObjectsObjectKeyApiResponse>;\n\nexport interface PutV1CollectionsCollectionNameObjectsObjectKeyRequestMessage\n  extends BaseApiRequestMessage<\n    PutV1CollectionsCollectionNameObjectsObjectKeyQueryParams,\n    PutV1CollectionsCollectionNameObjectsObjectKeyPostData\n  > {\n  api: CustomobjectsRequestApi;\n  method: 'putV1CollectionsCollectionNameObjectsObjectKey';\n}\n\n// general types\n\nexport type CustomobjectsApiRequestMessage =\n  | DeleteV1CollectionsCollectionNameObjectsObjectKeyRequestMessage\n  | GetV1CollectionsRequestMessage\n  | GetV1CollectionsCollectionNameObjectsRequestMessage\n  | GetV1CollectionsCollectionNameObjectsObjectKeyRequestMessage\n  | GetV1CollectionsCollectionNameObjectsObjectKeyMetadataRequestMessage\n  | PostV1CollectionsCollectionNameObjectsRequestMessage\n  | PutV1CollectionsCollectionNameObjectsObjectKeyRequestMessage;\n\nexport type CustomobjectsApiResponseMessage =\n  | DeleteV1CollectionsCollectionNameObjectsObjectKeyResponseMessage\n  | GetV1CollectionsResponseMessage\n  | GetV1CollectionsCollectionNameObjectsResponseMessage\n  | GetV1CollectionsCollectionNameObjectsObjectKeyResponseMessage\n  | GetV1CollectionsCollectionNameObjectsObjectKeyMetadataResponseMessage\n  | PostV1CollectionsCollectionNameObjectsResponseMessage\n  | PutV1CollectionsCollectionNameObjectsObjectKeyResponseMessage;\n\nexport class CustomobjectsApiBridge {\n  private bridge;\n\n  constructor(bridge: Bridge) {\n    this.bridge = bridge;\n  }\n\n  getBridge() {\n    return this.bridge;\n  }\n\n  async deleteV1CollectionsCollectionNameObjectsObjectKey(\n    urlParams: DeleteV1CollectionsCollectionNameObjectsObjectKeyQueryParams = {},\n  ): Promise<DeleteV1CollectionsCollectionNameObjectsObjectKeyApiResponse> {\n    const message: DeleteV1CollectionsCollectionNameObjectsObjectKeyRequestMessage =\n      {\n        type: 'api',\n        api: 'customobjects',\n        method: 'deleteV1CollectionsCollectionNameObjectsObjectKey',\n        payload: {\n          params: urlParams,\n        },\n      };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getV1Collections(\n    urlParams: GetV1CollectionsQueryParams = {},\n  ): Promise<GetV1CollectionsApiResponse> {\n    const message: GetV1CollectionsRequestMessage = {\n      type: 'api',\n      api: 'customobjects',\n      method: 'getV1Collections',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getV1CollectionsCollectionNameObjects(\n    urlParams: GetV1CollectionsCollectionNameObjectsQueryParams = {},\n  ): Promise<GetV1CollectionsCollectionNameObjectsApiResponse> {\n    const message: GetV1CollectionsCollectionNameObjectsRequestMessage = {\n      type: 'api',\n      api: 'customobjects',\n      method: 'getV1CollectionsCollectionNameObjects',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getV1CollectionsCollectionNameObjectsObjectKey(\n    urlParams: GetV1CollectionsCollectionNameObjectsObjectKeyQueryParams = {},\n  ): Promise<GetV1CollectionsCollectionNameObjectsObjectKeyApiResponse> {\n    const message: GetV1CollectionsCollectionNameObjectsObjectKeyRequestMessage =\n      {\n        type: 'api',\n        api: 'customobjects',\n        method: 'getV1CollectionsCollectionNameObjectsObjectKey',\n        payload: {\n          params: urlParams,\n        },\n      };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getV1CollectionsCollectionNameObjectsObjectKeyMetadata(\n    urlParams: GetV1CollectionsCollectionNameObjectsObjectKeyMetadataQueryParams = {},\n  ): Promise<GetV1CollectionsCollectionNameObjectsObjectKeyMetadataApiResponse> {\n    const message: GetV1CollectionsCollectionNameObjectsObjectKeyMetadataRequestMessage =\n      {\n        type: 'api',\n        api: 'customobjects',\n        method: 'getV1CollectionsCollectionNameObjectsObjectKeyMetadata',\n        payload: {\n          params: urlParams,\n        },\n      };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postV1CollectionsCollectionNameObjects(\n    postBody: PostV1CollectionsCollectionNameObjectsPostData,\n    urlParams: PostV1CollectionsCollectionNameObjectsQueryParams = {},\n  ): Promise<PostV1CollectionsCollectionNameObjectsApiResponse> {\n    const message: PostV1CollectionsCollectionNameObjectsRequestMessage = {\n      type: 'api',\n      api: 'customobjects',\n      method: 'postV1CollectionsCollectionNameObjects',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async putV1CollectionsCollectionNameObjectsObjectKey(\n    postBody: PutV1CollectionsCollectionNameObjectsObjectKeyPostData,\n    urlParams: PutV1CollectionsCollectionNameObjectsObjectKeyQueryParams = {},\n  ): Promise<PutV1CollectionsCollectionNameObjectsObjectKeyApiResponse> {\n    const message: PutV1CollectionsCollectionNameObjectsObjectKeyRequestMessage =\n      {\n        type: 'api',\n        api: 'customobjects',\n        method: 'putV1CollectionsCollectionNameObjectsObjectKey',\n        payload: {\n          body: postBody,\n          params: urlParams,\n        },\n      };\n\n    return this.bridge.postMessage(message);\n  }\n}\n","/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\n\nimport type { Bridge } from '../../bridge';\n\nimport type {\n  ApiResponsePayload,\n  BaseApiRequestMessage,\n  BaseApiResponseMessage,\n  BaseUrlParams,\n  QueryParam,\n} from '../../types';\n\nexport type DetectsRequestApi = 'detects';\n\nexport type CommonApiResponseMessage =\n  BaseApiResponseMessage<ApiResponsePayload>;\n\nexport interface CommonApiRequestMessage\n  extends BaseApiRequestMessage<BaseUrlParams, unknown> {\n  api: DetectsRequestApi;\n}\n\n// types for getEntitiesSuppressedDevicesV1\n\nexport interface GetEntitiesSuppressedDevicesV1QueryParams\n  extends BaseUrlParams {\n  ids?: QueryParam;\n}\n\nexport type GetEntitiesSuppressedDevicesV1ApiResponse = ApiResponsePayload;\n\nexport type GetEntitiesSuppressedDevicesV1ResponseMessage =\n  BaseApiResponseMessage<GetEntitiesSuppressedDevicesV1ApiResponse>;\n\nexport interface GetEntitiesSuppressedDevicesV1RequestMessage\n  extends BaseApiRequestMessage<GetEntitiesSuppressedDevicesV1QueryParams> {\n  api: DetectsRequestApi;\n  method: 'getEntitiesSuppressedDevicesV1';\n}\n\n// types for patchEntitiesDetectsV2\n\nexport type PatchEntitiesDetectsV2QueryParams = BaseUrlParams;\n\nexport type PatchEntitiesDetectsV2ApiResponse = ApiResponsePayload;\n\nexport type PatchEntitiesDetectsV2PostData = Record<string, never>;\n\nexport type PatchEntitiesDetectsV2ResponseMessage =\n  BaseApiResponseMessage<PatchEntitiesDetectsV2ApiResponse>;\n\nexport interface PatchEntitiesDetectsV2RequestMessage\n  extends BaseApiRequestMessage<\n    PatchEntitiesDetectsV2QueryParams,\n    PatchEntitiesDetectsV2PostData\n  > {\n  api: DetectsRequestApi;\n  method: 'patchEntitiesDetectsV2';\n}\n\n// types for patchQueriesDetectsV1\n\nexport type PatchQueriesDetectsV1QueryParams = BaseUrlParams;\n\nexport type PatchQueriesDetectsV1ApiResponse = ApiResponsePayload;\n\nexport type PatchQueriesDetectsV1PostData = Record<string, never>;\n\nexport type PatchQueriesDetectsV1ResponseMessage =\n  BaseApiResponseMessage<PatchQueriesDetectsV1ApiResponse>;\n\nexport interface PatchQueriesDetectsV1RequestMessage\n  extends BaseApiRequestMessage<\n    PatchQueriesDetectsV1QueryParams,\n    PatchQueriesDetectsV1PostData\n  > {\n  api: DetectsRequestApi;\n  method: 'patchQueriesDetectsV1';\n}\n\n// types for patchQueriesDetectsV2\n\nexport type PatchQueriesDetectsV2QueryParams = BaseUrlParams;\n\nexport type PatchQueriesDetectsV2ApiResponse = ApiResponsePayload;\n\nexport type PatchQueriesDetectsV2PostData = Record<string, never>;\n\nexport type PatchQueriesDetectsV2ResponseMessage =\n  BaseApiResponseMessage<PatchQueriesDetectsV2ApiResponse>;\n\nexport interface PatchQueriesDetectsV2RequestMessage\n  extends BaseApiRequestMessage<\n    PatchQueriesDetectsV2QueryParams,\n    PatchQueriesDetectsV2PostData\n  > {\n  api: DetectsRequestApi;\n  method: 'patchQueriesDetectsV2';\n}\n\n// types for postAggregatesDetectsGetV1\n\nexport type PostAggregatesDetectsGetV1QueryParams = BaseUrlParams;\n\nexport type PostAggregatesDetectsGetV1ApiResponse = ApiResponsePayload;\n\nexport type PostAggregatesDetectsGetV1PostData = Record<string, never>;\n\nexport type PostAggregatesDetectsGetV1ResponseMessage =\n  BaseApiResponseMessage<PostAggregatesDetectsGetV1ApiResponse>;\n\nexport interface PostAggregatesDetectsGetV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostAggregatesDetectsGetV1QueryParams,\n    PostAggregatesDetectsGetV1PostData\n  > {\n  api: DetectsRequestApi;\n  method: 'postAggregatesDetectsGetV1';\n}\n\n// types for postEntitiesSummariesGetV1\n\nexport type PostEntitiesSummariesGetV1QueryParams = BaseUrlParams;\n\nexport type PostEntitiesSummariesGetV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesSummariesGetV1PostData = Record<string, never>;\n\nexport type PostEntitiesSummariesGetV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesSummariesGetV1ApiResponse>;\n\nexport interface PostEntitiesSummariesGetV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesSummariesGetV1QueryParams,\n    PostEntitiesSummariesGetV1PostData\n  > {\n  api: DetectsRequestApi;\n  method: 'postEntitiesSummariesGetV1';\n}\n\n// types for postEntitiesSuppressedDevicesV1\n\nexport interface PostEntitiesSuppressedDevicesV1QueryParams\n  extends BaseUrlParams {\n  ids?: QueryParam;\n}\n\nexport type PostEntitiesSuppressedDevicesV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesSuppressedDevicesV1PostData = Record<string, never>;\n\nexport type PostEntitiesSuppressedDevicesV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesSuppressedDevicesV1ApiResponse>;\n\nexport interface PostEntitiesSuppressedDevicesV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesSuppressedDevicesV1QueryParams,\n    PostEntitiesSuppressedDevicesV1PostData\n  > {\n  api: DetectsRequestApi;\n  method: 'postEntitiesSuppressedDevicesV1';\n}\n\n// general types\n\nexport type DetectsApiRequestMessage =\n  | GetEntitiesSuppressedDevicesV1RequestMessage\n  | PatchEntitiesDetectsV2RequestMessage\n  | PatchQueriesDetectsV1RequestMessage\n  | PatchQueriesDetectsV2RequestMessage\n  | PostAggregatesDetectsGetV1RequestMessage\n  | PostEntitiesSummariesGetV1RequestMessage\n  | PostEntitiesSuppressedDevicesV1RequestMessage;\n\nexport type DetectsApiResponseMessage =\n  | GetEntitiesSuppressedDevicesV1ResponseMessage\n  | PatchEntitiesDetectsV2ResponseMessage\n  | PatchQueriesDetectsV1ResponseMessage\n  | PatchQueriesDetectsV2ResponseMessage\n  | PostAggregatesDetectsGetV1ResponseMessage\n  | PostEntitiesSummariesGetV1ResponseMessage\n  | PostEntitiesSuppressedDevicesV1ResponseMessage;\n\nexport class DetectsApiBridge {\n  private bridge;\n\n  constructor(bridge: Bridge) {\n    this.bridge = bridge;\n  }\n\n  getBridge() {\n    return this.bridge;\n  }\n\n  async getEntitiesSuppressedDevicesV1(\n    urlParams: GetEntitiesSuppressedDevicesV1QueryParams = {},\n  ): Promise<GetEntitiesSuppressedDevicesV1ApiResponse> {\n    const message: GetEntitiesSuppressedDevicesV1RequestMessage = {\n      type: 'api',\n      api: 'detects',\n      method: 'getEntitiesSuppressedDevicesV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async patchEntitiesDetectsV2(\n    postBody: PatchEntitiesDetectsV2PostData,\n    urlParams: PatchEntitiesDetectsV2QueryParams = {},\n  ): Promise<PatchEntitiesDetectsV2ApiResponse> {\n    const message: PatchEntitiesDetectsV2RequestMessage = {\n      type: 'api',\n      api: 'detects',\n      method: 'patchEntitiesDetectsV2',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async patchQueriesDetectsV1(\n    postBody: PatchQueriesDetectsV1PostData,\n    urlParams: PatchQueriesDetectsV1QueryParams = {},\n  ): Promise<PatchQueriesDetectsV1ApiResponse> {\n    const message: PatchQueriesDetectsV1RequestMessage = {\n      type: 'api',\n      api: 'detects',\n      method: 'patchQueriesDetectsV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async patchQueriesDetectsV2(\n    postBody: PatchQueriesDetectsV2PostData,\n    urlParams: PatchQueriesDetectsV2QueryParams = {},\n  ): Promise<PatchQueriesDetectsV2ApiResponse> {\n    const message: PatchQueriesDetectsV2RequestMessage = {\n      type: 'api',\n      api: 'detects',\n      method: 'patchQueriesDetectsV2',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postAggregatesDetectsGetV1(\n    postBody: PostAggregatesDetectsGetV1PostData,\n    urlParams: PostAggregatesDetectsGetV1QueryParams = {},\n  ): Promise<PostAggregatesDetectsGetV1ApiResponse> {\n    const message: PostAggregatesDetectsGetV1RequestMessage = {\n      type: 'api',\n      api: 'detects',\n      method: 'postAggregatesDetectsGetV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesSummariesGetV1(\n    postBody: PostEntitiesSummariesGetV1PostData,\n    urlParams: PostEntitiesSummariesGetV1QueryParams = {},\n  ): Promise<PostEntitiesSummariesGetV1ApiResponse> {\n    const message: PostEntitiesSummariesGetV1RequestMessage = {\n      type: 'api',\n      api: 'detects',\n      method: 'postEntitiesSummariesGetV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesSuppressedDevicesV1(\n    postBody: PostEntitiesSuppressedDevicesV1PostData,\n    urlParams: PostEntitiesSuppressedDevicesV1QueryParams = {},\n  ): Promise<PostEntitiesSuppressedDevicesV1ApiResponse> {\n    const message: PostEntitiesSuppressedDevicesV1RequestMessage = {\n      type: 'api',\n      api: 'detects',\n      method: 'postEntitiesSuppressedDevicesV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n}\n","/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\n\nimport type { Bridge } from '../../bridge';\n\nimport type {\n  ApiResponsePayload,\n  BaseApiRequestMessage,\n  BaseApiResponseMessage,\n  BaseUrlParams,\n  QueryParam,\n} from '../../types';\n\nexport type DevicesRequestApi = 'devices';\n\nexport type CommonApiResponseMessage =\n  BaseApiResponseMessage<ApiResponsePayload>;\n\nexport interface CommonApiRequestMessage\n  extends BaseApiRequestMessage<BaseUrlParams, unknown> {\n  api: DevicesRequestApi;\n}\n\n// types for deleteEntitiesGroupsV1\n\nexport interface DeleteEntitiesGroupsV1QueryParams extends BaseUrlParams {\n  ids: QueryParam;\n}\n\nexport type DeleteEntitiesGroupsV1ApiResponse = ApiResponsePayload;\n\nexport type DeleteEntitiesGroupsV1ResponseMessage =\n  BaseApiResponseMessage<DeleteEntitiesGroupsV1ApiResponse>;\n\nexport interface DeleteEntitiesGroupsV1RequestMessage\n  extends BaseApiRequestMessage<DeleteEntitiesGroupsV1QueryParams> {\n  api: DevicesRequestApi;\n  method: 'deleteEntitiesGroupsV1';\n}\n\n// types for getAggregatesBucketsV1\n\nexport interface GetAggregatesBucketsV1QueryParams extends BaseUrlParams {\n  facet: QueryParam;\n  filter?: string;\n  sort?: QueryParam;\n  groupId?: QueryParam;\n  policyId?: QueryParam;\n  policyType?: QueryParam;\n  additionalHostsOnly?: QueryParam;\n}\n\nexport type GetAggregatesBucketsV1ApiResponse = ApiResponsePayload;\n\nexport type GetAggregatesBucketsV1ResponseMessage =\n  BaseApiResponseMessage<GetAggregatesBucketsV1ApiResponse>;\n\nexport interface GetAggregatesBucketsV1RequestMessage\n  extends BaseApiRequestMessage<GetAggregatesBucketsV1QueryParams> {\n  api: DevicesRequestApi;\n  method: 'getAggregatesBucketsV1';\n}\n\n// types for getAggregatesFgaTagPrefixCountsV1\n\nexport interface GetAggregatesFgaTagPrefixCountsV1QueryParams\n  extends BaseUrlParams {\n  prefix: QueryParam;\n  limit?: QueryParam;\n}\n\nexport type GetAggregatesFgaTagPrefixCountsV1ApiResponse = ApiResponsePayload;\n\nexport type GetAggregatesFgaTagPrefixCountsV1ResponseMessage =\n  BaseApiResponseMessage<GetAggregatesFgaTagPrefixCountsV1ApiResponse>;\n\nexport interface GetAggregatesFgaTagPrefixCountsV1RequestMessage\n  extends BaseApiRequestMessage<GetAggregatesFgaTagPrefixCountsV1QueryParams> {\n  api: DevicesRequestApi;\n  method: 'getAggregatesFgaTagPrefixCountsV1';\n}\n\n// types for getAggregatesTagPrefixCountsV1\n\nexport interface GetAggregatesTagPrefixCountsV1QueryParams\n  extends BaseUrlParams {\n  prefix: QueryParam;\n  limit?: QueryParam;\n}\n\nexport type GetAggregatesTagPrefixCountsV1ApiResponse = ApiResponsePayload;\n\nexport type GetAggregatesTagPrefixCountsV1ResponseMessage =\n  BaseApiResponseMessage<GetAggregatesTagPrefixCountsV1ApiResponse>;\n\nexport interface GetAggregatesTagPrefixCountsV1RequestMessage\n  extends BaseApiRequestMessage<GetAggregatesTagPrefixCountsV1QueryParams> {\n  api: DevicesRequestApi;\n  method: 'getAggregatesTagPrefixCountsV1';\n}\n\n// types for getEntitiesDevicesV1\n\nexport interface GetEntitiesDevicesV1QueryParams extends BaseUrlParams {\n  ids: QueryParam;\n}\n\nexport type GetEntitiesDevicesV1ApiResponse = ApiResponsePayload;\n\nexport type GetEntitiesDevicesV1ResponseMessage =\n  BaseApiResponseMessage<GetEntitiesDevicesV1ApiResponse>;\n\nexport interface GetEntitiesDevicesV1RequestMessage\n  extends BaseApiRequestMessage<GetEntitiesDevicesV1QueryParams> {\n  api: DevicesRequestApi;\n  method: 'getEntitiesDevicesV1';\n}\n\n// types for getEntitiesFgaGroupsV1\n\nexport interface GetEntitiesFgaGroupsV1QueryParams extends BaseUrlParams {\n  ids: QueryParam;\n}\n\nexport type GetEntitiesFgaGroupsV1ApiResponse = ApiResponsePayload;\n\nexport type GetEntitiesFgaGroupsV1ResponseMessage =\n  BaseApiResponseMessage<GetEntitiesFgaGroupsV1ApiResponse>;\n\nexport interface GetEntitiesFgaGroupsV1RequestMessage\n  extends BaseApiRequestMessage<GetEntitiesFgaGroupsV1QueryParams> {\n  api: DevicesRequestApi;\n  method: 'getEntitiesFgaGroupsV1';\n}\n\n// types for getEntitiesGroupsV1\n\nexport interface GetEntitiesGroupsV1QueryParams extends BaseUrlParams {\n  ids: QueryParam;\n}\n\nexport type GetEntitiesGroupsV1ApiResponse = ApiResponsePayload;\n\nexport type GetEntitiesGroupsV1ResponseMessage =\n  BaseApiResponseMessage<GetEntitiesGroupsV1ApiResponse>;\n\nexport interface GetEntitiesGroupsV1RequestMessage\n  extends BaseApiRequestMessage<GetEntitiesGroupsV1QueryParams> {\n  api: DevicesRequestApi;\n  method: 'getEntitiesGroupsV1';\n}\n\n// types for getQueriesAvailableGroupsV1\n\nexport interface GetQueriesAvailableGroupsV1QueryParams extends BaseUrlParams {\n  policyId?: QueryParam;\n  policyType?: QueryParam;\n  filter?: string;\n  limit?: QueryParam;\n  offset?: QueryParam;\n  sort?: QueryParam;\n}\n\nexport type GetQueriesAvailableGroupsV1ApiResponse = ApiResponsePayload;\n\nexport type GetQueriesAvailableGroupsV1ResponseMessage =\n  BaseApiResponseMessage<GetQueriesAvailableGroupsV1ApiResponse>;\n\nexport interface GetQueriesAvailableGroupsV1RequestMessage\n  extends BaseApiRequestMessage<GetQueriesAvailableGroupsV1QueryParams> {\n  api: DevicesRequestApi;\n  method: 'getQueriesAvailableGroupsV1';\n}\n\n// types for getQueriesDevicesHiddenV2\n\nexport interface GetQueriesDevicesHiddenV2QueryParams extends BaseUrlParams {\n  filter?: string;\n  limit?: QueryParam;\n  offset?: QueryParam;\n  sort?: QueryParam;\n  groupId?: QueryParam;\n  policyId?: QueryParam;\n  policyType?: QueryParam;\n  additionalHostsOnly?: QueryParam;\n}\n\nexport type GetQueriesDevicesHiddenV2ApiResponse = ApiResponsePayload;\n\nexport type GetQueriesDevicesHiddenV2ResponseMessage =\n  BaseApiResponseMessage<GetQueriesDevicesHiddenV2ApiResponse>;\n\nexport interface GetQueriesDevicesHiddenV2RequestMessage\n  extends BaseApiRequestMessage<GetQueriesDevicesHiddenV2QueryParams> {\n  api: DevicesRequestApi;\n  method: 'getQueriesDevicesHiddenV2';\n}\n\n// types for getQueriesDevicesV1\n\nexport interface GetQueriesDevicesV1QueryParams extends BaseUrlParams {\n  filter?: string;\n  limit?: QueryParam;\n  offset?: QueryParam;\n  sort?: QueryParam;\n  groupId?: QueryParam;\n  policyId?: QueryParam;\n  policyType?: QueryParam;\n  additionalHostsOnly?: QueryParam;\n}\n\nexport type GetQueriesDevicesV1ApiResponse = ApiResponsePayload;\n\nexport type GetQueriesDevicesV1ResponseMessage =\n  BaseApiResponseMessage<GetQueriesDevicesV1ApiResponse>;\n\nexport interface GetQueriesDevicesV1RequestMessage\n  extends BaseApiRequestMessage<GetQueriesDevicesV1QueryParams> {\n  api: DevicesRequestApi;\n  method: 'getQueriesDevicesV1';\n}\n\n// types for getQueriesDevicesV2\n\nexport interface GetQueriesDevicesV2QueryParams extends BaseUrlParams {\n  filter?: string;\n  limit?: QueryParam;\n  offset?: QueryParam;\n  sort?: QueryParam;\n  groupId?: QueryParam;\n  policyId?: QueryParam;\n  policyType?: QueryParam;\n  additionalHostsOnly?: QueryParam;\n}\n\nexport type GetQueriesDevicesV2ApiResponse = ApiResponsePayload;\n\nexport type GetQueriesDevicesV2ResponseMessage =\n  BaseApiResponseMessage<GetQueriesDevicesV2ApiResponse>;\n\nexport interface GetQueriesDevicesV2RequestMessage\n  extends BaseApiRequestMessage<GetQueriesDevicesV2QueryParams> {\n  api: DevicesRequestApi;\n  method: 'getQueriesDevicesV2';\n}\n\n// types for getQueriesFgaGroupsV1\n\nexport interface GetQueriesFgaGroupsV1QueryParams extends BaseUrlParams {\n  filter?: string;\n  limit?: QueryParam;\n  offset?: QueryParam;\n  sort?: QueryParam;\n}\n\nexport type GetQueriesFgaGroupsV1ApiResponse = ApiResponsePayload;\n\nexport type GetQueriesFgaGroupsV1ResponseMessage =\n  BaseApiResponseMessage<GetQueriesFgaGroupsV1ApiResponse>;\n\nexport interface GetQueriesFgaGroupsV1RequestMessage\n  extends BaseApiRequestMessage<GetQueriesFgaGroupsV1QueryParams> {\n  api: DevicesRequestApi;\n  method: 'getQueriesFgaGroupsV1';\n}\n\n// types for getQueriesGroupsV1\n\nexport interface GetQueriesGroupsV1QueryParams extends BaseUrlParams {\n  filter?: string;\n  limit?: QueryParam;\n  offset?: QueryParam;\n  sort?: QueryParam;\n}\n\nexport type GetQueriesGroupsV1ApiResponse = ApiResponsePayload;\n\nexport type GetQueriesGroupsV1ResponseMessage =\n  BaseApiResponseMessage<GetQueriesGroupsV1ApiResponse>;\n\nexport interface GetQueriesGroupsV1RequestMessage\n  extends BaseApiRequestMessage<GetQueriesGroupsV1QueryParams> {\n  api: DevicesRequestApi;\n  method: 'getQueriesGroupsV1';\n}\n\n// types for patchEntitiesDevicesTagsV2\n\nexport type PatchEntitiesDevicesTagsV2QueryParams = BaseUrlParams;\n\nexport type PatchEntitiesDevicesTagsV2ApiResponse = ApiResponsePayload;\n\nexport type PatchEntitiesDevicesTagsV2PostData = Record<string, never>;\n\nexport type PatchEntitiesDevicesTagsV2ResponseMessage =\n  BaseApiResponseMessage<PatchEntitiesDevicesTagsV2ApiResponse>;\n\nexport interface PatchEntitiesDevicesTagsV2RequestMessage\n  extends BaseApiRequestMessage<\n    PatchEntitiesDevicesTagsV2QueryParams,\n    PatchEntitiesDevicesTagsV2PostData\n  > {\n  api: DevicesRequestApi;\n  method: 'patchEntitiesDevicesTagsV2';\n}\n\n// types for patchEntitiesDevicesV1\n\nexport interface PatchEntitiesDevicesV1QueryParams extends BaseUrlParams {\n  ids: QueryParam;\n}\n\nexport type PatchEntitiesDevicesV1ApiResponse = ApiResponsePayload;\n\nexport type PatchEntitiesDevicesV1PostData = Record<string, never>;\n\nexport type PatchEntitiesDevicesV1ResponseMessage =\n  BaseApiResponseMessage<PatchEntitiesDevicesV1ApiResponse>;\n\nexport interface PatchEntitiesDevicesV1RequestMessage\n  extends BaseApiRequestMessage<\n    PatchEntitiesDevicesV1QueryParams,\n    PatchEntitiesDevicesV1PostData\n  > {\n  api: DevicesRequestApi;\n  method: 'patchEntitiesDevicesV1';\n}\n\n// types for patchEntitiesGroupsV1\n\nexport type PatchEntitiesGroupsV1QueryParams = BaseUrlParams;\n\nexport type PatchEntitiesGroupsV1ApiResponse = ApiResponsePayload;\n\nexport type PatchEntitiesGroupsV1PostData = Record<string, never>;\n\nexport type PatchEntitiesGroupsV1ResponseMessage =\n  BaseApiResponseMessage<PatchEntitiesGroupsV1ApiResponse>;\n\nexport interface PatchEntitiesGroupsV1RequestMessage\n  extends BaseApiRequestMessage<\n    PatchEntitiesGroupsV1QueryParams,\n    PatchEntitiesGroupsV1PostData\n  > {\n  api: DevicesRequestApi;\n  method: 'patchEntitiesGroupsV1';\n}\n\n// types for postAggregatesDevicesGetV1\n\nexport interface PostAggregatesDevicesGetV1QueryParams extends BaseUrlParams {\n  groupId?: QueryParam;\n}\n\nexport type PostAggregatesDevicesGetV1ApiResponse = ApiResponsePayload;\n\nexport type PostAggregatesDevicesGetV1PostData = Record<string, never>;\n\nexport type PostAggregatesDevicesGetV1ResponseMessage =\n  BaseApiResponseMessage<PostAggregatesDevicesGetV1ApiResponse>;\n\nexport interface PostAggregatesDevicesGetV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostAggregatesDevicesGetV1QueryParams,\n    PostAggregatesDevicesGetV1PostData\n  > {\n  api: DevicesRequestApi;\n  method: 'postAggregatesDevicesGetV1';\n}\n\n// types for postAggregatesFgaHostsGetV1\n\nexport interface PostAggregatesFgaHostsGetV1QueryParams extends BaseUrlParams {\n  groupId?: QueryParam;\n}\n\nexport type PostAggregatesFgaHostsGetV1ApiResponse = ApiResponsePayload;\n\nexport type PostAggregatesFgaHostsGetV1PostData = Record<string, never>;\n\nexport type PostAggregatesFgaHostsGetV1ResponseMessage =\n  BaseApiResponseMessage<PostAggregatesFgaHostsGetV1ApiResponse>;\n\nexport interface PostAggregatesFgaHostsGetV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostAggregatesFgaHostsGetV1QueryParams,\n    PostAggregatesFgaHostsGetV1PostData\n  > {\n  api: DevicesRequestApi;\n  method: 'postAggregatesFgaHostsGetV1';\n}\n\n// types for postCombinedDevicesLoginHistoryV1\n\nexport type PostCombinedDevicesLoginHistoryV1QueryParams = BaseUrlParams;\n\nexport type PostCombinedDevicesLoginHistoryV1ApiResponse = ApiResponsePayload;\n\nexport type PostCombinedDevicesLoginHistoryV1PostData = Record<string, never>;\n\nexport type PostCombinedDevicesLoginHistoryV1ResponseMessage =\n  BaseApiResponseMessage<PostCombinedDevicesLoginHistoryV1ApiResponse>;\n\nexport interface PostCombinedDevicesLoginHistoryV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostCombinedDevicesLoginHistoryV1QueryParams,\n    PostCombinedDevicesLoginHistoryV1PostData\n  > {\n  api: DevicesRequestApi;\n  method: 'postCombinedDevicesLoginHistoryV1';\n}\n\n// types for postCombinedFgaHostsLoginHistoryV1\n\nexport type PostCombinedFgaHostsLoginHistoryV1QueryParams = BaseUrlParams;\n\nexport type PostCombinedFgaHostsLoginHistoryV1ApiResponse = ApiResponsePayload;\n\nexport type PostCombinedFgaHostsLoginHistoryV1PostData = Record<string, never>;\n\nexport type PostCombinedFgaHostsLoginHistoryV1ResponseMessage =\n  BaseApiResponseMessage<PostCombinedFgaHostsLoginHistoryV1ApiResponse>;\n\nexport interface PostCombinedFgaHostsLoginHistoryV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostCombinedFgaHostsLoginHistoryV1QueryParams,\n    PostCombinedFgaHostsLoginHistoryV1PostData\n  > {\n  api: DevicesRequestApi;\n  method: 'postCombinedFgaHostsLoginHistoryV1';\n}\n\n// types for postEntitiesDevicesActionsV4\n\nexport interface PostEntitiesDevicesActionsV4QueryParams extends BaseUrlParams {\n  actionName?: QueryParam;\n}\n\nexport type PostEntitiesDevicesActionsV4ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesDevicesActionsV4PostData = Record<string, never>;\n\nexport type PostEntitiesDevicesActionsV4ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesDevicesActionsV4ApiResponse>;\n\nexport interface PostEntitiesDevicesActionsV4RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesDevicesActionsV4QueryParams,\n    PostEntitiesDevicesActionsV4PostData\n  > {\n  api: DevicesRequestApi;\n  method: 'postEntitiesDevicesActionsV4';\n}\n\n// types for postEntitiesDevicesHiddenActionsV4\n\nexport interface PostEntitiesDevicesHiddenActionsV4QueryParams\n  extends BaseUrlParams {\n  actionName?: QueryParam;\n}\n\nexport type PostEntitiesDevicesHiddenActionsV4ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesDevicesHiddenActionsV4PostData = Record<string, never>;\n\nexport type PostEntitiesDevicesHiddenActionsV4ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesDevicesHiddenActionsV4ApiResponse>;\n\nexport interface PostEntitiesDevicesHiddenActionsV4RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesDevicesHiddenActionsV4QueryParams,\n    PostEntitiesDevicesHiddenActionsV4PostData\n  > {\n  api: DevicesRequestApi;\n  method: 'postEntitiesDevicesHiddenActionsV4';\n}\n\n// types for postEntitiesDevicesReportsV1\n\nexport type PostEntitiesDevicesReportsV1QueryParams = BaseUrlParams;\n\nexport type PostEntitiesDevicesReportsV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesDevicesReportsV1PostData = Record<string, never>;\n\nexport type PostEntitiesDevicesReportsV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesDevicesReportsV1ApiResponse>;\n\nexport interface PostEntitiesDevicesReportsV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesDevicesReportsV1QueryParams,\n    PostEntitiesDevicesReportsV1PostData\n  > {\n  api: DevicesRequestApi;\n  method: 'postEntitiesDevicesReportsV1';\n}\n\n// types for postEntitiesDevicesV1\n\nexport interface PostEntitiesDevicesV1QueryParams extends BaseUrlParams {\n  ids: QueryParam;\n}\n\nexport type PostEntitiesDevicesV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesDevicesV1PostData = Record<string, never>;\n\nexport type PostEntitiesDevicesV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesDevicesV1ApiResponse>;\n\nexport interface PostEntitiesDevicesV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesDevicesV1QueryParams,\n    PostEntitiesDevicesV1PostData\n  > {\n  api: DevicesRequestApi;\n  method: 'postEntitiesDevicesV1';\n}\n\n// types for postEntitiesDevicesV2\n\nexport type PostEntitiesDevicesV2QueryParams = BaseUrlParams;\n\nexport type PostEntitiesDevicesV2ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesDevicesV2PostData = Record<string, never>;\n\nexport type PostEntitiesDevicesV2ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesDevicesV2ApiResponse>;\n\nexport interface PostEntitiesDevicesV2RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesDevicesV2QueryParams,\n    PostEntitiesDevicesV2PostData\n  > {\n  api: DevicesRequestApi;\n  method: 'postEntitiesDevicesV2';\n}\n\n// types for postEntitiesFgaHostsReportsV1\n\nexport type PostEntitiesFgaHostsReportsV1QueryParams = BaseUrlParams;\n\nexport type PostEntitiesFgaHostsReportsV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesFgaHostsReportsV1PostData = Record<string, never>;\n\nexport type PostEntitiesFgaHostsReportsV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesFgaHostsReportsV1ApiResponse>;\n\nexport interface PostEntitiesFgaHostsReportsV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesFgaHostsReportsV1QueryParams,\n    PostEntitiesFgaHostsReportsV1PostData\n  > {\n  api: DevicesRequestApi;\n  method: 'postEntitiesFgaHostsReportsV1';\n}\n\n// types for postEntitiesFgaHostsV1\n\nexport type PostEntitiesFgaHostsV1QueryParams = BaseUrlParams;\n\nexport type PostEntitiesFgaHostsV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesFgaHostsV1PostData = Record<string, never>;\n\nexport type PostEntitiesFgaHostsV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesFgaHostsV1ApiResponse>;\n\nexport interface PostEntitiesFgaHostsV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesFgaHostsV1QueryParams,\n    PostEntitiesFgaHostsV1PostData\n  > {\n  api: DevicesRequestApi;\n  method: 'postEntitiesFgaHostsV1';\n}\n\n// types for postEntitiesGroupActionsV1\n\nexport interface PostEntitiesGroupActionsV1QueryParams extends BaseUrlParams {\n  ids: QueryParam;\n  actionName: QueryParam;\n  disableHostnameCheck?: QueryParam;\n}\n\nexport type PostEntitiesGroupActionsV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesGroupActionsV1PostData = Record<string, never>;\n\nexport type PostEntitiesGroupActionsV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesGroupActionsV1ApiResponse>;\n\nexport interface PostEntitiesGroupActionsV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesGroupActionsV1QueryParams,\n    PostEntitiesGroupActionsV1PostData\n  > {\n  api: DevicesRequestApi;\n  method: 'postEntitiesGroupActionsV1';\n}\n\n// types for postEntitiesGroupsV1\n\nexport type PostEntitiesGroupsV1QueryParams = BaseUrlParams;\n\nexport type PostEntitiesGroupsV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesGroupsV1PostData = Record<string, never>;\n\nexport type PostEntitiesGroupsV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesGroupsV1ApiResponse>;\n\nexport interface PostEntitiesGroupsV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesGroupsV1QueryParams,\n    PostEntitiesGroupsV1PostData\n  > {\n  api: DevicesRequestApi;\n  method: 'postEntitiesGroupsV1';\n}\n\n// general types\n\nexport type DevicesApiRequestMessage =\n  | DeleteEntitiesGroupsV1RequestMessage\n  | GetAggregatesBucketsV1RequestMessage\n  | GetAggregatesFgaTagPrefixCountsV1RequestMessage\n  | GetAggregatesTagPrefixCountsV1RequestMessage\n  | GetEntitiesDevicesV1RequestMessage\n  | GetEntitiesFgaGroupsV1RequestMessage\n  | GetEntitiesGroupsV1RequestMessage\n  | GetQueriesAvailableGroupsV1RequestMessage\n  | GetQueriesDevicesHiddenV2RequestMessage\n  | GetQueriesDevicesV1RequestMessage\n  | GetQueriesDevicesV2RequestMessage\n  | GetQueriesFgaGroupsV1RequestMessage\n  | GetQueriesGroupsV1RequestMessage\n  | PatchEntitiesDevicesTagsV2RequestMessage\n  | PatchEntitiesDevicesV1RequestMessage\n  | PatchEntitiesGroupsV1RequestMessage\n  | PostAggregatesDevicesGetV1RequestMessage\n  | PostAggregatesFgaHostsGetV1RequestMessage\n  | PostCombinedDevicesLoginHistoryV1RequestMessage\n  | PostCombinedFgaHostsLoginHistoryV1RequestMessage\n  | PostEntitiesDevicesActionsV4RequestMessage\n  | PostEntitiesDevicesHiddenActionsV4RequestMessage\n  | PostEntitiesDevicesReportsV1RequestMessage\n  | PostEntitiesDevicesV1RequestMessage\n  | PostEntitiesDevicesV2RequestMessage\n  | PostEntitiesFgaHostsReportsV1RequestMessage\n  | PostEntitiesFgaHostsV1RequestMessage\n  | PostEntitiesGroupActionsV1RequestMessage\n  | PostEntitiesGroupsV1RequestMessage;\n\nexport type DevicesApiResponseMessage =\n  | DeleteEntitiesGroupsV1ResponseMessage\n  | GetAggregatesBucketsV1ResponseMessage\n  | GetAggregatesFgaTagPrefixCountsV1ResponseMessage\n  | GetAggregatesTagPrefixCountsV1ResponseMessage\n  | GetEntitiesDevicesV1ResponseMessage\n  | GetEntitiesFgaGroupsV1ResponseMessage\n  | GetEntitiesGroupsV1ResponseMessage\n  | GetQueriesAvailableGroupsV1ResponseMessage\n  | GetQueriesDevicesHiddenV2ResponseMessage\n  | GetQueriesDevicesV1ResponseMessage\n  | GetQueriesDevicesV2ResponseMessage\n  | GetQueriesFgaGroupsV1ResponseMessage\n  | GetQueriesGroupsV1ResponseMessage\n  | PatchEntitiesDevicesTagsV2ResponseMessage\n  | PatchEntitiesDevicesV1ResponseMessage\n  | PatchEntitiesGroupsV1ResponseMessage\n  | PostAggregatesDevicesGetV1ResponseMessage\n  | PostAggregatesFgaHostsGetV1ResponseMessage\n  | PostCombinedDevicesLoginHistoryV1ResponseMessage\n  | PostCombinedFgaHostsLoginHistoryV1ResponseMessage\n  | PostEntitiesDevicesActionsV4ResponseMessage\n  | PostEntitiesDevicesHiddenActionsV4ResponseMessage\n  | PostEntitiesDevicesReportsV1ResponseMessage\n  | PostEntitiesDevicesV1ResponseMessage\n  | PostEntitiesDevicesV2ResponseMessage\n  | PostEntitiesFgaHostsReportsV1ResponseMessage\n  | PostEntitiesFgaHostsV1ResponseMessage\n  | PostEntitiesGroupActionsV1ResponseMessage\n  | PostEntitiesGroupsV1ResponseMessage;\n\nexport class DevicesApiBridge {\n  private bridge;\n\n  constructor(bridge: Bridge) {\n    this.bridge = bridge;\n  }\n\n  getBridge() {\n    return this.bridge;\n  }\n\n  async deleteEntitiesGroupsV1(\n    urlParams: DeleteEntitiesGroupsV1QueryParams,\n  ): Promise<DeleteEntitiesGroupsV1ApiResponse> {\n    const message: DeleteEntitiesGroupsV1RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'deleteEntitiesGroupsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getAggregatesBucketsV1(\n    urlParams: GetAggregatesBucketsV1QueryParams,\n  ): Promise<GetAggregatesBucketsV1ApiResponse> {\n    const message: GetAggregatesBucketsV1RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'getAggregatesBucketsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getAggregatesFgaTagPrefixCountsV1(\n    urlParams: GetAggregatesFgaTagPrefixCountsV1QueryParams,\n  ): Promise<GetAggregatesFgaTagPrefixCountsV1ApiResponse> {\n    const message: GetAggregatesFgaTagPrefixCountsV1RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'getAggregatesFgaTagPrefixCountsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getAggregatesTagPrefixCountsV1(\n    urlParams: GetAggregatesTagPrefixCountsV1QueryParams,\n  ): Promise<GetAggregatesTagPrefixCountsV1ApiResponse> {\n    const message: GetAggregatesTagPrefixCountsV1RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'getAggregatesTagPrefixCountsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getEntitiesDevicesV1(\n    urlParams: GetEntitiesDevicesV1QueryParams,\n  ): Promise<GetEntitiesDevicesV1ApiResponse> {\n    const message: GetEntitiesDevicesV1RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'getEntitiesDevicesV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getEntitiesFgaGroupsV1(\n    urlParams: GetEntitiesFgaGroupsV1QueryParams,\n  ): Promise<GetEntitiesFgaGroupsV1ApiResponse> {\n    const message: GetEntitiesFgaGroupsV1RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'getEntitiesFgaGroupsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getEntitiesGroupsV1(\n    urlParams: GetEntitiesGroupsV1QueryParams,\n  ): Promise<GetEntitiesGroupsV1ApiResponse> {\n    const message: GetEntitiesGroupsV1RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'getEntitiesGroupsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getQueriesAvailableGroupsV1(\n    urlParams: GetQueriesAvailableGroupsV1QueryParams = {},\n  ): Promise<GetQueriesAvailableGroupsV1ApiResponse> {\n    const message: GetQueriesAvailableGroupsV1RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'getQueriesAvailableGroupsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getQueriesDevicesHiddenV2(\n    urlParams: GetQueriesDevicesHiddenV2QueryParams = {},\n  ): Promise<GetQueriesDevicesHiddenV2ApiResponse> {\n    const message: GetQueriesDevicesHiddenV2RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'getQueriesDevicesHiddenV2',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getQueriesDevicesV1(\n    urlParams: GetQueriesDevicesV1QueryParams = {},\n  ): Promise<GetQueriesDevicesV1ApiResponse> {\n    const message: GetQueriesDevicesV1RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'getQueriesDevicesV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getQueriesDevicesV2(\n    urlParams: GetQueriesDevicesV2QueryParams = {},\n  ): Promise<GetQueriesDevicesV2ApiResponse> {\n    const message: GetQueriesDevicesV2RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'getQueriesDevicesV2',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getQueriesFgaGroupsV1(\n    urlParams: GetQueriesFgaGroupsV1QueryParams = {},\n  ): Promise<GetQueriesFgaGroupsV1ApiResponse> {\n    const message: GetQueriesFgaGroupsV1RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'getQueriesFgaGroupsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getQueriesGroupsV1(\n    urlParams: GetQueriesGroupsV1QueryParams = {},\n  ): Promise<GetQueriesGroupsV1ApiResponse> {\n    const message: GetQueriesGroupsV1RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'getQueriesGroupsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async patchEntitiesDevicesTagsV2(\n    postBody: PatchEntitiesDevicesTagsV2PostData,\n    urlParams: PatchEntitiesDevicesTagsV2QueryParams = {},\n  ): Promise<PatchEntitiesDevicesTagsV2ApiResponse> {\n    const message: PatchEntitiesDevicesTagsV2RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'patchEntitiesDevicesTagsV2',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async patchEntitiesDevicesV1(\n    postBody: PatchEntitiesDevicesV1PostData,\n    urlParams: PatchEntitiesDevicesV1QueryParams,\n  ): Promise<PatchEntitiesDevicesV1ApiResponse> {\n    const message: PatchEntitiesDevicesV1RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'patchEntitiesDevicesV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async patchEntitiesGroupsV1(\n    postBody: PatchEntitiesGroupsV1PostData,\n    urlParams: PatchEntitiesGroupsV1QueryParams = {},\n  ): Promise<PatchEntitiesGroupsV1ApiResponse> {\n    const message: PatchEntitiesGroupsV1RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'patchEntitiesGroupsV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postAggregatesDevicesGetV1(\n    postBody: PostAggregatesDevicesGetV1PostData,\n    urlParams: PostAggregatesDevicesGetV1QueryParams = {},\n  ): Promise<PostAggregatesDevicesGetV1ApiResponse> {\n    const message: PostAggregatesDevicesGetV1RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'postAggregatesDevicesGetV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postAggregatesFgaHostsGetV1(\n    postBody: PostAggregatesFgaHostsGetV1PostData,\n    urlParams: PostAggregatesFgaHostsGetV1QueryParams = {},\n  ): Promise<PostAggregatesFgaHostsGetV1ApiResponse> {\n    const message: PostAggregatesFgaHostsGetV1RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'postAggregatesFgaHostsGetV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postCombinedDevicesLoginHistoryV1(\n    postBody: PostCombinedDevicesLoginHistoryV1PostData,\n    urlParams: PostCombinedDevicesLoginHistoryV1QueryParams = {},\n  ): Promise<PostCombinedDevicesLoginHistoryV1ApiResponse> {\n    const message: PostCombinedDevicesLoginHistoryV1RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'postCombinedDevicesLoginHistoryV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postCombinedFgaHostsLoginHistoryV1(\n    postBody: PostCombinedFgaHostsLoginHistoryV1PostData,\n    urlParams: PostCombinedFgaHostsLoginHistoryV1QueryParams = {},\n  ): Promise<PostCombinedFgaHostsLoginHistoryV1ApiResponse> {\n    const message: PostCombinedFgaHostsLoginHistoryV1RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'postCombinedFgaHostsLoginHistoryV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesDevicesActionsV4(\n    postBody: PostEntitiesDevicesActionsV4PostData,\n    urlParams: PostEntitiesDevicesActionsV4QueryParams = {},\n  ): Promise<PostEntitiesDevicesActionsV4ApiResponse> {\n    const message: PostEntitiesDevicesActionsV4RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'postEntitiesDevicesActionsV4',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesDevicesHiddenActionsV4(\n    postBody: PostEntitiesDevicesHiddenActionsV4PostData,\n    urlParams: PostEntitiesDevicesHiddenActionsV4QueryParams = {},\n  ): Promise<PostEntitiesDevicesHiddenActionsV4ApiResponse> {\n    const message: PostEntitiesDevicesHiddenActionsV4RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'postEntitiesDevicesHiddenActionsV4',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesDevicesReportsV1(\n    postBody: PostEntitiesDevicesReportsV1PostData,\n    urlParams: PostEntitiesDevicesReportsV1QueryParams = {},\n  ): Promise<PostEntitiesDevicesReportsV1ApiResponse> {\n    const message: PostEntitiesDevicesReportsV1RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'postEntitiesDevicesReportsV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesDevicesV1(\n    postBody: PostEntitiesDevicesV1PostData,\n    urlParams: PostEntitiesDevicesV1QueryParams,\n  ): Promise<PostEntitiesDevicesV1ApiResponse> {\n    const message: PostEntitiesDevicesV1RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'postEntitiesDevicesV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesDevicesV2(\n    postBody: PostEntitiesDevicesV2PostData,\n    urlParams: PostEntitiesDevicesV2QueryParams = {},\n  ): Promise<PostEntitiesDevicesV2ApiResponse> {\n    const message: PostEntitiesDevicesV2RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'postEntitiesDevicesV2',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesFgaHostsReportsV1(\n    postBody: PostEntitiesFgaHostsReportsV1PostData,\n    urlParams: PostEntitiesFgaHostsReportsV1QueryParams = {},\n  ): Promise<PostEntitiesFgaHostsReportsV1ApiResponse> {\n    const message: PostEntitiesFgaHostsReportsV1RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'postEntitiesFgaHostsReportsV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesFgaHostsV1(\n    postBody: PostEntitiesFgaHostsV1PostData,\n    urlParams: PostEntitiesFgaHostsV1QueryParams = {},\n  ): Promise<PostEntitiesFgaHostsV1ApiResponse> {\n    const message: PostEntitiesFgaHostsV1RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'postEntitiesFgaHostsV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesGroupActionsV1(\n    postBody: PostEntitiesGroupActionsV1PostData,\n    urlParams: PostEntitiesGroupActionsV1QueryParams,\n  ): Promise<PostEntitiesGroupActionsV1ApiResponse> {\n    const message: PostEntitiesGroupActionsV1RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'postEntitiesGroupActionsV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesGroupsV1(\n    postBody: PostEntitiesGroupsV1PostData,\n    urlParams: PostEntitiesGroupsV1QueryParams = {},\n  ): Promise<PostEntitiesGroupsV1ApiResponse> {\n    const message: PostEntitiesGroupsV1RequestMessage = {\n      type: 'api',\n      api: 'devices',\n      method: 'postEntitiesGroupsV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n}\n","/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\n\nimport type { Bridge } from '../../bridge';\n\nimport type {\n  ApiResponsePayload,\n  BaseApiRequestMessage,\n  BaseApiResponseMessage,\n  BaseUrlParams,\n  QueryParam,\n} from '../../types';\n\nexport type FaasGatewayRequestApi = 'faasGateway';\n\nexport type CommonApiResponseMessage =\n  BaseApiResponseMessage<ApiResponsePayload>;\n\nexport interface CommonApiRequestMessage\n  extends BaseApiRequestMessage<BaseUrlParams, unknown> {\n  api: FaasGatewayRequestApi;\n}\n\n// types for getEntitiesExecutionV1\n\nexport interface GetEntitiesExecutionV1QueryParams extends BaseUrlParams {\n  id: QueryParam;\n}\n\nexport type GetEntitiesExecutionV1ApiResponse = ApiResponsePayload;\n\nexport type GetEntitiesExecutionV1ResponseMessage =\n  BaseApiResponseMessage<GetEntitiesExecutionV1ApiResponse>;\n\nexport interface GetEntitiesExecutionV1RequestMessage\n  extends BaseApiRequestMessage<GetEntitiesExecutionV1QueryParams> {\n  api: FaasGatewayRequestApi;\n  method: 'getEntitiesExecutionV1';\n}\n\n// types for postEntitiesExecutionV1\n\nexport type PostEntitiesExecutionV1QueryParams = BaseUrlParams;\n\nexport type PostEntitiesExecutionV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesExecutionV1PostData = {\n  payload?: {\n    path?: string;\n    method?: string;\n    body?: Record<string, unknown>;\n    params?: Record<string, unknown>;\n  };\n  [key: string]: unknown;\n};\n\nexport type PostEntitiesExecutionV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesExecutionV1ApiResponse>;\n\nexport interface PostEntitiesExecutionV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesExecutionV1QueryParams,\n    PostEntitiesExecutionV1PostData\n  > {\n  api: FaasGatewayRequestApi;\n  method: 'postEntitiesExecutionV1';\n}\n\n// general types\n\nexport type FaasGatewayApiRequestMessage =\n  | GetEntitiesExecutionV1RequestMessage\n  | PostEntitiesExecutionV1RequestMessage;\n\nexport type FaasGatewayApiResponseMessage =\n  | GetEntitiesExecutionV1ResponseMessage\n  | PostEntitiesExecutionV1ResponseMessage;\n\nexport class FaasGatewayApiBridge {\n  private bridge;\n\n  constructor(bridge: Bridge) {\n    this.bridge = bridge;\n  }\n\n  getBridge() {\n    return this.bridge;\n  }\n\n  async getEntitiesExecutionV1(\n    urlParams: GetEntitiesExecutionV1QueryParams,\n  ): Promise<GetEntitiesExecutionV1ApiResponse> {\n    const message: GetEntitiesExecutionV1RequestMessage = {\n      type: 'api',\n      api: 'faasGateway',\n      method: 'getEntitiesExecutionV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesExecutionV1(\n    postBody: PostEntitiesExecutionV1PostData,\n    urlParams: PostEntitiesExecutionV1QueryParams = {},\n  ): Promise<PostEntitiesExecutionV1ApiResponse> {\n    const message: PostEntitiesExecutionV1RequestMessage = {\n      type: 'api',\n      api: 'faasGateway',\n      method: 'postEntitiesExecutionV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n}\n","/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\n\nimport type { Bridge } from '../../bridge';\n\nimport type {\n  ApiResponsePayload,\n  BaseApiRequestMessage,\n  BaseApiResponseMessage,\n  BaseUrlParams,\n  QueryParam,\n} from '../../types';\n\nexport type FwmgrRequestApi = 'fwmgr';\n\nexport type CommonApiResponseMessage =\n  BaseApiResponseMessage<ApiResponsePayload>;\n\nexport interface CommonApiRequestMessage\n  extends BaseApiRequestMessage<BaseUrlParams, unknown> {\n  api: FwmgrRequestApi;\n}\n\n// types for deleteEntitiesNetworkLocationsV1\n\nexport interface DeleteEntitiesNetworkLocationsV1QueryParams\n  extends BaseUrlParams {\n  ids: QueryParam;\n  comment?: QueryParam;\n}\n\nexport type DeleteEntitiesNetworkLocationsV1ApiResponse = ApiResponsePayload;\n\nexport type DeleteEntitiesNetworkLocationsV1ResponseMessage =\n  BaseApiResponseMessage<DeleteEntitiesNetworkLocationsV1ApiResponse>;\n\nexport interface DeleteEntitiesNetworkLocationsV1RequestMessage\n  extends BaseApiRequestMessage<DeleteEntitiesNetworkLocationsV1QueryParams> {\n  api: FwmgrRequestApi;\n  method: 'deleteEntitiesNetworkLocationsV1';\n}\n\n// types for deleteEntitiesPoliciesV1\n\nexport interface DeleteEntitiesPoliciesV1QueryParams extends BaseUrlParams {\n  ids: QueryParam;\n}\n\nexport type DeleteEntitiesPoliciesV1ApiResponse = ApiResponsePayload;\n\nexport type DeleteEntitiesPoliciesV1ResponseMessage =\n  BaseApiResponseMessage<DeleteEntitiesPoliciesV1ApiResponse>;\n\nexport interface DeleteEntitiesPoliciesV1RequestMessage\n  extends BaseApiRequestMessage<DeleteEntitiesPoliciesV1QueryParams> {\n  api: FwmgrRequestApi;\n  method: 'deleteEntitiesPoliciesV1';\n}\n\n// types for deleteEntitiesRuleGroupsV1\n\nexport interface DeleteEntitiesRuleGroupsV1QueryParams extends BaseUrlParams {\n  ids: QueryParam;\n  comment?: QueryParam;\n}\n\nexport type DeleteEntitiesRuleGroupsV1ApiResponse = ApiResponsePayload;\n\nexport type DeleteEntitiesRuleGroupsV1ResponseMessage =\n  BaseApiResponseMessage<DeleteEntitiesRuleGroupsV1ApiResponse>;\n\nexport interface DeleteEntitiesRuleGroupsV1RequestMessage\n  extends BaseApiRequestMessage<DeleteEntitiesRuleGroupsV1QueryParams> {\n  api: FwmgrRequestApi;\n  method: 'deleteEntitiesRuleGroupsV1';\n}\n\n// types for getEntitiesEventsV1\n\nexport interface GetEntitiesEventsV1QueryParams extends BaseUrlParams {\n  ids: QueryParam;\n}\n\nexport type GetEntitiesEventsV1ApiResponse = ApiResponsePayload;\n\nexport type GetEntitiesEventsV1ResponseMessage =\n  BaseApiResponseMessage<GetEntitiesEventsV1ApiResponse>;\n\nexport interface GetEntitiesEventsV1RequestMessage\n  extends BaseApiRequestMessage<GetEntitiesEventsV1QueryParams> {\n  api: FwmgrRequestApi;\n  method: 'getEntitiesEventsV1';\n}\n\n// types for getEntitiesFirewallFieldsV1\n\nexport interface GetEntitiesFirewallFieldsV1QueryParams extends BaseUrlParams {\n  ids: QueryParam;\n}\n\nexport type GetEntitiesFirewallFieldsV1ApiResponse = ApiResponsePayload;\n\nexport type GetEntitiesFirewallFieldsV1ResponseMessage =\n  BaseApiResponseMessage<GetEntitiesFirewallFieldsV1ApiResponse>;\n\nexport interface GetEntitiesFirewallFieldsV1RequestMessage\n  extends BaseApiRequestMessage<GetEntitiesFirewallFieldsV1QueryParams> {\n  api: FwmgrRequestApi;\n  method: 'getEntitiesFirewallFieldsV1';\n}\n\n// types for getEntitiesNetworkLocationsDetailsV1\n\nexport interface GetEntitiesNetworkLocationsDetailsV1QueryParams\n  extends BaseUrlParams {\n  ids: QueryParam;\n}\n\nexport type GetEntitiesNetworkLocationsDetailsV1ApiResponse =\n  ApiResponsePayload;\n\nexport type GetEntitiesNetworkLocationsDetailsV1ResponseMessage =\n  BaseApiResponseMessage<GetEntitiesNetworkLocationsDetailsV1ApiResponse>;\n\nexport interface GetEntitiesNetworkLocationsDetailsV1RequestMessage\n  extends BaseApiRequestMessage<GetEntitiesNetworkLocationsDetailsV1QueryParams> {\n  api: FwmgrRequestApi;\n  method: 'getEntitiesNetworkLocationsDetailsV1';\n}\n\n// types for getEntitiesNetworkLocationsV1\n\nexport interface GetEntitiesNetworkLocationsV1QueryParams\n  extends BaseUrlParams {\n  ids: QueryParam;\n}\n\nexport type GetEntitiesNetworkLocationsV1ApiResponse = ApiResponsePayload;\n\nexport type GetEntitiesNetworkLocationsV1ResponseMessage =\n  BaseApiResponseMessage<GetEntitiesNetworkLocationsV1ApiResponse>;\n\nexport interface GetEntitiesNetworkLocationsV1RequestMessage\n  extends BaseApiRequestMessage<GetEntitiesNetworkLocationsV1QueryParams> {\n  api: FwmgrRequestApi;\n  method: 'getEntitiesNetworkLocationsV1';\n}\n\n// types for getEntitiesPlatformsV1\n\nexport interface GetEntitiesPlatformsV1QueryParams extends BaseUrlParams {\n  ids: QueryParam;\n}\n\nexport type GetEntitiesPlatformsV1ApiResponse = ApiResponsePayload;\n\nexport type GetEntitiesPlatformsV1ResponseMessage =\n  BaseApiResponseMessage<GetEntitiesPlatformsV1ApiResponse>;\n\nexport interface GetEntitiesPlatformsV1RequestMessage\n  extends BaseApiRequestMessage<GetEntitiesPlatformsV1QueryParams> {\n  api: FwmgrRequestApi;\n  method: 'getEntitiesPlatformsV1';\n}\n\n// types for getEntitiesPoliciesV1\n\nexport interface GetEntitiesPoliciesV1QueryParams extends BaseUrlParams {\n  ids: QueryParam;\n}\n\nexport type GetEntitiesPoliciesV1ApiResponse = ApiResponsePayload;\n\nexport type GetEntitiesPoliciesV1ResponseMessage =\n  BaseApiResponseMessage<GetEntitiesPoliciesV1ApiResponse>;\n\nexport interface GetEntitiesPoliciesV1RequestMessage\n  extends BaseApiRequestMessage<GetEntitiesPoliciesV1QueryParams> {\n  api: FwmgrRequestApi;\n  method: 'getEntitiesPoliciesV1';\n}\n\n// types for getEntitiesRuleGroupsV1\n\nexport interface GetEntitiesRuleGroupsV1QueryParams extends BaseUrlParams {\n  ids: QueryParam;\n}\n\nexport type GetEntitiesRuleGroupsV1ApiResponse = ApiResponsePayload;\n\nexport type GetEntitiesRuleGroupsV1ResponseMessage =\n  BaseApiResponseMessage<GetEntitiesRuleGroupsV1ApiResponse>;\n\nexport interface GetEntitiesRuleGroupsV1RequestMessage\n  extends BaseApiRequestMessage<GetEntitiesRuleGroupsV1QueryParams> {\n  api: FwmgrRequestApi;\n  method: 'getEntitiesRuleGroupsV1';\n}\n\n// types for getEntitiesRulesV1\n\nexport interface GetEntitiesRulesV1QueryParams extends BaseUrlParams {\n  ids: QueryParam;\n}\n\nexport type GetEntitiesRulesV1ApiResponse = ApiResponsePayload;\n\nexport type GetEntitiesRulesV1ResponseMessage =\n  BaseApiResponseMessage<GetEntitiesRulesV1ApiResponse>;\n\nexport interface GetEntitiesRulesV1RequestMessage\n  extends BaseApiRequestMessage<GetEntitiesRulesV1QueryParams> {\n  api: FwmgrRequestApi;\n  method: 'getEntitiesRulesV1';\n}\n\n// types for getLibraryEntitiesRuleGroupsV1\n\nexport interface GetLibraryEntitiesRuleGroupsV1QueryParams\n  extends BaseUrlParams {\n  ids: QueryParam;\n}\n\nexport type GetLibraryEntitiesRuleGroupsV1ApiResponse = ApiResponsePayload;\n\nexport type GetLibraryEntitiesRuleGroupsV1ResponseMessage =\n  BaseApiResponseMessage<GetLibraryEntitiesRuleGroupsV1ApiResponse>;\n\nexport interface GetLibraryEntitiesRuleGroupsV1RequestMessage\n  extends BaseApiRequestMessage<GetLibraryEntitiesRuleGroupsV1QueryParams> {\n  api: FwmgrRequestApi;\n  method: 'getLibraryEntitiesRuleGroupsV1';\n}\n\n// types for getLibraryQueriesRuleGroupsV1\n\nexport interface GetLibraryQueriesRuleGroupsV1QueryParams\n  extends BaseUrlParams {\n  sort?: QueryParam;\n  filter?: string;\n  q?: QueryParam;\n  offset?: QueryParam;\n  limit?: QueryParam;\n}\n\nexport type GetLibraryQueriesRuleGroupsV1ApiResponse = ApiResponsePayload;\n\nexport type GetLibraryQueriesRuleGroupsV1ResponseMessage =\n  BaseApiResponseMessage<GetLibraryQueriesRuleGroupsV1ApiResponse>;\n\nexport interface GetLibraryQueriesRuleGroupsV1RequestMessage\n  extends BaseApiRequestMessage<GetLibraryQueriesRuleGroupsV1QueryParams> {\n  api: FwmgrRequestApi;\n  method: 'getLibraryQueriesRuleGroupsV1';\n}\n\n// types for getQueriesEventsV1\n\nexport interface GetQueriesEventsV1QueryParams extends BaseUrlParams {\n  sort?: QueryParam;\n  filter?: string;\n  q?: QueryParam;\n  offset?: QueryParam;\n  limit?: QueryParam;\n}\n\nexport type GetQueriesEventsV1ApiResponse = ApiResponsePayload;\n\nexport type GetQueriesEventsV1ResponseMessage =\n  BaseApiResponseMessage<GetQueriesEventsV1ApiResponse>;\n\nexport interface GetQueriesEventsV1RequestMessage\n  extends BaseApiRequestMessage<GetQueriesEventsV1QueryParams> {\n  api: FwmgrRequestApi;\n  method: 'getQueriesEventsV1';\n}\n\n// types for getQueriesFirewallFieldsV1\n\nexport interface GetQueriesFirewallFieldsV1QueryParams extends BaseUrlParams {\n  platform?: QueryParam;\n  offset?: QueryParam;\n  limit?: QueryParam;\n}\n\nexport type GetQueriesFirewallFieldsV1ApiResponse = ApiResponsePayload;\n\nexport type GetQueriesFirewallFieldsV1ResponseMessage =\n  BaseApiResponseMessage<GetQueriesFirewallFieldsV1ApiResponse>;\n\nexport interface GetQueriesFirewallFieldsV1RequestMessage\n  extends BaseApiRequestMessage<GetQueriesFirewallFieldsV1QueryParams> {\n  api: FwmgrRequestApi;\n  method: 'getQueriesFirewallFieldsV1';\n}\n\n// types for getQueriesNetworkLocationsV1\n\nexport interface GetQueriesNetworkLocationsV1QueryParams extends BaseUrlParams {\n  filter?: string;\n  limit?: QueryParam;\n  offset?: QueryParam;\n  q?: QueryParam;\n  sort?: QueryParam;\n}\n\nexport type GetQueriesNetworkLocationsV1ApiResponse = ApiResponsePayload;\n\nexport type GetQueriesNetworkLocationsV1ResponseMessage =\n  BaseApiResponseMessage<GetQueriesNetworkLocationsV1ApiResponse>;\n\nexport interface GetQueriesNetworkLocationsV1RequestMessage\n  extends BaseApiRequestMessage<GetQueriesNetworkLocationsV1QueryParams> {\n  api: FwmgrRequestApi;\n  method: 'getQueriesNetworkLocationsV1';\n}\n\n// types for getQueriesPlatformsV1\n\nexport interface GetQueriesPlatformsV1QueryParams extends BaseUrlParams {\n  offset?: QueryParam;\n  limit?: QueryParam;\n}\n\nexport type GetQueriesPlatformsV1ApiResponse = ApiResponsePayload;\n\nexport type GetQueriesPlatformsV1ResponseMessage =\n  BaseApiResponseMessage<GetQueriesPlatformsV1ApiResponse>;\n\nexport interface GetQueriesPlatformsV1RequestMessage\n  extends BaseApiRequestMessage<GetQueriesPlatformsV1QueryParams> {\n  api: FwmgrRequestApi;\n  method: 'getQueriesPlatformsV1';\n}\n\n// types for getQueriesPolicyRulesV1\n\nexport interface GetQueriesPolicyRulesV1QueryParams extends BaseUrlParams {\n  id?: QueryParam;\n  sort?: QueryParam;\n  filter?: string;\n  q?: QueryParam;\n  offset?: QueryParam;\n  limit?: QueryParam;\n}\n\nexport type GetQueriesPolicyRulesV1ApiResponse = ApiResponsePayload;\n\nexport type GetQueriesPolicyRulesV1ResponseMessage =\n  BaseApiResponseMessage<GetQueriesPolicyRulesV1ApiResponse>;\n\nexport interface GetQueriesPolicyRulesV1RequestMessage\n  extends BaseApiRequestMessage<GetQueriesPolicyRulesV1QueryParams> {\n  api: FwmgrRequestApi;\n  method: 'getQueriesPolicyRulesV1';\n}\n\n// types for getQueriesRuleGroupsV1\n\nexport interface GetQueriesRuleGroupsV1QueryParams extends BaseUrlParams {\n  sort?: QueryParam;\n  filter?: string;\n  q?: QueryParam;\n  offset?: QueryParam;\n  limit?: QueryParam;\n}\n\nexport type GetQueriesRuleGroupsV1ApiResponse = ApiResponsePayload;\n\nexport type GetQueriesRuleGroupsV1ResponseMessage =\n  BaseApiResponseMessage<GetQueriesRuleGroupsV1ApiResponse>;\n\nexport interface GetQueriesRuleGroupsV1RequestMessage\n  extends BaseApiRequestMessage<GetQueriesRuleGroupsV1QueryParams> {\n  api: FwmgrRequestApi;\n  method: 'getQueriesRuleGroupsV1';\n}\n\n// types for getQueriesRulesV1\n\nexport interface GetQueriesRulesV1QueryParams extends BaseUrlParams {\n  sort?: QueryParam;\n  filter?: string;\n  q?: QueryParam;\n  offset?: QueryParam;\n  limit?: QueryParam;\n}\n\nexport type GetQueriesRulesV1ApiResponse = ApiResponsePayload;\n\nexport type GetQueriesRulesV1ResponseMessage =\n  BaseApiResponseMessage<GetQueriesRulesV1ApiResponse>;\n\nexport interface GetQueriesRulesV1RequestMessage\n  extends BaseApiRequestMessage<GetQueriesRulesV1QueryParams> {\n  api: FwmgrRequestApi;\n  method: 'getQueriesRulesV1';\n}\n\n// types for patchEntitiesNetworkLocationsV1\n\nexport interface PatchEntitiesNetworkLocationsV1QueryParams\n  extends BaseUrlParams {\n  comment?: QueryParam;\n}\n\nexport type PatchEntitiesNetworkLocationsV1ApiResponse = ApiResponsePayload;\n\nexport type PatchEntitiesNetworkLocationsV1PostData = Record<string, never>;\n\nexport type PatchEntitiesNetworkLocationsV1ResponseMessage =\n  BaseApiResponseMessage<PatchEntitiesNetworkLocationsV1ApiResponse>;\n\nexport interface PatchEntitiesNetworkLocationsV1RequestMessage\n  extends BaseApiRequestMessage<\n    PatchEntitiesNetworkLocationsV1QueryParams,\n    PatchEntitiesNetworkLocationsV1PostData\n  > {\n  api: FwmgrRequestApi;\n  method: 'patchEntitiesNetworkLocationsV1';\n}\n\n// types for patchEntitiesRuleGroupsV1\n\nexport interface PatchEntitiesRuleGroupsV1QueryParams extends BaseUrlParams {\n  comment?: QueryParam;\n}\n\nexport type PatchEntitiesRuleGroupsV1ApiResponse = ApiResponsePayload;\n\nexport type PatchEntitiesRuleGroupsV1PostData = Record<string, never>;\n\nexport type PatchEntitiesRuleGroupsV1ResponseMessage =\n  BaseApiResponseMessage<PatchEntitiesRuleGroupsV1ApiResponse>;\n\nexport interface PatchEntitiesRuleGroupsV1RequestMessage\n  extends BaseApiRequestMessage<\n    PatchEntitiesRuleGroupsV1QueryParams,\n    PatchEntitiesRuleGroupsV1PostData\n  > {\n  api: FwmgrRequestApi;\n  method: 'patchEntitiesRuleGroupsV1';\n}\n\n// types for postAggregatesEventsGetV1\n\nexport type PostAggregatesEventsGetV1QueryParams = BaseUrlParams;\n\nexport type PostAggregatesEventsGetV1ApiResponse = ApiResponsePayload;\n\nexport type PostAggregatesEventsGetV1PostData = Record<string, never>;\n\nexport type PostAggregatesEventsGetV1ResponseMessage =\n  BaseApiResponseMessage<PostAggregatesEventsGetV1ApiResponse>;\n\nexport interface PostAggregatesEventsGetV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostAggregatesEventsGetV1QueryParams,\n    PostAggregatesEventsGetV1PostData\n  > {\n  api: FwmgrRequestApi;\n  method: 'postAggregatesEventsGetV1';\n}\n\n// types for postAggregatesPolicyRulesGetV1\n\nexport type PostAggregatesPolicyRulesGetV1QueryParams = BaseUrlParams;\n\nexport type PostAggregatesPolicyRulesGetV1ApiResponse = ApiResponsePayload;\n\nexport type PostAggregatesPolicyRulesGetV1PostData = Record<string, never>;\n\nexport type PostAggregatesPolicyRulesGetV1ResponseMessage =\n  BaseApiResponseMessage<PostAggregatesPolicyRulesGetV1ApiResponse>;\n\nexport interface PostAggregatesPolicyRulesGetV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostAggregatesPolicyRulesGetV1QueryParams,\n    PostAggregatesPolicyRulesGetV1PostData\n  > {\n  api: FwmgrRequestApi;\n  method: 'postAggregatesPolicyRulesGetV1';\n}\n\n// types for postAggregatesRuleGroupsGetV1\n\nexport type PostAggregatesRuleGroupsGetV1QueryParams = BaseUrlParams;\n\nexport type PostAggregatesRuleGroupsGetV1ApiResponse = ApiResponsePayload;\n\nexport type PostAggregatesRuleGroupsGetV1PostData = Record<string, never>;\n\nexport type PostAggregatesRuleGroupsGetV1ResponseMessage =\n  BaseApiResponseMessage<PostAggregatesRuleGroupsGetV1ApiResponse>;\n\nexport interface PostAggregatesRuleGroupsGetV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostAggregatesRuleGroupsGetV1QueryParams,\n    PostAggregatesRuleGroupsGetV1PostData\n  > {\n  api: FwmgrRequestApi;\n  method: 'postAggregatesRuleGroupsGetV1';\n}\n\n// types for postAggregatesRulesGetV1\n\nexport type PostAggregatesRulesGetV1QueryParams = BaseUrlParams;\n\nexport type PostAggregatesRulesGetV1ApiResponse = ApiResponsePayload;\n\nexport type PostAggregatesRulesGetV1PostData = Record<string, never>;\n\nexport type PostAggregatesRulesGetV1ResponseMessage =\n  BaseApiResponseMessage<PostAggregatesRulesGetV1ApiResponse>;\n\nexport interface PostAggregatesRulesGetV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostAggregatesRulesGetV1QueryParams,\n    PostAggregatesRulesGetV1PostData\n  > {\n  api: FwmgrRequestApi;\n  method: 'postAggregatesRulesGetV1';\n}\n\n// types for postEntitiesNetworkLocationsMetadataV1\n\nexport type PostEntitiesNetworkLocationsMetadataV1QueryParams = BaseUrlParams;\n\nexport type PostEntitiesNetworkLocationsMetadataV1ApiResponse =\n  ApiResponsePayload;\n\nexport type PostEntitiesNetworkLocationsMetadataV1PostData = Record<string, never>;\n\nexport type PostEntitiesNetworkLocationsMetadataV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesNetworkLocationsMetadataV1ApiResponse>;\n\nexport interface PostEntitiesNetworkLocationsMetadataV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesNetworkLocationsMetadataV1QueryParams,\n    PostEntitiesNetworkLocationsMetadataV1PostData\n  > {\n  api: FwmgrRequestApi;\n  method: 'postEntitiesNetworkLocationsMetadataV1';\n}\n\n// types for postEntitiesNetworkLocationsPrecedenceV1\n\nexport type PostEntitiesNetworkLocationsPrecedenceV1QueryParams = BaseUrlParams;\n\nexport type PostEntitiesNetworkLocationsPrecedenceV1ApiResponse =\n  ApiResponsePayload;\n\nexport type PostEntitiesNetworkLocationsPrecedenceV1PostData = Record<string, never>;\n\nexport type PostEntitiesNetworkLocationsPrecedenceV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesNetworkLocationsPrecedenceV1ApiResponse>;\n\nexport interface PostEntitiesNetworkLocationsPrecedenceV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesNetworkLocationsPrecedenceV1QueryParams,\n    PostEntitiesNetworkLocationsPrecedenceV1PostData\n  > {\n  api: FwmgrRequestApi;\n  method: 'postEntitiesNetworkLocationsPrecedenceV1';\n}\n\n// types for postEntitiesNetworkLocationsV1\n\nexport interface PostEntitiesNetworkLocationsV1QueryParams\n  extends BaseUrlParams {\n  comment?: QueryParam;\n  cloneId?: QueryParam;\n  addFwRules?: QueryParam;\n}\n\nexport type PostEntitiesNetworkLocationsV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesNetworkLocationsV1PostData = Record<string, never>;\n\nexport type PostEntitiesNetworkLocationsV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesNetworkLocationsV1ApiResponse>;\n\nexport interface PostEntitiesNetworkLocationsV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesNetworkLocationsV1QueryParams,\n    PostEntitiesNetworkLocationsV1PostData\n  > {\n  api: FwmgrRequestApi;\n  method: 'postEntitiesNetworkLocationsV1';\n}\n\n// types for postEntitiesOntologyV1\n\nexport type PostEntitiesOntologyV1QueryParams = BaseUrlParams;\n\nexport type PostEntitiesOntologyV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesOntologyV1PostData = Record<string, never>;\n\nexport type PostEntitiesOntologyV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesOntologyV1ApiResponse>;\n\nexport interface PostEntitiesOntologyV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesOntologyV1QueryParams,\n    PostEntitiesOntologyV1PostData\n  > {\n  api: FwmgrRequestApi;\n  method: 'postEntitiesOntologyV1';\n}\n\n// types for postEntitiesRuleGroupsV1\n\nexport interface PostEntitiesRuleGroupsV1QueryParams extends BaseUrlParams {\n  cloneId?: QueryParam;\n  library?: QueryParam;\n}\n\nexport type PostEntitiesRuleGroupsV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesRuleGroupsV1PostData = Record<string, never>;\n\nexport type PostEntitiesRuleGroupsV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesRuleGroupsV1ApiResponse>;\n\nexport interface PostEntitiesRuleGroupsV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesRuleGroupsV1QueryParams,\n    PostEntitiesRuleGroupsV1PostData\n  > {\n  api: FwmgrRequestApi;\n  method: 'postEntitiesRuleGroupsV1';\n}\n\n// types for postEntitiesRulesValidateFilepathV1\n\nexport type PostEntitiesRulesValidateFilepathV1QueryParams = BaseUrlParams;\n\nexport type PostEntitiesRulesValidateFilepathV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesRulesValidateFilepathV1PostData = Record<string, never>;\n\nexport type PostEntitiesRulesValidateFilepathV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesRulesValidateFilepathV1ApiResponse>;\n\nexport interface PostEntitiesRulesValidateFilepathV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesRulesValidateFilepathV1QueryParams,\n    PostEntitiesRulesValidateFilepathV1PostData\n  > {\n  api: FwmgrRequestApi;\n  method: 'postEntitiesRulesValidateFilepathV1';\n}\n\n// types for putEntitiesNetworkLocationsV1\n\nexport interface PutEntitiesNetworkLocationsV1QueryParams\n  extends BaseUrlParams {\n  comment?: QueryParam;\n}\n\nexport type PutEntitiesNetworkLocationsV1ApiResponse = ApiResponsePayload;\n\nexport type PutEntitiesNetworkLocationsV1PostData = Record<string, never>;\n\nexport type PutEntitiesNetworkLocationsV1ResponseMessage =\n  BaseApiResponseMessage<PutEntitiesNetworkLocationsV1ApiResponse>;\n\nexport interface PutEntitiesNetworkLocationsV1RequestMessage\n  extends BaseApiRequestMessage<\n    PutEntitiesNetworkLocationsV1QueryParams,\n    PutEntitiesNetworkLocationsV1PostData\n  > {\n  api: FwmgrRequestApi;\n  method: 'putEntitiesNetworkLocationsV1';\n}\n\n// types for putEntitiesPoliciesV2\n\nexport interface PutEntitiesPoliciesV2QueryParams extends BaseUrlParams {\n  id?: QueryParam;\n  cloneId?: QueryParam;\n}\n\nexport type PutEntitiesPoliciesV2ApiResponse = ApiResponsePayload;\n\nexport type PutEntitiesPoliciesV2PostData = Record<string, never>;\n\nexport type PutEntitiesPoliciesV2ResponseMessage =\n  BaseApiResponseMessage<PutEntitiesPoliciesV2ApiResponse>;\n\nexport interface PutEntitiesPoliciesV2RequestMessage\n  extends BaseApiRequestMessage<\n    PutEntitiesPoliciesV2QueryParams,\n    PutEntitiesPoliciesV2PostData\n  > {\n  api: FwmgrRequestApi;\n  method: 'putEntitiesPoliciesV2';\n}\n\n// general types\n\nexport type FwmgrApiRequestMessage =\n  | DeleteEntitiesNetworkLocationsV1RequestMessage\n  | DeleteEntitiesPoliciesV1RequestMessage\n  | DeleteEntitiesRuleGroupsV1RequestMessage\n  | GetEntitiesEventsV1RequestMessage\n  | GetEntitiesFirewallFieldsV1RequestMessage\n  | GetEntitiesNetworkLocationsDetailsV1RequestMessage\n  | GetEntitiesNetworkLocationsV1RequestMessage\n  | GetEntitiesPlatformsV1RequestMessage\n  | GetEntitiesPoliciesV1RequestMessage\n  | GetEntitiesRuleGroupsV1RequestMessage\n  | GetEntitiesRulesV1RequestMessage\n  | GetLibraryEntitiesRuleGroupsV1RequestMessage\n  | GetLibraryQueriesRuleGroupsV1RequestMessage\n  | GetQueriesEventsV1RequestMessage\n  | GetQueriesFirewallFieldsV1RequestMessage\n  | GetQueriesNetworkLocationsV1RequestMessage\n  | GetQueriesPlatformsV1RequestMessage\n  | GetQueriesPolicyRulesV1RequestMessage\n  | GetQueriesRuleGroupsV1RequestMessage\n  | GetQueriesRulesV1RequestMessage\n  | PatchEntitiesNetworkLocationsV1RequestMessage\n  | PatchEntitiesRuleGroupsV1RequestMessage\n  | PostAggregatesEventsGetV1RequestMessage\n  | PostAggregatesPolicyRulesGetV1RequestMessage\n  | PostAggregatesRuleGroupsGetV1RequestMessage\n  | PostAggregatesRulesGetV1RequestMessage\n  | PostEntitiesNetworkLocationsMetadataV1RequestMessage\n  | PostEntitiesNetworkLocationsPrecedenceV1RequestMessage\n  | PostEntitiesNetworkLocationsV1RequestMessage\n  | PostEntitiesOntologyV1RequestMessage\n  | PostEntitiesRuleGroupsV1RequestMessage\n  | PostEntitiesRulesValidateFilepathV1RequestMessage\n  | PutEntitiesNetworkLocationsV1RequestMessage\n  | PutEntitiesPoliciesV2RequestMessage;\n\nexport type FwmgrApiResponseMessage =\n  | DeleteEntitiesNetworkLocationsV1ResponseMessage\n  | DeleteEntitiesPoliciesV1ResponseMessage\n  | DeleteEntitiesRuleGroupsV1ResponseMessage\n  | GetEntitiesEventsV1ResponseMessage\n  | GetEntitiesFirewallFieldsV1ResponseMessage\n  | GetEntitiesNetworkLocationsDetailsV1ResponseMessage\n  | GetEntitiesNetworkLocationsV1ResponseMessage\n  | GetEntitiesPlatformsV1ResponseMessage\n  | GetEntitiesPoliciesV1ResponseMessage\n  | GetEntitiesRuleGroupsV1ResponseMessage\n  | GetEntitiesRulesV1ResponseMessage\n  | GetLibraryEntitiesRuleGroupsV1ResponseMessage\n  | GetLibraryQueriesRuleGroupsV1ResponseMessage\n  | GetQueriesEventsV1ResponseMessage\n  | GetQueriesFirewallFieldsV1ResponseMessage\n  | GetQueriesNetworkLocationsV1ResponseMessage\n  | GetQueriesPlatformsV1ResponseMessage\n  | GetQueriesPolicyRulesV1ResponseMessage\n  | GetQueriesRuleGroupsV1ResponseMessage\n  | GetQueriesRulesV1ResponseMessage\n  | PatchEntitiesNetworkLocationsV1ResponseMessage\n  | PatchEntitiesRuleGroupsV1ResponseMessage\n  | PostAggregatesEventsGetV1ResponseMessage\n  | PostAggregatesPolicyRulesGetV1ResponseMessage\n  | PostAggregatesRuleGroupsGetV1ResponseMessage\n  | PostAggregatesRulesGetV1ResponseMessage\n  | PostEntitiesNetworkLocationsMetadataV1ResponseMessage\n  | PostEntitiesNetworkLocationsPrecedenceV1ResponseMessage\n  | PostEntitiesNetworkLocationsV1ResponseMessage\n  | PostEntitiesOntologyV1ResponseMessage\n  | PostEntitiesRuleGroupsV1ResponseMessage\n  | PostEntitiesRulesValidateFilepathV1ResponseMessage\n  | PutEntitiesNetworkLocationsV1ResponseMessage\n  | PutEntitiesPoliciesV2ResponseMessage;\n\nexport class FwmgrApiBridge {\n  private bridge;\n\n  constructor(bridge: Bridge) {\n    this.bridge = bridge;\n  }\n\n  getBridge() {\n    return this.bridge;\n  }\n\n  async deleteEntitiesNetworkLocationsV1(\n    urlParams: DeleteEntitiesNetworkLocationsV1QueryParams,\n  ): Promise<DeleteEntitiesNetworkLocationsV1ApiResponse> {\n    const message: DeleteEntitiesNetworkLocationsV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'deleteEntitiesNetworkLocationsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async deleteEntitiesPoliciesV1(\n    urlParams: DeleteEntitiesPoliciesV1QueryParams,\n  ): Promise<DeleteEntitiesPoliciesV1ApiResponse> {\n    const message: DeleteEntitiesPoliciesV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'deleteEntitiesPoliciesV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async deleteEntitiesRuleGroupsV1(\n    urlParams: DeleteEntitiesRuleGroupsV1QueryParams,\n  ): Promise<DeleteEntitiesRuleGroupsV1ApiResponse> {\n    const message: DeleteEntitiesRuleGroupsV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'deleteEntitiesRuleGroupsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getEntitiesEventsV1(\n    urlParams: GetEntitiesEventsV1QueryParams,\n  ): Promise<GetEntitiesEventsV1ApiResponse> {\n    const message: GetEntitiesEventsV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'getEntitiesEventsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getEntitiesFirewallFieldsV1(\n    urlParams: GetEntitiesFirewallFieldsV1QueryParams,\n  ): Promise<GetEntitiesFirewallFieldsV1ApiResponse> {\n    const message: GetEntitiesFirewallFieldsV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'getEntitiesFirewallFieldsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getEntitiesNetworkLocationsDetailsV1(\n    urlParams: GetEntitiesNetworkLocationsDetailsV1QueryParams,\n  ): Promise<GetEntitiesNetworkLocationsDetailsV1ApiResponse> {\n    const message: GetEntitiesNetworkLocationsDetailsV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'getEntitiesNetworkLocationsDetailsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getEntitiesNetworkLocationsV1(\n    urlParams: GetEntitiesNetworkLocationsV1QueryParams,\n  ): Promise<GetEntitiesNetworkLocationsV1ApiResponse> {\n    const message: GetEntitiesNetworkLocationsV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'getEntitiesNetworkLocationsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getEntitiesPlatformsV1(\n    urlParams: GetEntitiesPlatformsV1QueryParams,\n  ): Promise<GetEntitiesPlatformsV1ApiResponse> {\n    const message: GetEntitiesPlatformsV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'getEntitiesPlatformsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getEntitiesPoliciesV1(\n    urlParams: GetEntitiesPoliciesV1QueryParams,\n  ): Promise<GetEntitiesPoliciesV1ApiResponse> {\n    const message: GetEntitiesPoliciesV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'getEntitiesPoliciesV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getEntitiesRuleGroupsV1(\n    urlParams: GetEntitiesRuleGroupsV1QueryParams,\n  ): Promise<GetEntitiesRuleGroupsV1ApiResponse> {\n    const message: GetEntitiesRuleGroupsV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'getEntitiesRuleGroupsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getEntitiesRulesV1(\n    urlParams: GetEntitiesRulesV1QueryParams,\n  ): Promise<GetEntitiesRulesV1ApiResponse> {\n    const message: GetEntitiesRulesV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'getEntitiesRulesV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getLibraryEntitiesRuleGroupsV1(\n    urlParams: GetLibraryEntitiesRuleGroupsV1QueryParams,\n  ): Promise<GetLibraryEntitiesRuleGroupsV1ApiResponse> {\n    const message: GetLibraryEntitiesRuleGroupsV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'getLibraryEntitiesRuleGroupsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getLibraryQueriesRuleGroupsV1(\n    urlParams: GetLibraryQueriesRuleGroupsV1QueryParams = {},\n  ): Promise<GetLibraryQueriesRuleGroupsV1ApiResponse> {\n    const message: GetLibraryQueriesRuleGroupsV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'getLibraryQueriesRuleGroupsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getQueriesEventsV1(\n    urlParams: GetQueriesEventsV1QueryParams = {},\n  ): Promise<GetQueriesEventsV1ApiResponse> {\n    const message: GetQueriesEventsV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'getQueriesEventsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getQueriesFirewallFieldsV1(\n    urlParams: GetQueriesFirewallFieldsV1QueryParams = {},\n  ): Promise<GetQueriesFirewallFieldsV1ApiResponse> {\n    const message: GetQueriesFirewallFieldsV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'getQueriesFirewallFieldsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getQueriesNetworkLocationsV1(\n    urlParams: GetQueriesNetworkLocationsV1QueryParams = {},\n  ): Promise<GetQueriesNetworkLocationsV1ApiResponse> {\n    const message: GetQueriesNetworkLocationsV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'getQueriesNetworkLocationsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getQueriesPlatformsV1(\n    urlParams: GetQueriesPlatformsV1QueryParams = {},\n  ): Promise<GetQueriesPlatformsV1ApiResponse> {\n    const message: GetQueriesPlatformsV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'getQueriesPlatformsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getQueriesPolicyRulesV1(\n    urlParams: GetQueriesPolicyRulesV1QueryParams = {},\n  ): Promise<GetQueriesPolicyRulesV1ApiResponse> {\n    const message: GetQueriesPolicyRulesV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'getQueriesPolicyRulesV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getQueriesRuleGroupsV1(\n    urlParams: GetQueriesRuleGroupsV1QueryParams = {},\n  ): Promise<GetQueriesRuleGroupsV1ApiResponse> {\n    const message: GetQueriesRuleGroupsV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'getQueriesRuleGroupsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getQueriesRulesV1(\n    urlParams: GetQueriesRulesV1QueryParams = {},\n  ): Promise<GetQueriesRulesV1ApiResponse> {\n    const message: GetQueriesRulesV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'getQueriesRulesV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async patchEntitiesNetworkLocationsV1(\n    postBody: PatchEntitiesNetworkLocationsV1PostData,\n    urlParams: PatchEntitiesNetworkLocationsV1QueryParams = {},\n  ): Promise<PatchEntitiesNetworkLocationsV1ApiResponse> {\n    const message: PatchEntitiesNetworkLocationsV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'patchEntitiesNetworkLocationsV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async patchEntitiesRuleGroupsV1(\n    postBody: PatchEntitiesRuleGroupsV1PostData,\n    urlParams: PatchEntitiesRuleGroupsV1QueryParams = {},\n  ): Promise<PatchEntitiesRuleGroupsV1ApiResponse> {\n    const message: PatchEntitiesRuleGroupsV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'patchEntitiesRuleGroupsV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postAggregatesEventsGetV1(\n    postBody: PostAggregatesEventsGetV1PostData,\n    urlParams: PostAggregatesEventsGetV1QueryParams = {},\n  ): Promise<PostAggregatesEventsGetV1ApiResponse> {\n    const message: PostAggregatesEventsGetV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'postAggregatesEventsGetV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postAggregatesPolicyRulesGetV1(\n    postBody: PostAggregatesPolicyRulesGetV1PostData,\n    urlParams: PostAggregatesPolicyRulesGetV1QueryParams = {},\n  ): Promise<PostAggregatesPolicyRulesGetV1ApiResponse> {\n    const message: PostAggregatesPolicyRulesGetV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'postAggregatesPolicyRulesGetV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postAggregatesRuleGroupsGetV1(\n    postBody: PostAggregatesRuleGroupsGetV1PostData,\n    urlParams: PostAggregatesRuleGroupsGetV1QueryParams = {},\n  ): Promise<PostAggregatesRuleGroupsGetV1ApiResponse> {\n    const message: PostAggregatesRuleGroupsGetV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'postAggregatesRuleGroupsGetV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postAggregatesRulesGetV1(\n    postBody: PostAggregatesRulesGetV1PostData,\n    urlParams: PostAggregatesRulesGetV1QueryParams = {},\n  ): Promise<PostAggregatesRulesGetV1ApiResponse> {\n    const message: PostAggregatesRulesGetV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'postAggregatesRulesGetV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesNetworkLocationsMetadataV1(\n    postBody: PostEntitiesNetworkLocationsMetadataV1PostData,\n    urlParams: PostEntitiesNetworkLocationsMetadataV1QueryParams = {},\n  ): Promise<PostEntitiesNetworkLocationsMetadataV1ApiResponse> {\n    const message: PostEntitiesNetworkLocationsMetadataV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'postEntitiesNetworkLocationsMetadataV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesNetworkLocationsPrecedenceV1(\n    postBody: PostEntitiesNetworkLocationsPrecedenceV1PostData,\n    urlParams: PostEntitiesNetworkLocationsPrecedenceV1QueryParams = {},\n  ): Promise<PostEntitiesNetworkLocationsPrecedenceV1ApiResponse> {\n    const message: PostEntitiesNetworkLocationsPrecedenceV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'postEntitiesNetworkLocationsPrecedenceV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesNetworkLocationsV1(\n    postBody: PostEntitiesNetworkLocationsV1PostData,\n    urlParams: PostEntitiesNetworkLocationsV1QueryParams = {},\n  ): Promise<PostEntitiesNetworkLocationsV1ApiResponse> {\n    const message: PostEntitiesNetworkLocationsV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'postEntitiesNetworkLocationsV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesOntologyV1(\n    postBody: PostEntitiesOntologyV1PostData,\n    urlParams: PostEntitiesOntologyV1QueryParams = {},\n  ): Promise<PostEntitiesOntologyV1ApiResponse> {\n    const message: PostEntitiesOntologyV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'postEntitiesOntologyV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesRuleGroupsV1(\n    postBody: PostEntitiesRuleGroupsV1PostData,\n    urlParams: PostEntitiesRuleGroupsV1QueryParams = {},\n  ): Promise<PostEntitiesRuleGroupsV1ApiResponse> {\n    const message: PostEntitiesRuleGroupsV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'postEntitiesRuleGroupsV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesRulesValidateFilepathV1(\n    postBody: PostEntitiesRulesValidateFilepathV1PostData,\n    urlParams: PostEntitiesRulesValidateFilepathV1QueryParams = {},\n  ): Promise<PostEntitiesRulesValidateFilepathV1ApiResponse> {\n    const message: PostEntitiesRulesValidateFilepathV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'postEntitiesRulesValidateFilepathV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async putEntitiesNetworkLocationsV1(\n    postBody: PutEntitiesNetworkLocationsV1PostData,\n    urlParams: PutEntitiesNetworkLocationsV1QueryParams = {},\n  ): Promise<PutEntitiesNetworkLocationsV1ApiResponse> {\n    const message: PutEntitiesNetworkLocationsV1RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'putEntitiesNetworkLocationsV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async putEntitiesPoliciesV2(\n    postBody: PutEntitiesPoliciesV2PostData,\n    urlParams: PutEntitiesPoliciesV2QueryParams = {},\n  ): Promise<PutEntitiesPoliciesV2ApiResponse> {\n    const message: PutEntitiesPoliciesV2RequestMessage = {\n      type: 'api',\n      api: 'fwmgr',\n      method: 'putEntitiesPoliciesV2',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n}\n","/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\n\nimport type { Bridge } from '../../bridge';\n\nimport type {\n  ApiResponsePayload,\n  BaseApiRequestMessage,\n  BaseApiResponseMessage,\n  BaseUrlParams,\n  QueryParam,\n} from '../../types';\n\nexport type IncidentsRequestApi = 'incidents';\n\nexport type CommonApiResponseMessage =\n  BaseApiResponseMessage<ApiResponsePayload>;\n\nexport interface CommonApiRequestMessage\n  extends BaseApiRequestMessage<BaseUrlParams, unknown> {\n  api: IncidentsRequestApi;\n}\n\n// types for getCombinedCrowdscoresV1\n\nexport interface GetCombinedCrowdscoresV1QueryParams extends BaseUrlParams {\n  filter?: string;\n  limit?: QueryParam;\n  offset?: QueryParam;\n  sort?: QueryParam;\n}\n\nexport type GetCombinedCrowdscoresV1ApiResponse = ApiResponsePayload;\n\nexport type GetCombinedCrowdscoresV1ResponseMessage =\n  BaseApiResponseMessage<GetCombinedCrowdscoresV1ApiResponse>;\n\nexport interface GetCombinedCrowdscoresV1RequestMessage\n  extends BaseApiRequestMessage<GetCombinedCrowdscoresV1QueryParams> {\n  api: IncidentsRequestApi;\n  method: 'getCombinedCrowdscoresV1';\n}\n\n// types for getQueriesBehaviorsV1\n\nexport interface GetQueriesBehaviorsV1QueryParams extends BaseUrlParams {\n  filter?: string;\n  limit?: QueryParam;\n  offset?: QueryParam;\n  sort?: QueryParam;\n}\n\nexport type GetQueriesBehaviorsV1ApiResponse = ApiResponsePayload;\n\nexport type GetQueriesBehaviorsV1ResponseMessage =\n  BaseApiResponseMessage<GetQueriesBehaviorsV1ApiResponse>;\n\nexport interface GetQueriesBehaviorsV1RequestMessage\n  extends BaseApiRequestMessage<GetQueriesBehaviorsV1QueryParams> {\n  api: IncidentsRequestApi;\n  method: 'getQueriesBehaviorsV1';\n}\n\n// types for getQueriesIncidentsV1\n\nexport interface GetQueriesIncidentsV1QueryParams extends BaseUrlParams {\n  filter?: string;\n  limit?: QueryParam;\n  offset?: QueryParam;\n  sort?: QueryParam;\n}\n\nexport type GetQueriesIncidentsV1ApiResponse = ApiResponsePayload;\n\nexport type GetQueriesIncidentsV1ResponseMessage =\n  BaseApiResponseMessage<GetQueriesIncidentsV1ApiResponse>;\n\nexport interface GetQueriesIncidentsV1RequestMessage\n  extends BaseApiRequestMessage<GetQueriesIncidentsV1QueryParams> {\n  api: IncidentsRequestApi;\n  method: 'getQueriesIncidentsV1';\n}\n\n// types for postAggregatesBehaviorsGetV1\n\nexport type PostAggregatesBehaviorsGetV1QueryParams = BaseUrlParams;\n\nexport type PostAggregatesBehaviorsGetV1ApiResponse = ApiResponsePayload;\n\nexport type PostAggregatesBehaviorsGetV1PostData = Record<string, never>;\n\nexport type PostAggregatesBehaviorsGetV1ResponseMessage =\n  BaseApiResponseMessage<PostAggregatesBehaviorsGetV1ApiResponse>;\n\nexport interface PostAggregatesBehaviorsGetV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostAggregatesBehaviorsGetV1QueryParams,\n    PostAggregatesBehaviorsGetV1PostData\n  > {\n  api: IncidentsRequestApi;\n  method: 'postAggregatesBehaviorsGetV1';\n}\n\n// types for postAggregatesIncidentsGetV1\n\nexport type PostAggregatesIncidentsGetV1QueryParams = BaseUrlParams;\n\nexport type PostAggregatesIncidentsGetV1ApiResponse = ApiResponsePayload;\n\nexport type PostAggregatesIncidentsGetV1PostData = Record<string, never>;\n\nexport type PostAggregatesIncidentsGetV1ResponseMessage =\n  BaseApiResponseMessage<PostAggregatesIncidentsGetV1ApiResponse>;\n\nexport interface PostAggregatesIncidentsGetV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostAggregatesIncidentsGetV1QueryParams,\n    PostAggregatesIncidentsGetV1PostData\n  > {\n  api: IncidentsRequestApi;\n  method: 'postAggregatesIncidentsGetV1';\n}\n\n// types for postEntitiesBehaviorsGetV1\n\nexport type PostEntitiesBehaviorsGetV1QueryParams = BaseUrlParams;\n\nexport type PostEntitiesBehaviorsGetV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesBehaviorsGetV1PostData = Record<string, never>;\n\nexport type PostEntitiesBehaviorsGetV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesBehaviorsGetV1ApiResponse>;\n\nexport interface PostEntitiesBehaviorsGetV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesBehaviorsGetV1QueryParams,\n    PostEntitiesBehaviorsGetV1PostData\n  > {\n  api: IncidentsRequestApi;\n  method: 'postEntitiesBehaviorsGetV1';\n}\n\n// types for postEntitiesIncidentActionsV1\n\nexport interface PostEntitiesIncidentActionsV1QueryParams\n  extends BaseUrlParams {\n  note?: QueryParam;\n}\n\nexport type PostEntitiesIncidentActionsV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesIncidentActionsV1PostData = Record<string, never>;\n\nexport type PostEntitiesIncidentActionsV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesIncidentActionsV1ApiResponse>;\n\nexport interface PostEntitiesIncidentActionsV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesIncidentActionsV1QueryParams,\n    PostEntitiesIncidentActionsV1PostData\n  > {\n  api: IncidentsRequestApi;\n  method: 'postEntitiesIncidentActionsV1';\n}\n\n// types for postEntitiesIncidentsGetV1\n\nexport type PostEntitiesIncidentsGetV1QueryParams = BaseUrlParams;\n\nexport type PostEntitiesIncidentsGetV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesIncidentsGetV1PostData = Record<string, never>;\n\nexport type PostEntitiesIncidentsGetV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesIncidentsGetV1ApiResponse>;\n\nexport interface PostEntitiesIncidentsGetV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesIncidentsGetV1QueryParams,\n    PostEntitiesIncidentsGetV1PostData\n  > {\n  api: IncidentsRequestApi;\n  method: 'postEntitiesIncidentsGetV1';\n}\n\n// general types\n\nexport type IncidentsApiRequestMessage =\n  | GetCombinedCrowdscoresV1RequestMessage\n  | GetQueriesBehaviorsV1RequestMessage\n  | GetQueriesIncidentsV1RequestMessage\n  | PostAggregatesBehaviorsGetV1RequestMessage\n  | PostAggregatesIncidentsGetV1RequestMessage\n  | PostEntitiesBehaviorsGetV1RequestMessage\n  | PostEntitiesIncidentActionsV1RequestMessage\n  | PostEntitiesIncidentsGetV1RequestMessage;\n\nexport type IncidentsApiResponseMessage =\n  | GetCombinedCrowdscoresV1ResponseMessage\n  | GetQueriesBehaviorsV1ResponseMessage\n  | GetQueriesIncidentsV1ResponseMessage\n  | PostAggregatesBehaviorsGetV1ResponseMessage\n  | PostAggregatesIncidentsGetV1ResponseMessage\n  | PostEntitiesBehaviorsGetV1ResponseMessage\n  | PostEntitiesIncidentActionsV1ResponseMessage\n  | PostEntitiesIncidentsGetV1ResponseMessage;\n\nexport class IncidentsApiBridge {\n  private bridge;\n\n  constructor(bridge: Bridge) {\n    this.bridge = bridge;\n  }\n\n  getBridge() {\n    return this.bridge;\n  }\n\n  async getCombinedCrowdscoresV1(\n    urlParams: GetCombinedCrowdscoresV1QueryParams = {},\n  ): Promise<GetCombinedCrowdscoresV1ApiResponse> {\n    const message: GetCombinedCrowdscoresV1RequestMessage = {\n      type: 'api',\n      api: 'incidents',\n      method: 'getCombinedCrowdscoresV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getQueriesBehaviorsV1(\n    urlParams: GetQueriesBehaviorsV1QueryParams = {},\n  ): Promise<GetQueriesBehaviorsV1ApiResponse> {\n    const message: GetQueriesBehaviorsV1RequestMessage = {\n      type: 'api',\n      api: 'incidents',\n      method: 'getQueriesBehaviorsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getQueriesIncidentsV1(\n    urlParams: GetQueriesIncidentsV1QueryParams = {},\n  ): Promise<GetQueriesIncidentsV1ApiResponse> {\n    const message: GetQueriesIncidentsV1RequestMessage = {\n      type: 'api',\n      api: 'incidents',\n      method: 'getQueriesIncidentsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postAggregatesBehaviorsGetV1(\n    postBody: PostAggregatesBehaviorsGetV1PostData,\n    urlParams: PostAggregatesBehaviorsGetV1QueryParams = {},\n  ): Promise<PostAggregatesBehaviorsGetV1ApiResponse> {\n    const message: PostAggregatesBehaviorsGetV1RequestMessage = {\n      type: 'api',\n      api: 'incidents',\n      method: 'postAggregatesBehaviorsGetV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postAggregatesIncidentsGetV1(\n    postBody: PostAggregatesIncidentsGetV1PostData,\n    urlParams: PostAggregatesIncidentsGetV1QueryParams = {},\n  ): Promise<PostAggregatesIncidentsGetV1ApiResponse> {\n    const message: PostAggregatesIncidentsGetV1RequestMessage = {\n      type: 'api',\n      api: 'incidents',\n      method: 'postAggregatesIncidentsGetV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesBehaviorsGetV1(\n    postBody: PostEntitiesBehaviorsGetV1PostData,\n    urlParams: PostEntitiesBehaviorsGetV1QueryParams = {},\n  ): Promise<PostEntitiesBehaviorsGetV1ApiResponse> {\n    const message: PostEntitiesBehaviorsGetV1RequestMessage = {\n      type: 'api',\n      api: 'incidents',\n      method: 'postEntitiesBehaviorsGetV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesIncidentActionsV1(\n    postBody: PostEntitiesIncidentActionsV1PostData,\n    urlParams: PostEntitiesIncidentActionsV1QueryParams = {},\n  ): Promise<PostEntitiesIncidentActionsV1ApiResponse> {\n    const message: PostEntitiesIncidentActionsV1RequestMessage = {\n      type: 'api',\n      api: 'incidents',\n      method: 'postEntitiesIncidentActionsV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesIncidentsGetV1(\n    postBody: PostEntitiesIncidentsGetV1PostData,\n    urlParams: PostEntitiesIncidentsGetV1QueryParams = {},\n  ): Promise<PostEntitiesIncidentsGetV1ApiResponse> {\n    const message: PostEntitiesIncidentsGetV1RequestMessage = {\n      type: 'api',\n      api: 'incidents',\n      method: 'postEntitiesIncidentsGetV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n}\n","/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\n\nimport type { Bridge } from '../../bridge';\n\nimport type {\n  ApiResponsePayload,\n  BaseApiRequestMessage,\n  BaseApiResponseMessage,\n  BaseUrlParams,\n  QueryParam,\n} from '../../types';\n\nexport type LoggingapiRequestApi = 'loggingapi';\n\nexport type CommonApiResponseMessage =\n  BaseApiResponseMessage<ApiResponsePayload>;\n\nexport interface CommonApiRequestMessage\n  extends BaseApiRequestMessage<BaseUrlParams, unknown> {\n  api: LoggingapiRequestApi;\n}\n\n// types for getEntitiesSavedSearchesExecuteV1\n\nexport interface GetEntitiesSavedSearchesExecuteV1QueryParams\n  extends BaseUrlParams {\n  version?: QueryParam;\n  jobId: QueryParam;\n  detailed?: QueryParam;\n  metadata?: QueryParam;\n  offset?: QueryParam;\n  limit?: QueryParam;\n}\n\nexport type GetEntitiesSavedSearchesExecuteV1ApiResponse = ApiResponsePayload;\n\nexport type GetEntitiesSavedSearchesExecuteV1ResponseMessage =\n  BaseApiResponseMessage<GetEntitiesSavedSearchesExecuteV1ApiResponse>;\n\nexport interface GetEntitiesSavedSearchesExecuteV1RequestMessage\n  extends BaseApiRequestMessage<GetEntitiesSavedSearchesExecuteV1QueryParams> {\n  api: LoggingapiRequestApi;\n  method: 'getEntitiesSavedSearchesExecuteV1';\n}\n\n// types for getEntitiesSavedSearchesV1\n\nexport interface GetEntitiesSavedSearchesV1QueryParams extends BaseUrlParams {\n  ids: QueryParam;\n}\n\nexport type GetEntitiesSavedSearchesV1ApiResponse = ApiResponsePayload;\n\nexport type GetEntitiesSavedSearchesV1ResponseMessage =\n  BaseApiResponseMessage<GetEntitiesSavedSearchesV1ApiResponse>;\n\nexport interface GetEntitiesSavedSearchesV1RequestMessage\n  extends BaseApiRequestMessage<GetEntitiesSavedSearchesV1QueryParams> {\n  api: LoggingapiRequestApi;\n  method: 'getEntitiesSavedSearchesV1';\n}\n\n// types for postEntitiesSavedSearchesDynamicExecuteV1\n\nexport interface PostEntitiesSavedSearchesDynamicExecuteV1QueryParams\n  extends BaseUrlParams {\n  includeTestData?: QueryParam;\n}\n\nexport type PostEntitiesSavedSearchesDynamicExecuteV1ApiResponse =\n  ApiResponsePayload;\n\nexport type PostEntitiesSavedSearchesDynamicExecuteV1PostData = Record<string, never>;\n\nexport type PostEntitiesSavedSearchesDynamicExecuteV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesSavedSearchesDynamicExecuteV1ApiResponse>;\n\nexport interface PostEntitiesSavedSearchesDynamicExecuteV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesSavedSearchesDynamicExecuteV1QueryParams,\n    PostEntitiesSavedSearchesDynamicExecuteV1PostData\n  > {\n  api: LoggingapiRequestApi;\n  method: 'postEntitiesSavedSearchesDynamicExecuteV1';\n}\n\n// types for postEntitiesSavedSearchesExecuteV1\n\nexport interface PostEntitiesSavedSearchesExecuteV1QueryParams\n  extends BaseUrlParams {\n  includeTestData?: QueryParam;\n  mode?: QueryParam;\n  version?: QueryParam;\n  metadata?: QueryParam;\n  detailed?: QueryParam;\n}\n\nexport type PostEntitiesSavedSearchesExecuteV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesSavedSearchesExecuteV1PostData = Record<string, never>;\n\nexport type PostEntitiesSavedSearchesExecuteV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesSavedSearchesExecuteV1ApiResponse>;\n\nexport interface PostEntitiesSavedSearchesExecuteV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesSavedSearchesExecuteV1QueryParams,\n    PostEntitiesSavedSearchesExecuteV1PostData\n  > {\n  api: LoggingapiRequestApi;\n  method: 'postEntitiesSavedSearchesExecuteV1';\n}\n\n// types for postEntitiesSavedSearchesIngestV1\n\nexport type PostEntitiesSavedSearchesIngestV1QueryParams = BaseUrlParams;\n\nexport type PostEntitiesSavedSearchesIngestV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesSavedSearchesIngestV1PostData = Record<string, never>;\n\nexport type PostEntitiesSavedSearchesIngestV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesSavedSearchesIngestV1ApiResponse>;\n\nexport interface PostEntitiesSavedSearchesIngestV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesSavedSearchesIngestV1QueryParams,\n    PostEntitiesSavedSearchesIngestV1PostData\n  > {\n  api: LoggingapiRequestApi;\n  method: 'postEntitiesSavedSearchesIngestV1';\n}\n\n// general types\n\nexport type LoggingapiApiRequestMessage =\n  | GetEntitiesSavedSearchesExecuteV1RequestMessage\n  | GetEntitiesSavedSearchesV1RequestMessage\n  | PostEntitiesSavedSearchesExecuteV1RequestMessage;\n\nexport type LoggingapiApiResponseMessage =\n  | GetEntitiesSavedSearchesExecuteV1ResponseMessage\n  | GetEntitiesSavedSearchesV1ResponseMessage\n  | PostEntitiesSavedSearchesExecuteV1ResponseMessage;\n\nexport class LoggingapiApiBridge {\n  private bridge;\n\n  constructor(bridge: Bridge) {\n    this.bridge = bridge;\n  }\n\n  getBridge() {\n    return this.bridge;\n  }\n\n  async getEntitiesSavedSearchesExecuteV1(\n    urlParams: GetEntitiesSavedSearchesExecuteV1QueryParams,\n  ): Promise<GetEntitiesSavedSearchesExecuteV1ApiResponse> {\n    const message: GetEntitiesSavedSearchesExecuteV1RequestMessage = {\n      type: 'api',\n      api: 'loggingapi',\n      method: 'getEntitiesSavedSearchesExecuteV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getEntitiesSavedSearchesV1(\n    urlParams: GetEntitiesSavedSearchesV1QueryParams,\n  ): Promise<GetEntitiesSavedSearchesV1ApiResponse> {\n    const message: GetEntitiesSavedSearchesV1RequestMessage = {\n      type: 'api',\n      api: 'loggingapi',\n      method: 'getEntitiesSavedSearchesV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesSavedSearchesExecuteV1(\n    postBody: PostEntitiesSavedSearchesExecuteV1PostData,\n    urlParams: PostEntitiesSavedSearchesExecuteV1QueryParams = {},\n  ): Promise<PostEntitiesSavedSearchesExecuteV1ApiResponse> {\n    const message: PostEntitiesSavedSearchesExecuteV1RequestMessage = {\n      type: 'api',\n      api: 'loggingapi',\n      method: 'postEntitiesSavedSearchesExecuteV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n}\n","/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\n\nimport type { Bridge } from '../../bridge';\n\nimport type {\n  ApiResponsePayload,\n  BaseApiRequestMessage,\n  BaseApiResponseMessage,\n  BaseUrlParams,\n  QueryParam,\n} from '../../types';\n\nexport type MitreRequestApi = 'mitre';\n\nexport type CommonApiResponseMessage =\n  BaseApiResponseMessage<ApiResponsePayload>;\n\nexport interface CommonApiRequestMessage\n  extends BaseApiRequestMessage<BaseUrlParams, unknown> {\n  api: MitreRequestApi;\n}\n\n// types for getIntelMitreEntitiesMatrixV1\n\nexport interface GetIntelMitreEntitiesMatrixV1QueryParams\n  extends BaseUrlParams {\n  version?: QueryParam;\n}\n\nexport type GetIntelMitreEntitiesMatrixV1ApiResponse = ApiResponsePayload;\n\nexport type GetIntelMitreEntitiesMatrixV1ResponseMessage =\n  BaseApiResponseMessage<GetIntelMitreEntitiesMatrixV1ApiResponse>;\n\nexport interface GetIntelMitreEntitiesMatrixV1RequestMessage\n  extends BaseApiRequestMessage<GetIntelMitreEntitiesMatrixV1QueryParams> {\n  api: MitreRequestApi;\n  method: 'getIntelMitreEntitiesMatrixV1';\n}\n\n// general types\n\nexport type MitreApiRequestMessage =\n  GetIntelMitreEntitiesMatrixV1RequestMessage;\n\nexport type MitreApiResponseMessage =\n  GetIntelMitreEntitiesMatrixV1ResponseMessage;\n\nexport class MitreApiBridge {\n  private bridge;\n\n  constructor(bridge: Bridge) {\n    this.bridge = bridge;\n  }\n\n  getBridge() {\n    return this.bridge;\n  }\n\n  async getIntelMitreEntitiesMatrixV1(\n    urlParams: GetIntelMitreEntitiesMatrixV1QueryParams = {},\n  ): Promise<GetIntelMitreEntitiesMatrixV1ApiResponse> {\n    const message: GetIntelMitreEntitiesMatrixV1RequestMessage = {\n      type: 'api',\n      api: 'mitre',\n      method: 'getIntelMitreEntitiesMatrixV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n}\n","/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\n\nimport type { Bridge } from '../../bridge';\n\nimport type {\n  ApiResponsePayload,\n  BaseApiRequestMessage,\n  BaseApiResponseMessage,\n  BaseUrlParams,\n  QueryParam,\n} from '../../types';\n\nexport type PluginsRequestApi = 'plugins';\n\nexport type CommonApiResponseMessage =\n  BaseApiResponseMessage<ApiResponsePayload>;\n\nexport interface CommonApiRequestMessage\n  extends BaseApiRequestMessage<BaseUrlParams, unknown> {\n  api: PluginsRequestApi;\n}\n\n// types for getEntitiesConfigsV1\n\nexport interface GetEntitiesConfigsV1QueryParams extends BaseUrlParams {\n  ids?: QueryParam;\n  appId?: QueryParam;\n}\n\nexport type GetEntitiesConfigsV1ApiResponse = ApiResponsePayload;\n\nexport type GetEntitiesConfigsV1ResponseMessage =\n  BaseApiResponseMessage<GetEntitiesConfigsV1ApiResponse>;\n\nexport interface GetEntitiesConfigsV1RequestMessage\n  extends BaseApiRequestMessage<GetEntitiesConfigsV1QueryParams> {\n  api: PluginsRequestApi;\n  method: 'getEntitiesConfigsV1';\n}\n\n// types for getEntitiesDefinitionsV1\n\nexport interface GetEntitiesDefinitionsV1QueryParams extends BaseUrlParams {\n  ids: QueryParam;\n}\n\nexport type GetEntitiesDefinitionsV1ApiResponse = ApiResponsePayload;\n\nexport type GetEntitiesDefinitionsV1ResponseMessage =\n  BaseApiResponseMessage<GetEntitiesDefinitionsV1ApiResponse>;\n\nexport interface GetEntitiesDefinitionsV1RequestMessage\n  extends BaseApiRequestMessage<GetEntitiesDefinitionsV1QueryParams> {\n  api: PluginsRequestApi;\n  method: 'getEntitiesDefinitionsV1';\n}\n\n// types for postEntitiesExecuteDraftV1\n\nexport type PostEntitiesExecuteDraftV1QueryParams = BaseUrlParams;\n\nexport type PostEntitiesExecuteDraftV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesExecuteDraftV1PostData = Record<string, never>;\n\nexport type PostEntitiesExecuteDraftV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesExecuteDraftV1ApiResponse>;\n\nexport interface PostEntitiesExecuteDraftV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesExecuteDraftV1QueryParams,\n    PostEntitiesExecuteDraftV1PostData\n  > {\n  api: PluginsRequestApi;\n  method: 'postEntitiesExecuteDraftV1';\n}\n\n// types for postEntitiesExecuteV1\n\nexport type PostEntitiesExecuteV1QueryParams = BaseUrlParams;\n\nexport type PostEntitiesExecuteV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesExecuteV1PostData = {\n  resources?: Array<{\n    definition_id?: string;\n    operation_id?: string;\n    request?: Record<string, unknown>;\n  }>;\n};\n\nexport type PostEntitiesExecuteV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesExecuteV1ApiResponse>;\n\nexport interface PostEntitiesExecuteV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesExecuteV1QueryParams,\n    PostEntitiesExecuteV1PostData\n  > {\n  api: PluginsRequestApi;\n  method: 'postEntitiesExecuteV1';\n}\n\n// general types\n\nexport type PluginsApiRequestMessage =\n  | GetEntitiesConfigsV1RequestMessage\n  | GetEntitiesDefinitionsV1RequestMessage\n  | PostEntitiesExecuteDraftV1RequestMessage\n  | PostEntitiesExecuteV1RequestMessage;\n\nexport type PluginsApiResponseMessage =\n  | GetEntitiesConfigsV1ResponseMessage\n  | GetEntitiesDefinitionsV1ResponseMessage\n  | PostEntitiesExecuteDraftV1ResponseMessage\n  | PostEntitiesExecuteV1ResponseMessage;\n\nexport class PluginsApiBridge {\n  private bridge;\n\n  constructor(bridge: Bridge) {\n    this.bridge = bridge;\n  }\n\n  getBridge() {\n    return this.bridge;\n  }\n\n  async getEntitiesConfigsV1(\n    urlParams: GetEntitiesConfigsV1QueryParams = {},\n  ): Promise<GetEntitiesConfigsV1ApiResponse> {\n    const message: GetEntitiesConfigsV1RequestMessage = {\n      type: 'api',\n      api: 'plugins',\n      method: 'getEntitiesConfigsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getEntitiesDefinitionsV1(\n    urlParams: GetEntitiesDefinitionsV1QueryParams,\n  ): Promise<GetEntitiesDefinitionsV1ApiResponse> {\n    const message: GetEntitiesDefinitionsV1RequestMessage = {\n      type: 'api',\n      api: 'plugins',\n      method: 'getEntitiesDefinitionsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesExecuteDraftV1(\n    postBody: PostEntitiesExecuteDraftV1PostData,\n    urlParams: PostEntitiesExecuteDraftV1QueryParams = {},\n  ): Promise<PostEntitiesExecuteDraftV1ApiResponse> {\n    const message: PostEntitiesExecuteDraftV1RequestMessage = {\n      type: 'api',\n      api: 'plugins',\n      method: 'postEntitiesExecuteDraftV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesExecuteV1(\n    postBody: PostEntitiesExecuteV1PostData,\n    urlParams: PostEntitiesExecuteV1QueryParams = {},\n  ): Promise<PostEntitiesExecuteV1ApiResponse> {\n    const message: PostEntitiesExecuteV1RequestMessage = {\n      type: 'api',\n      api: 'plugins',\n      method: 'postEntitiesExecuteV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n}\n","/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\n\nimport type { Bridge } from '../../bridge';\n\nimport type {\n  ApiResponsePayload,\n  BaseApiRequestMessage,\n  BaseApiResponseMessage,\n  BaseUrlParams,\n} from '../../types';\n\nexport type RegistryAssessmentRequestApi = 'registryAssessment';\n\nexport type CommonApiResponseMessage =\n  BaseApiResponseMessage<ApiResponsePayload>;\n\nexport interface CommonApiRequestMessage\n  extends BaseApiRequestMessage<BaseUrlParams, unknown> {\n  api: RegistryAssessmentRequestApi;\n}\n\n// types for getAggregatesRegistriesCountByStateV1\n\nexport type GetAggregatesRegistriesCountByStateV1QueryParams = BaseUrlParams;\n\nexport type GetAggregatesRegistriesCountByStateV1ApiResponse =\n  ApiResponsePayload;\n\nexport type GetAggregatesRegistriesCountByStateV1ResponseMessage =\n  BaseApiResponseMessage<GetAggregatesRegistriesCountByStateV1ApiResponse>;\n\nexport interface GetAggregatesRegistriesCountByStateV1RequestMessage\n  extends BaseApiRequestMessage<GetAggregatesRegistriesCountByStateV1QueryParams> {\n  api: RegistryAssessmentRequestApi;\n  method: 'getAggregatesRegistriesCountByStateV1';\n}\n\n// general types\n\nexport type RegistryAssessmentApiRequestMessage =\n  GetAggregatesRegistriesCountByStateV1RequestMessage;\n\nexport type RegistryAssessmentApiResponseMessage =\n  GetAggregatesRegistriesCountByStateV1ResponseMessage;\n\nexport class RegistryAssessmentApiBridge {\n  private bridge;\n\n  constructor(bridge: Bridge) {\n    this.bridge = bridge;\n  }\n\n  getBridge() {\n    return this.bridge;\n  }\n\n  async getAggregatesRegistriesCountByStateV1(\n    urlParams: GetAggregatesRegistriesCountByStateV1QueryParams = {},\n  ): Promise<GetAggregatesRegistriesCountByStateV1ApiResponse> {\n    const message: GetAggregatesRegistriesCountByStateV1RequestMessage = {\n      type: 'api',\n      api: 'registryAssessment',\n      method: 'getAggregatesRegistriesCountByStateV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n}\n","/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\n\nimport type { Bridge } from '../../bridge';\n\nimport type {\n  ApiResponsePayload,\n  BaseApiRequestMessage,\n  BaseApiResponseMessage,\n  BaseUrlParams,\n  QueryParam,\n} from '../../types';\n\nexport type RemoteResponseRequestApi = 'remoteResponse';\n\nexport type CommonApiResponseMessage =\n  BaseApiResponseMessage<ApiResponsePayload>;\n\nexport interface CommonApiRequestMessage\n  extends BaseApiRequestMessage<BaseUrlParams, unknown> {\n  api: RemoteResponseRequestApi;\n}\n\n// types for deleteEntitiesPutFilesV1\n\nexport interface DeleteEntitiesPutFilesV1QueryParams extends BaseUrlParams {\n  ids: QueryParam;\n}\n\nexport type DeleteEntitiesPutFilesV1ApiResponse = ApiResponsePayload;\n\nexport type DeleteEntitiesPutFilesV1ResponseMessage =\n  BaseApiResponseMessage<DeleteEntitiesPutFilesV1ApiResponse>;\n\nexport interface DeleteEntitiesPutFilesV1RequestMessage\n  extends BaseApiRequestMessage<DeleteEntitiesPutFilesV1QueryParams> {\n  api: RemoteResponseRequestApi;\n  method: 'deleteEntitiesPutFilesV1';\n}\n\n// types for getEntitiesAppCommandV1\n\nexport interface GetEntitiesAppCommandV1QueryParams extends BaseUrlParams {\n  cloudRequestId: QueryParam;\n  sequenceId: QueryParam;\n}\n\nexport type GetEntitiesAppCommandV1ApiResponse = ApiResponsePayload;\n\nexport type GetEntitiesAppCommandV1ResponseMessage =\n  BaseApiResponseMessage<GetEntitiesAppCommandV1ApiResponse>;\n\nexport interface GetEntitiesAppCommandV1RequestMessage\n  extends BaseApiRequestMessage<GetEntitiesAppCommandV1QueryParams> {\n  api: RemoteResponseRequestApi;\n  method: 'getEntitiesAppCommandV1';\n}\n\n// types for getEntitiesPutFilesV2\n\nexport interface GetEntitiesPutFilesV2QueryParams extends BaseUrlParams {\n  ids: QueryParam;\n}\n\nexport type GetEntitiesPutFilesV2ApiResponse = ApiResponsePayload;\n\nexport type GetEntitiesPutFilesV2ResponseMessage =\n  BaseApiResponseMessage<GetEntitiesPutFilesV2ApiResponse>;\n\nexport interface GetEntitiesPutFilesV2RequestMessage\n  extends BaseApiRequestMessage<GetEntitiesPutFilesV2QueryParams> {\n  api: RemoteResponseRequestApi;\n  method: 'getEntitiesPutFilesV2';\n}\n\n// types for getQueriesPutFilesV1\n\nexport interface GetQueriesPutFilesV1QueryParams extends BaseUrlParams {\n  filter?: string;\n  limit?: QueryParam;\n  offset?: QueryParam;\n  sort?: QueryParam;\n}\n\nexport type GetQueriesPutFilesV1ApiResponse = ApiResponsePayload;\n\nexport type GetQueriesPutFilesV1ResponseMessage =\n  BaseApiResponseMessage<GetQueriesPutFilesV1ApiResponse>;\n\nexport interface GetQueriesPutFilesV1RequestMessage\n  extends BaseApiRequestMessage<GetQueriesPutFilesV1QueryParams> {\n  api: RemoteResponseRequestApi;\n  method: 'getQueriesPutFilesV1';\n}\n\n// types for postEntitiesAppCommandV1\n\nexport interface PostEntitiesAppCommandV1QueryParams extends BaseUrlParams {\n  appScriptVersion?: QueryParam;\n}\n\nexport type PostEntitiesAppCommandV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesAppCommandV1PostData = Record<string, never>;\n\nexport type PostEntitiesAppCommandV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesAppCommandV1ApiResponse>;\n\nexport interface PostEntitiesAppCommandV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesAppCommandV1QueryParams,\n    PostEntitiesAppCommandV1PostData\n  > {\n  api: RemoteResponseRequestApi;\n  method: 'postEntitiesAppCommandV1';\n}\n\n// types for postEntitiesAppSessionsV1\n\nexport interface PostEntitiesAppSessionsV1QueryParams extends BaseUrlParams {\n  timeout?: QueryParam;\n  timeoutDuration?: QueryParam;\n}\n\nexport type PostEntitiesAppSessionsV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesAppSessionsV1PostData = Record<string, never>;\n\nexport type PostEntitiesAppSessionsV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesAppSessionsV1ApiResponse>;\n\nexport interface PostEntitiesAppSessionsV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesAppSessionsV1QueryParams,\n    PostEntitiesAppSessionsV1PostData\n  > {\n  api: RemoteResponseRequestApi;\n  method: 'postEntitiesAppSessionsV1';\n}\n\n// types for postEntitiesPutFilesV1\n\nexport type PostEntitiesPutFilesV1QueryParams = BaseUrlParams;\n\nexport type PostEntitiesPutFilesV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesPutFilesV1PostData = Record<string, never>;\n\nexport type PostEntitiesPutFilesV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesPutFilesV1ApiResponse>;\n\nexport interface PostEntitiesPutFilesV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesPutFilesV1QueryParams,\n    PostEntitiesPutFilesV1PostData\n  > {\n  api: RemoteResponseRequestApi;\n  method: 'postEntitiesPutFilesV1';\n}\n\n// general types\n\nexport type RemoteResponseApiRequestMessage =\n  | DeleteEntitiesPutFilesV1RequestMessage\n  | GetEntitiesAppCommandV1RequestMessage\n  | GetEntitiesPutFilesV2RequestMessage\n  | GetQueriesPutFilesV1RequestMessage\n  | PostEntitiesAppCommandV1RequestMessage\n  | PostEntitiesAppSessionsV1RequestMessage;\n\nexport type RemoteResponseApiResponseMessage =\n  | DeleteEntitiesPutFilesV1ResponseMessage\n  | GetEntitiesAppCommandV1ResponseMessage\n  | GetEntitiesPutFilesV2ResponseMessage\n  | GetQueriesPutFilesV1ResponseMessage\n  | PostEntitiesAppCommandV1ResponseMessage\n  | PostEntitiesAppSessionsV1ResponseMessage;\n\nexport class RemoteResponseApiBridge {\n  private bridge;\n\n  constructor(bridge: Bridge) {\n    this.bridge = bridge;\n  }\n\n  getBridge() {\n    return this.bridge;\n  }\n\n  async deleteEntitiesPutFilesV1(\n    urlParams: DeleteEntitiesPutFilesV1QueryParams,\n  ): Promise<DeleteEntitiesPutFilesV1ApiResponse> {\n    const message: DeleteEntitiesPutFilesV1RequestMessage = {\n      type: 'api',\n      api: 'remoteResponse',\n      method: 'deleteEntitiesPutFilesV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getEntitiesAppCommandV1(\n    urlParams: GetEntitiesAppCommandV1QueryParams,\n  ): Promise<GetEntitiesAppCommandV1ApiResponse> {\n    const message: GetEntitiesAppCommandV1RequestMessage = {\n      type: 'api',\n      api: 'remoteResponse',\n      method: 'getEntitiesAppCommandV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getEntitiesPutFilesV2(\n    urlParams: GetEntitiesPutFilesV2QueryParams,\n  ): Promise<GetEntitiesPutFilesV2ApiResponse> {\n    const message: GetEntitiesPutFilesV2RequestMessage = {\n      type: 'api',\n      api: 'remoteResponse',\n      method: 'getEntitiesPutFilesV2',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async getQueriesPutFilesV1(\n    urlParams: GetQueriesPutFilesV1QueryParams = {},\n  ): Promise<GetQueriesPutFilesV1ApiResponse> {\n    const message: GetQueriesPutFilesV1RequestMessage = {\n      type: 'api',\n      api: 'remoteResponse',\n      method: 'getQueriesPutFilesV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesAppCommandV1(\n    postBody: PostEntitiesAppCommandV1PostData,\n    urlParams: PostEntitiesAppCommandV1QueryParams = {},\n  ): Promise<PostEntitiesAppCommandV1ApiResponse> {\n    const message: PostEntitiesAppCommandV1RequestMessage = {\n      type: 'api',\n      api: 'remoteResponse',\n      method: 'postEntitiesAppCommandV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesAppSessionsV1(\n    postBody: PostEntitiesAppSessionsV1PostData,\n    urlParams: PostEntitiesAppSessionsV1QueryParams = {},\n  ): Promise<PostEntitiesAppSessionsV1ApiResponse> {\n    const message: PostEntitiesAppSessionsV1RequestMessage = {\n      type: 'api',\n      api: 'remoteResponse',\n      method: 'postEntitiesAppSessionsV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n}\n","/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\n\nimport type { Bridge } from '../../bridge';\n\nimport type {\n  ApiResponsePayload,\n  BaseApiRequestMessage,\n  BaseApiResponseMessage,\n  BaseUrlParams,\n  QueryParam,\n} from '../../types';\n\nexport type UserManagementRequestApi = 'userManagement';\n\nexport type CommonApiResponseMessage =\n  BaseApiResponseMessage<ApiResponsePayload>;\n\nexport interface CommonApiRequestMessage\n  extends BaseApiRequestMessage<BaseUrlParams, unknown> {\n  api: UserManagementRequestApi;\n}\n\n// types for getQueriesUsersV1\n\nexport interface GetQueriesUsersV1QueryParams extends BaseUrlParams {\n  filter?: string;\n  offset?: QueryParam;\n  limit?: QueryParam;\n  sort?: QueryParam;\n}\n\nexport type GetQueriesUsersV1ApiResponse = ApiResponsePayload;\n\nexport type GetQueriesUsersV1ResponseMessage =\n  BaseApiResponseMessage<GetQueriesUsersV1ApiResponse>;\n\nexport interface GetQueriesUsersV1RequestMessage\n  extends BaseApiRequestMessage<GetQueriesUsersV1QueryParams> {\n  api: UserManagementRequestApi;\n  method: 'getQueriesUsersV1';\n}\n\n// types for postEntitiesUsersGetV1\n\nexport type PostEntitiesUsersGetV1QueryParams = BaseUrlParams;\n\nexport type PostEntitiesUsersGetV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesUsersGetV1PostData = Record<string, never>;\n\nexport type PostEntitiesUsersGetV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesUsersGetV1ApiResponse>;\n\nexport interface PostEntitiesUsersGetV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesUsersGetV1QueryParams,\n    PostEntitiesUsersGetV1PostData\n  > {\n  api: UserManagementRequestApi;\n  method: 'postEntitiesUsersGetV1';\n}\n\n// general types\n\nexport type UserManagementApiRequestMessage =\n  | GetQueriesUsersV1RequestMessage\n  | PostEntitiesUsersGetV1RequestMessage;\n\nexport type UserManagementApiResponseMessage =\n  | GetQueriesUsersV1ResponseMessage\n  | PostEntitiesUsersGetV1ResponseMessage;\n\nexport class UserManagementApiBridge {\n  private bridge;\n\n  constructor(bridge: Bridge) {\n    this.bridge = bridge;\n  }\n\n  getBridge() {\n    return this.bridge;\n  }\n\n  async getQueriesUsersV1(\n    urlParams: GetQueriesUsersV1QueryParams = {},\n  ): Promise<GetQueriesUsersV1ApiResponse> {\n    const message: GetQueriesUsersV1RequestMessage = {\n      type: 'api',\n      api: 'userManagement',\n      method: 'getQueriesUsersV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesUsersGetV1(\n    postBody: PostEntitiesUsersGetV1PostData,\n    urlParams: PostEntitiesUsersGetV1QueryParams = {},\n  ): Promise<PostEntitiesUsersGetV1ApiResponse> {\n    const message: PostEntitiesUsersGetV1RequestMessage = {\n      type: 'api',\n      api: 'userManagement',\n      method: 'postEntitiesUsersGetV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n}\n","/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\n\nimport type { Bridge } from '../../bridge';\n\nimport type {\n  ApiResponsePayload,\n  BaseApiRequestMessage,\n  BaseApiResponseMessage,\n  BaseUrlParams,\n  QueryParam,\n} from '../../types';\n\nexport type WorkflowsRequestApi = 'workflows';\n\nexport type CommonApiResponseMessage =\n  BaseApiResponseMessage<ApiResponsePayload>;\n\nexport interface CommonApiRequestMessage\n  extends BaseApiRequestMessage<BaseUrlParams, unknown> {\n  api: WorkflowsRequestApi;\n}\n\n// types for getEntitiesExecutionResultsV1\n\nexport interface GetEntitiesExecutionResultsV1QueryParams\n  extends BaseUrlParams {\n  ids: QueryParam;\n}\n\nexport type GetEntitiesExecutionResultsV1ApiResponse = ApiResponsePayload;\n\nexport type GetEntitiesExecutionResultsV1ResponseMessage =\n  BaseApiResponseMessage<GetEntitiesExecutionResultsV1ApiResponse>;\n\nexport interface GetEntitiesExecutionResultsV1RequestMessage\n  extends BaseApiRequestMessage<GetEntitiesExecutionResultsV1QueryParams> {\n  api: WorkflowsRequestApi;\n  method: 'getEntitiesExecutionResultsV1';\n}\n\n// types for postEntitiesExecuteV1\n\nexport interface PostEntitiesExecuteV1QueryParams extends BaseUrlParams {\n  definitionId?: QueryParam;\n  name?: QueryParam;\n  key?: QueryParam;\n  depth?: QueryParam;\n}\n\nexport type PostEntitiesExecuteV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesExecuteV1PostData = Record<string, never>;\n\nexport type PostEntitiesExecuteV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesExecuteV1ApiResponse>;\n\nexport interface PostEntitiesExecuteV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesExecuteV1QueryParams,\n    PostEntitiesExecuteV1PostData\n  > {\n  api: WorkflowsRequestApi;\n  method: 'postEntitiesExecuteV1';\n}\n\n// types for postEntitiesExecutionActionsV1\n\nexport interface PostEntitiesExecutionActionsV1QueryParams\n  extends BaseUrlParams {\n  actionName: QueryParam;\n}\n\nexport type PostEntitiesExecutionActionsV1ApiResponse = ApiResponsePayload;\n\nexport type PostEntitiesExecutionActionsV1PostData = Record<string, never>;\n\nexport type PostEntitiesExecutionActionsV1ResponseMessage =\n  BaseApiResponseMessage<PostEntitiesExecutionActionsV1ApiResponse>;\n\nexport interface PostEntitiesExecutionActionsV1RequestMessage\n  extends BaseApiRequestMessage<\n    PostEntitiesExecutionActionsV1QueryParams,\n    PostEntitiesExecutionActionsV1PostData\n  > {\n  api: WorkflowsRequestApi;\n  method: 'postEntitiesExecutionActionsV1';\n}\n\n// general types\n\nexport type WorkflowsApiRequestMessage =\n  | GetEntitiesExecutionResultsV1RequestMessage\n  | PostEntitiesExecuteV1RequestMessage\n  | PostEntitiesExecutionActionsV1RequestMessage;\n\nexport type WorkflowsApiResponseMessage =\n  | GetEntitiesExecutionResultsV1ResponseMessage\n  | PostEntitiesExecuteV1ResponseMessage\n  | PostEntitiesExecutionActionsV1ResponseMessage;\n\nexport class WorkflowsApiBridge {\n  private bridge;\n\n  constructor(bridge: Bridge) {\n    this.bridge = bridge;\n  }\n\n  getBridge() {\n    return this.bridge;\n  }\n\n  async getEntitiesExecutionResultsV1(\n    urlParams: GetEntitiesExecutionResultsV1QueryParams,\n  ): Promise<GetEntitiesExecutionResultsV1ApiResponse> {\n    const message: GetEntitiesExecutionResultsV1RequestMessage = {\n      type: 'api',\n      api: 'workflows',\n      method: 'getEntitiesExecutionResultsV1',\n      payload: {\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesExecuteV1(\n    postBody: PostEntitiesExecuteV1PostData,\n    urlParams: PostEntitiesExecuteV1QueryParams = {},\n  ): Promise<PostEntitiesExecuteV1ApiResponse> {\n    const message: PostEntitiesExecuteV1RequestMessage = {\n      type: 'api',\n      api: 'workflows',\n      method: 'postEntitiesExecuteV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n\n  async postEntitiesExecutionActionsV1(\n    postBody: PostEntitiesExecutionActionsV1PostData,\n    urlParams: PostEntitiesExecutionActionsV1QueryParams,\n  ): Promise<PostEntitiesExecutionActionsV1ApiResponse> {\n    const message: PostEntitiesExecutionActionsV1RequestMessage = {\n      type: 'api',\n      api: 'workflows',\n      method: 'postEntitiesExecutionActionsV1',\n      payload: {\n        body: postBody,\n        params: urlParams,\n      },\n    };\n\n    return this.bridge.postMessage(message);\n  }\n}\n","/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\n\nimport { Memoize } from 'typescript-memoize';\n\nimport { AlertsApiBridge } from './alerts';\nimport { CloudSecurityAssetsApiBridge } from './cloud-security-assets';\nimport { CloudregistrationApiBridge } from './cloudregistration';\nimport { ContainerSecurityApiBridge } from './container-security';\nimport { CspmRegistrationApiBridge } from './cspm-registration';\nimport { CustomobjectsApiBridge } from './customobjects';\nimport { DetectsApiBridge } from './detects';\nimport { DevicesApiBridge } from './devices';\nimport { FaasGatewayApiBridge } from './faas-gateway';\nimport { FwmgrApiBridge } from './fwmgr';\nimport { IncidentsApiBridge } from './incidents';\nimport { LoggingapiApiBridge } from './loggingapi';\nimport { MitreApiBridge } from './mitre';\nimport { PluginsApiBridge } from './plugins';\nimport { RegistryAssessmentApiBridge } from './registry-assessment';\nimport { RemoteResponseApiBridge } from './remote-response';\nimport { UserManagementApiBridge } from './user-management';\nimport { WorkflowsApiBridge } from './workflows';\n\nimport { assertConnection } from '../utils';\nimport type FalconApi from '../api';\n\nexport default class FalconPublicApis {\n  constructor(private api: FalconApi) {}\n\n  @Memoize()\n  get alerts(): AlertsApiBridge {\n    assertConnection(this.api);\n\n    return new AlertsApiBridge(this.api.bridge);\n  }\n\n  @Memoize()\n  get detects(): DetectsApiBridge {\n    assertConnection(this.api);\n\n    return new DetectsApiBridge(this.api.bridge);\n  }\n\n  @Memoize()\n  get devices(): DevicesApiBridge {\n    assertConnection(this.api);\n\n    return new DevicesApiBridge(this.api.bridge);\n  }\n\n  @Memoize()\n  get fwmgr(): FwmgrApiBridge {\n    assertConnection(this.api);\n\n    return new FwmgrApiBridge(this.api.bridge);\n  }\n\n  @Memoize()\n  get incidents(): IncidentsApiBridge {\n    assertConnection(this.api);\n\n    return new IncidentsApiBridge(this.api.bridge);\n  }\n\n  @Memoize()\n  get mitre(): MitreApiBridge {\n    assertConnection(this.api);\n\n    return new MitreApiBridge(this.api.bridge);\n  }\n\n  @Memoize()\n  get plugins(): PluginsApiBridge {\n    assertConnection(this.api);\n\n    return new PluginsApiBridge(this.api.bridge);\n  }\n\n  @Memoize()\n  get remoteResponse(): RemoteResponseApiBridge {\n    assertConnection(this.api);\n\n    return new RemoteResponseApiBridge(this.api.bridge);\n  }\n\n  @Memoize()\n  get userManagement(): UserManagementApiBridge {\n    assertConnection(this.api);\n\n    return new UserManagementApiBridge(this.api.bridge);\n  }\n\n  @Memoize()\n  get workflows(): WorkflowsApiBridge {\n    assertConnection(this.api);\n\n    return new WorkflowsApiBridge(this.api.bridge);\n  }\n\n  @Memoize()\n  get cloudSecurityAssets(): CloudSecurityAssetsApiBridge {\n    assertConnection(this.api);\n\n    return new CloudSecurityAssetsApiBridge(this.api.bridge);\n  }\n\n  @Memoize()\n  get cloudregistration(): CloudregistrationApiBridge {\n    assertConnection(this.api);\n\n    return new CloudregistrationApiBridge(this.api.bridge);\n  }\n\n  @Memoize()\n  get containerSecurity(): ContainerSecurityApiBridge {\n    assertConnection(this.api);\n\n    return new ContainerSecurityApiBridge(this.api.bridge);\n  }\n\n  @Memoize()\n  get cspmRegistration(): CspmRegistrationApiBridge {\n    assertConnection(this.api);\n\n    return new CspmRegistrationApiBridge(this.api.bridge);\n  }\n\n  @Memoize()\n  get customobjects(): CustomobjectsApiBridge {\n    assertConnection(this.api);\n\n    return new CustomobjectsApiBridge(this.api.bridge);\n  }\n\n  @Memoize()\n  get faasGateway(): FaasGatewayApiBridge {\n    assertConnection(this.api);\n\n    return new FaasGatewayApiBridge(this.api.bridge);\n  }\n\n  @Memoize()\n  get loggingapi(): LoggingapiApiBridge {\n    assertConnection(this.api);\n\n    return new LoggingapiApiBridge(this.api.bridge);\n  }\n\n  @Memoize()\n  get registryAssessment(): RegistryAssessmentApiBridge {\n    assertConnection(this.api);\n\n    return new RegistryAssessmentApiBridge(this.api.bridge);\n  }\n}\n","import type FalconApi from '../api';\nimport type { LocalData } from '../types';\n\ninterface ApiIntegrationDefinition {\n  definitionId: string;\n  operationId: string;\n}\n\ninterface ExecuteParameters {\n  request?: {\n    params?: {\n      path?: Record<string, unknown>;\n      query?: Record<string, unknown>;\n      header?: Record<string, unknown>;\n    };\n    json?: Record<string, unknown> | Record<string, unknown>[];\n  };\n}\n\nexport class ApiIntegration<DATA extends LocalData = LocalData> {\n  constructor(\n    private readonly falcon: FalconApi<DATA>,\n    private readonly definition: ApiIntegrationDefinition,\n  ) {}\n\n  public async execute({ request }: ExecuteParameters = {}) {\n    return this.falcon.api.plugins.postEntitiesExecuteV1({\n      resources: [\n        {\n          definition_id: this.definition.definitionId,\n          operation_id: this.definition.operationId,\n          request,\n        },\n      ],\n    });\n  }\n}\n","import type FalconApi from '../api';\nimport type { CloudFunctionDefinition, LocalData } from '../types';\n\ninterface Params {\n  header?: Record<string, string[]>;\n  query?: Record<string, string[]>;\n  [key: string]: unknown;\n}\n\ninterface ExecuteParameters {\n  path: string;\n  method: 'GET' | 'POST' | 'PATCH' | 'PUT' | 'DELETE';\n  body?: Record<string, unknown>;\n  params?: Params;\n}\n\ninterface PostParameters {\n  path: string;\n  body?: Record<string, unknown>;\n  params?: Params;\n}\n\ntype PatchParameters = PostParameters;\n\ntype PutParameters = PostParameters;\n\ntype DeleteParameters = PostParameters;\n\ninterface GetParameters {\n  path: string;\n  params?: Params;\n}\n\nexport class CloudFunction<DATA extends LocalData = LocalData> {\n  private static GET = 'GET' as const;\n  private static POST = 'POST' as const;\n  private static PATCH = 'PATCH' as const;\n  private static PUT = 'PUT' as const;\n  private static DELETE = 'DELETE' as const;\n\n  /**\n   * @internal\n   */\n  pollTimeout = 500;\n\n  /**\n   * @internal\n   */\n  intervalId?: number;\n\n  /**\n   * @internal\n   */\n  constructor(\n    private readonly falcon: FalconApi<DATA>,\n    private readonly definition: CloudFunctionDefinition,\n  ) {}\n\n  private async execute({ path, method, body, params }: ExecuteParameters) {\n    const functionDefinition =\n      'id' in this.definition\n        ? {\n            function_id: this.definition.id,\n            function_version: this.definition.version,\n          }\n        : {\n            function_name: this.definition.name,\n            function_version: this.definition.version,\n          };\n\n    const result = await this.falcon.api.faasGateway.postEntitiesExecutionV1({\n      ...functionDefinition,\n      payload: {\n        path,\n        method,\n        body,\n        params,\n      },\n    });\n\n    return new Promise((resolve, reject) => {\n      const execution = result?.resources?.[0] as { execution_id?: string };\n\n      if (!execution?.execution_id) {\n        reject(result?.errors);\n      } else {\n        this.pollForResult({\n          resolve,\n          reject,\n          executionId: execution?.execution_id,\n        });\n      }\n    });\n  }\n\n  private async getExecutionResult(\n    executionId: string,\n  ): Promise<Record<string, unknown> | undefined> {\n    const resultResponse =\n      await this.falcon.api.faasGateway.getEntitiesExecutionV1({\n        id: executionId,\n      });\n\n    const executionResult = resultResponse?.resources?.[0] as { payload?: unknown };\n\n    return executionResult?.payload as Record<string, unknown> | undefined;\n  }\n\n  private pollForResult({\n    resolve,\n    reject,\n    executionId,\n  }: {\n    resolve: (value: unknown) => void;\n    reject: (value?: unknown) => void;\n    executionId: string;\n  }) {\n    let exceptionRetries = 2;\n\n    this.intervalId = window.setInterval(async () => {\n      try {\n        const payload = await this.getExecutionResult(executionId);\n\n        if (payload) {\n          window.clearInterval(this.intervalId);\n          resolve(payload);\n        }\n      } catch (e) {\n        if (exceptionRetries <= 0) {\n          window.clearInterval(this.intervalId);\n          reject(e);\n        }\n\n        exceptionRetries--;\n      }\n    }, this.pollTimeout);\n  }\n\n  public path(pathEntry: string) {\n    const urlPath = new URL(pathEntry, 'http://localhost');\n\n    const path = urlPath.pathname;\n    const searchParams = [...urlPath.searchParams.entries()].reduce(\n      (acc, [key, value]) => ({\n        ...acc,\n        [key]: [value],\n      }),\n      {} as Params['query'],\n    );\n\n    return {\n      path,\n      queryParams: searchParams,\n\n      get: async (params: GetParameters['params'] = {}) => {\n        return this.get({\n          path,\n          params: {\n            query: params?.query ?? searchParams ?? {},\n            header: params?.header ?? {},\n          },\n        });\n      },\n\n      post: async (\n        body: PostParameters['body'],\n        params: PostParameters['params'] = {},\n      ) => {\n        return this.post({\n          path,\n          params: {\n            query: params?.query ?? searchParams ?? {},\n            header: params?.header ?? {},\n          },\n          body,\n        });\n      },\n\n      patch: async (\n        body: PatchParameters['body'],\n        params: PostParameters['params'] = {},\n      ) => {\n        return this.patch({\n          path,\n          params: {\n            query: params?.query ?? searchParams ?? {},\n            header: params?.header ?? {},\n          },\n          body,\n        });\n      },\n\n      put: async (\n        body: PutParameters['body'],\n        params: PostParameters['params'] = {},\n      ) => {\n        return this.put({\n          path,\n          params: {\n            query: params?.query ?? searchParams ?? {},\n            header: params?.header ?? {},\n          },\n          body,\n        });\n      },\n\n      delete: async (\n        body: DeleteParameters['body'],\n        params: PostParameters['params'] = {},\n      ) => {\n        return this.delete({\n          path,\n          params: {\n            query: params?.query ?? searchParams ?? {},\n            header: params?.header ?? {},\n          },\n          body,\n        });\n      },\n    };\n  }\n\n  public async get({ path, params }: GetParameters) {\n    return this.execute({\n      path,\n      method: CloudFunction.GET,\n      params,\n    });\n  }\n\n  public async post({ path, params, body }: PostParameters) {\n    return this.execute({\n      path,\n      method: CloudFunction.POST,\n      body,\n      params,\n    });\n  }\n\n  public async patch({ path, params, body }: PatchParameters) {\n    return this.execute({\n      path,\n      method: CloudFunction.PATCH,\n      body,\n      params,\n    });\n  }\n\n  public async put({ path, params, body }: PutParameters) {\n    return this.execute({\n      path,\n      method: CloudFunction.PUT,\n      body,\n      params,\n    });\n  }\n\n  public async delete({ path, params, body }: DeleteParameters) {\n    return this.execute({\n      path,\n      method: CloudFunction.DELETE,\n      body,\n      params,\n    });\n  }\n\n  public destroy() {\n    if (this.intervalId) {\n      window.clearInterval(this.intervalId);\n      this.intervalId = undefined;\n    }\n  }\n}\n","import type FalconApi from '../api';\nimport type { CollectionRequestMessage, LocalData } from '../types';\n\ninterface CollectionDefinition {\n  collection: string;\n}\n\ninterface CollectionSearchDefinition {\n  /**\n   * Falcon Query Language (FQL) to filter the requested collections\n   * @see https://falcon.crowdstrike.com/documentation/page/d3c84a1b/falcon-query-language-fql\n   */\n  filter: string;\n  offset: string;\n  sort: string;\n  limit: number;\n}\n\ninterface CollectionListDefinition {\n  end: string;\n  limit: number;\n  start: string;\n}\n\nexport class Collection<DATA extends LocalData = LocalData> {\n  constructor(\n    private readonly falcon: FalconApi<DATA>,\n    private readonly definition: CollectionDefinition,\n  ) {}\n\n  /**\n   * Write data to the collection\n   *\n   * @param key\n   * @param data\n   * @returns\n   */\n  public async write(key: string, data: Record<string, unknown>) {\n    return this.falcon.bridge.postMessage({\n      type: 'collection',\n      payload: {\n        type: 'write',\n        key,\n        collection: this.definition.collection,\n        data,\n      },\n    });\n  }\n\n  /**\n   * Read the data for the given `key`\n   *\n   * @param key\n   * @returns\n   */\n  public async read(key: string) {\n    return this.falcon.bridge.postMessage<CollectionRequestMessage>({\n      type: 'collection',\n      payload: {\n        type: 'read',\n        key,\n        collection: this.definition.collection,\n      },\n    });\n  }\n\n  /**\n   * Delete the data for the given `key`\n   *\n   * @param key\n   * @returns\n   */\n  public async delete(key: string) {\n    return this.falcon.bridge.postMessage<CollectionRequestMessage>({\n      type: 'collection',\n      payload: {\n        type: 'delete',\n        key,\n        collection: this.definition.collection,\n      },\n    });\n  }\n\n  /**\n   * Search for data\n   *\n   * @param searchDefinition\n   * @returns\n   */\n  public async search({\n    filter,\n    offset,\n    sort,\n    limit,\n  }: CollectionSearchDefinition) {\n    return this.falcon.bridge.postMessage<CollectionRequestMessage>({\n      type: 'collection',\n      payload: {\n        type: 'search',\n        filter,\n        limit,\n        offset,\n        sort,\n        collection: this.definition.collection,\n      },\n    });\n  }\n\n  /**\n   * lists the object keys in the specified collection\n   *\n   * @param searchDefinition\n   * @returns\n   */\n  public async list(options?: CollectionListDefinition) {\n    return this.falcon.bridge.postMessage<CollectionRequestMessage>({\n      type: 'collection',\n      payload: {\n        type: 'list',\n        collection: this.definition.collection,\n        start: options?.start,\n        end: options?.end,\n        limit: options?.limit,\n      },\n    });\n  }\n}\n","import type FalconApi from '../api';\nimport type { LocalData, LogscaleRequestMessage } from '../types';\n\ninterface WriteProperties {\n  tag: LogscaleRequestMessage['payload']['tag'];\n  tagSource: LogscaleRequestMessage['payload']['tagSource'];\n  testData: LogscaleRequestMessage['payload']['testData'];\n}\n\nexport class Logscale<DATA extends LocalData = LocalData> {\n  constructor(private readonly falcon: FalconApi<DATA>) {}\n\n  /**\n   * Write data to LogScale\n   *\n   * @param data\n   * @param properties\n   * @returns\n   */\n  public async write(\n    // @todo the proper type here is unclear  - we need to make clear how the user needs to call this\n    data: LogscaleRequestMessage['payload']['data'],\n    properties: WriteProperties,\n  ) {\n    return this.falcon.bridge.postMessage<LogscaleRequestMessage>({\n      type: 'loggingapi',\n      payload: {\n        type: 'ingest',\n        data,\n        tag: properties?.tag,\n        tagSource: properties?.tagSource,\n        testData: properties?.testData,\n      },\n    });\n  }\n\n  /**\n   * Execute a dynamic query\n   *\n   * @param query\n   * @returns Promise that resolves with the data\n   */\n  public async query(\n    // @todo the proper type here is unclear  - we need to make clear how the user needs to call this\n    query: LogscaleRequestMessage['payload']['data'],\n  ) {\n    return this.falcon.bridge.postMessage<LogscaleRequestMessage>({\n      type: 'loggingapi',\n      payload: {\n        type: 'dynamic-execute',\n        data: query,\n      },\n    });\n  }\n\n  /**\n   * Execute a saved query\n   *\n   * @param savedQuery\n   * @returns\n   */\n  public async savedQuery(\n    // @todo the proper type here is unclear  - we need to make clear how the user needs to call this\n    savedQuery: LogscaleRequestMessage['payload']['data'],\n  ) {\n    return this.falcon.bridge.postMessage<LogscaleRequestMessage>({\n      type: 'loggingapi',\n      payload: {\n        type: 'saved-query-execute',\n        data: savedQuery,\n      },\n    });\n  }\n}\n","import type FalconApi from '../api';\nimport type { LocalData } from '../types';\nimport type { NavigateToRequestMessage } from '../types';\n\nconst ALLOWED_TARGETS = ['_self', '_blank'] as const;\n\nexport class Navigation<DATA extends LocalData = LocalData> {\n  constructor(private readonly falcon: FalconApi<DATA>) {}\n\n  public async navigateTo({\n    path,\n    type,\n    target,\n    metaKey,\n    ctrlKey,\n    shiftKey,\n  }: {\n    path: string;\n    target?: NavigateToRequestMessage['payload']['target'];\n    type?: NavigateToRequestMessage['payload']['type'];\n    metaKey?: boolean;\n    ctrlKey?: boolean;\n    shiftKey?: boolean;\n  }) {\n    await this.falcon.bridge.postMessage<NavigateToRequestMessage>({\n      type: 'navigateTo',\n      payload: {\n        path,\n        type: type ?? 'falcon',\n        target: target ?? '_self',\n        metaKey: metaKey ?? false,\n        ctrlKey: ctrlKey ?? false,\n        shiftKey: shiftKey ?? false,\n      },\n    });\n  }\n\n  public async onClick(\n    event: MouseEvent | KeyboardEvent,\n    defaultTarget: (typeof ALLOWED_TARGETS)[number] = '_self',\n    defaultType: NavigateToRequestMessage['payload']['type'] = 'falcon',\n  ) {\n    if (!(event instanceof Event)) {\n      throw Error('\"event\" property should be subclass of Event');\n    }\n\n    if (!('preventDefault' in event)) {\n      return;\n    }\n\n    if (!(event.target instanceof HTMLAnchorElement)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    const path = event.target.getAttribute('href');\n    defaultTarget =\n      (event.target.getAttribute('target') as '_self' | '_blank') ??\n      defaultTarget;\n    const type = (event.target.dataset?.type ??\n      defaultType) as NavigateToRequestMessage['payload']['type'];\n\n    if (\n      defaultTarget === null ||\n      !ALLOWED_TARGETS.includes(\n        defaultTarget as (typeof ALLOWED_TARGETS)[number],\n      )\n    ) {\n      throw new Error('Target should be _self or _blank');\n    }\n\n    const target = defaultTarget as (typeof ALLOWED_TARGETS)[number];\n\n    if (path === undefined || path === null) {\n      throw new Error(\n        'Navigation path is missing. Make sure you have added navigation.onClick on the `a` tag and `href` is present.',\n      );\n    }\n\n    const { metaKey, ctrlKey, shiftKey } = event;\n\n    await this.navigateTo({ path, type, target, metaKey, ctrlKey, shiftKey });\n  }\n}\n","import type { Bridge } from '../bridge';\nimport type { LocalData } from '../types';\n\n/**\n * @internal\n */\nexport class ResizeTracker<DATA extends LocalData = LocalData> {\n  private observer: ResizeObserver;\n\n  constructor(private bridge: Bridge<DATA>) {\n    this.observer = new ResizeObserver((entries) =>\n      this.handleResizeEvent(entries),\n    );\n    this.observer.observe(document.body);\n  }\n\n  private handleResizeEvent(entries: ResizeObserverEntry[]) {\n    const { height } = entries[0].contentRect;\n\n    this.bridge.sendUnidirectionalMessage({\n      type: 'resize',\n      payload: {\n        height,\n      },\n    });\n  }\n\n  destroy() {\n    this.observer.disconnect();\n  }\n}\n","import {\n  type ExtensionIdentifier,\n  type FileUploadType,\n  type LocalData,\n  type OpenModalOptions,\n  type OpenModalRequestMessage,\n  type PayloadForFileUploadType,\n  type ResponseForFileUploadType,\n} from '../types';\nimport type { Bridge } from '../bridge';\n\n/**\n * Invoke UI features within the main Falcon Console.\n */\nexport class UI<DATA extends LocalData = LocalData> {\n  constructor(private bridge: Bridge<DATA>) {}\n\n  /**\n   * Open a modal within the Falcon Console, rendering an UI extension of your choice.\n   * \n   * ```js\n   * const result = await api.ui.openModal({ id: '<extension ID as defined in the manifest>', type: 'extension' }, 'Modal title', {\n      path: '/foo',\n      data: { foo: 'bar' },\n      size: 'lg',\n      align: 'top',\n    });\n    ```\n   *\n   * @param extension The identifier of the extension, consisting of {@link ExtensionIdentifier.id} and {@link ExtensionIdentifier.type}\n   * @param title The title to render in the header of the modal\n   * @param options\n   * @returns a Promise that resolves with the data passed to {@link closeModal}, or `undefined` if the user dismisses it\n   */\n  public async openModal<PAYLOAD = unknown>(\n    extension: ExtensionIdentifier,\n    title: string,\n    options: OpenModalOptions = {},\n  ): Promise<PAYLOAD | undefined> {\n    const result = await this.bridge.postMessage<\n      OpenModalRequestMessage,\n      PAYLOAD | Error\n    >({\n      type: 'openModal',\n      payload: {\n        extension,\n        title,\n        options,\n      },\n    });\n\n    if (result instanceof Error) {\n      throw result;\n    }\n\n    return result as PAYLOAD;\n  }\n\n  /**\n   * Close a modal already opened via {@link openModal}. This can be called both by the extension that is rendered inside the modal or by the extension that opened the modal.\n   *\n   * @param payload the data to return to the caller that opened the modal as the value of the resolved promise\n   */\n  public closeModal<PAYLOAD = unknown>(payload?: PAYLOAD) {\n    this.bridge.sendUnidirectionalMessage({\n      type: 'closeModal',\n      payload,\n    });\n  }\n\n  /**\n   * This opens a file upload modal inside the Falcon Console, to support file uploads, even large binary files.\n   *\n   * @param fileUploadType the type of file upload\n   * @param initialData data that you want to pre-populate the form with\n   */\n  public async uploadFile<TYPE extends FileUploadType>(\n    fileUploadType: TYPE,\n    initialData?: PayloadForFileUploadType<TYPE>,\n  ): Promise<ResponseForFileUploadType<TYPE> | undefined> {\n    return this.bridge.postMessage({\n      type: 'fileUpload',\n      fileUploadType,\n      payload: initialData,\n    });\n  }\n}\n","import Emittery from 'emittery';\nimport FalconPublicApis from './apis/public-api';\nimport { ApiIntegration } from './abstraction/api-integration';\nimport { Bridge } from './bridge';\nimport { CloudFunction } from './abstraction/cloud-function';\nimport { Collection } from './abstraction/collection';\nimport { Logscale } from './abstraction/logscale';\nimport { Memoize } from 'typescript-memoize';\nimport { Navigation } from './lib/navigation';\nimport { ResizeTracker } from './lib/resize-tracker';\nimport { UI } from './lib/ui';\nimport { assertConnection } from './utils';\nimport type {\n  BroadcastMessage,\n  CloudFunctionDefinition,\n  ConnectRequestMessage,\n  DataUpdateMessage,\n  LocalData,\n  Theme,\n} from './types';\n\n// This maps event names to the event shape, used by emittery. Extends this when adding new subscribable events\ninterface EventMap<DATA extends LocalData> {\n  data: DATA;\n  broadcast: unknown;\n}\n/**\n * This is the main class and only entrypoint for engaging with the Falcon APIs from an Foundry UI extension or page.\n *\n * At the very minimum, you would have to instantiate the class and connect to the Falcon Console:\n *\n * ```js\n * import FalconApi from '@crowdstrike/foundry-js';\n *\n * const api = new FalconApi();\n *\n * await api.connect();\n * ```\n *\n */\nexport default class FalconApi<DATA extends LocalData = LocalData> {\n  /**\n   * @internal\n   */\n  public isConnected = false;\n\n  /**\n   * An event emitter that allows you to subscribe to events issued by the Falcon Console.\n   *\n   * Currently supported event types:\n   * * `data`: fires when {@link data} is updated.\n   * * `broadcast`: this event is received when another extension of the same app has send a `broadcast` event via {@link sendBroadcast}.\n   *\n   * ```js\n   * api.events.on('data', (newData) => console.log('new data received:', newData));\n   * ```\n   */\n  public events = new Emittery<EventMap<DATA>>();\n\n  /**\n   * The \"local data\" that your extension receives from the Falcon Console. This can vary depending on the state of the Falcon Console and the socket of the extension.\n   *\n   * At the very least it will contain the data specified by the {@link LocalData} interface.\n   */\n  public data?: DATA;\n\n  /**\n   * @internal\n   */\n  public bridge: Bridge<DATA> = new Bridge<DATA>({\n    onDataUpdate: (data) => this.handleDataUpdate(data),\n    onBroadcast: (msg) => this.handleBroadcastMessage(msg),\n    onLivereload: () => this.handleLivereloadMessage(),\n  });\n\n  /**\n   * Namespace for all the {@link FalconPublicApis | Falcon Cloud APIs} you have access to with this SDK.\n   */\n  public api = new FalconPublicApis(this as unknown as FalconApi);\n\n  /**\n   * The {@link UI} class contains methods to invoke UI features within the main Falcon Console.\n   */\n  public ui = new UI(this.bridge);\n\n  private resizeTracker?: ResizeTracker<DATA>;\n  private cloudFunctions: CloudFunction<DATA>[] = [];\n  private apiIntegrations: ApiIntegration<DATA>[] = [];\n  private collections: Collection<DATA>[] = [];\n\n  /**\n   * Connect to the main Falcon Console from within your UI extension.\n   *\n   * This establishes a connection to send messages between the extension and the Falcon Console. Only when established you will be able to call other APIs.\n   */\n  public async connect(): Promise<{ origin: string; data?: DATA }> {\n    const response = await this.bridge.postMessage<\n      ConnectRequestMessage,\n      { data: DATA; origin: string }\n    >({ type: 'connect' });\n\n    if (response !== undefined) {\n      const { data, origin } = response;\n\n      this.bridge.setOrigin(origin);\n      this.data = data;\n\n      this.updateTheme(data?.theme);\n\n      this.isConnected = true;\n    }\n\n    this.resizeTracker = new ResizeTracker(this.bridge);\n\n    return response;\n  }\n\n  /**\n   * The ID of the Foundry app this UI extension belongs to.\n   */\n  public get appId() {\n    return this.data?.app.id;\n  }\n\n  /**\n   * Sending broadcast messages is a mechanism for allowing communication between different UI extensions, when they are displayed at the same time.\n   * When sending a broadcast message, other extensions need to listen for the `broadcast` event on the {@link events} event emitter.\n   *\n   * Note that broadcast messages are only dispatched between UI extensions of the same app!\n   *\n   * @param payload the data you want to send to other UI extensions\n   */\n  public sendBroadcast(payload: unknown) {\n    this.bridge.sendUnidirectionalMessage({ type: 'broadcast', payload });\n  }\n\n  private handleDataUpdate(dataMessage: DataUpdateMessage<DATA>): void {\n    this.data = dataMessage.payload;\n    this.updateTheme(this.data.theme);\n\n    this.events.emit('data', this.data);\n  }\n\n  private handleBroadcastMessage(message: BroadcastMessage): void {\n    this.events.emit('broadcast', message.payload);\n  }\n\n  private handleLivereloadMessage(): void {\n    document.location.reload();\n  }\n\n  private updateTheme(activeTheme?: Theme) {\n    if (!activeTheme) {\n      return;\n    }\n\n    const inactiveTheme =\n      activeTheme === 'theme-dark' ? 'theme-light' : 'theme-dark';\n\n    document.documentElement.classList.add(activeTheme);\n    document.documentElement.classList.remove(inactiveTheme);\n  }\n\n  /**\n   * Create a {@link CloudFunction} to integrate with Falcon's \"Function as a Service\" platform.\n   *\n   * @param definition\n   * @returns\n   */\n  cloudFunction(definition: CloudFunctionDefinition) {\n    assertConnection(this);\n\n    const cf = new CloudFunction(this, definition);\n\n    this.cloudFunctions.push(cf);\n\n    return cf;\n  }\n\n  /**\n   * Create an {@link ApiIntegration} to call external APIs.\n   *\n   * @param defintition\n   * @returns\n   */\n  apiIntegration({\n    definitionId,\n    operationId,\n  }: {\n    operationId: string;\n    definitionId: string;\n  }) {\n    assertConnection(this);\n\n    if (!this.data) {\n      throw Error('Data from console is missing');\n    }\n\n    const apiIntegration = new ApiIntegration(this, {\n      operationId,\n      definitionId: definitionId,\n    });\n\n    this.apiIntegrations.push(apiIntegration);\n\n    return apiIntegration;\n  }\n\n  /**\n   * Create a {@link Collection} to write to and query Falcon's custom storage service.\n   *\n   * @param definition\n   * @returns\n   */\n  collection({ collection }: { collection: string }) {\n    assertConnection(this);\n\n    const co = new Collection(this, { collection });\n\n    this.collections.push(co);\n\n    return co;\n  }\n\n  /**\n   * The {@link Navigation} class provides functionality to navigate to other pages.\n   */\n  @Memoize()\n  get navigation() {\n    assertConnection(this);\n\n    return new Navigation(this);\n  }\n\n  /**\n   * The {@link Logscale} class allows you to read and write to your custom LogScale repository.\n   */\n  @Memoize()\n  get logscale() {\n    assertConnection(this);\n\n    return new Logscale(this);\n  }\n\n  destroy() {\n    this.cloudFunctions.forEach((cf) => cf.destroy());\n\n    this.resizeTracker?.destroy();\n    this.bridge.destroy();\n  }\n}\n"],"names":["uuidv4"],"mappings":"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","x_google_ignoreList":[0,1,2,3,7,8,9,10]}