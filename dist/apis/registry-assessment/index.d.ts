/**
 *
 * This file is autogenerated.
 *
 * DO NOT EDIT DIRECTLY
 *
 **/
import type { Bridge } from '../../bridge';
import type { ApiResponsePayload, BaseApiRequestMessage, BaseApiResponseMessage, BaseUrlParams } from '../../types';
export type RegistryAssessmentRequestApi = 'registryAssessment';
export type CommonApiResponseMessage = BaseApiResponseMessage<ApiResponsePayload>;
export interface CommonApiRequestMessage extends BaseApiRequestMessage<BaseUrlParams, unknown> {
    api: RegistryAssessmentRequestApi;
}
export type GetAggregatesRegistriesCountByStateV1QueryParams = BaseUrlParams;
export type GetAggregatesRegistriesCountByStateV1ApiResponse = ApiResponsePayload;
export type GetAggregatesRegistriesCountByStateV1ResponseMessage = BaseApiResponseMessage<GetAggregatesRegistriesCountByStateV1ApiResponse>;
export interface GetAggregatesRegistriesCountByStateV1RequestMessage extends BaseApiRequestMessage<GetAggregatesRegistriesCountByStateV1QueryParams> {
    api: RegistryAssessmentRequestApi;
    method: 'getAggregatesRegistriesCountByStateV1';
}
export type RegistryAssessmentApiRequestMessage = GetAggregatesRegistriesCountByStateV1RequestMessage;
export type RegistryAssessmentApiResponseMessage = GetAggregatesRegistriesCountByStateV1ResponseMessage;
export declare class RegistryAssessmentApiBridge {
    private bridge;
    constructor(bridge: Bridge);
    getBridge(): Bridge<import("../../types").LocalData>;
    getAggregatesRegistriesCountByStateV1(urlParams?: GetAggregatesRegistriesCountByStateV1QueryParams): Promise<GetAggregatesRegistriesCountByStateV1ApiResponse>;
}
