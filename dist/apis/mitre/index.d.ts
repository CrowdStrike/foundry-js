/**
 *
 * This file is autogenerated.
 *
 * DO NOT EDIT DIRECTLY
 *
 **/
import type { Bridge } from '../../bridge';
import type { ApiResponsePayload, BaseApiRequestMessage, BaseApiResponseMessage, BaseUrlParams, QueryParam } from '../../types';
export type MitreRequestApi = 'mitre';
export type CommonApiResponseMessage = BaseApiResponseMessage<ApiResponsePayload>;
export interface CommonApiRequestMessage extends BaseApiRequestMessage<BaseUrlParams, unknown> {
    api: MitreRequestApi;
}
export interface GetIntelMitreEntitiesMatrixV1QueryParams extends BaseUrlParams {
    version?: QueryParam;
}
export type GetIntelMitreEntitiesMatrixV1ApiResponse = ApiResponsePayload;
export type GetIntelMitreEntitiesMatrixV1ResponseMessage = BaseApiResponseMessage<GetIntelMitreEntitiesMatrixV1ApiResponse>;
export interface GetIntelMitreEntitiesMatrixV1RequestMessage extends BaseApiRequestMessage<GetIntelMitreEntitiesMatrixV1QueryParams> {
    api: MitreRequestApi;
    method: 'getIntelMitreEntitiesMatrixV1';
}
export type MitreApiRequestMessage = GetIntelMitreEntitiesMatrixV1RequestMessage;
export type MitreApiResponseMessage = GetIntelMitreEntitiesMatrixV1ResponseMessage;
export declare class MitreApiBridge {
    private bridge;
    constructor(bridge: Bridge);
    getBridge(): Bridge<import("../../types").LocalData>;
    getIntelMitreEntitiesMatrixV1(urlParams?: GetIntelMitreEntitiesMatrixV1QueryParams): Promise<GetIntelMitreEntitiesMatrixV1ApiResponse>;
}
