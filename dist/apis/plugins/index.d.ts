/**
 *
 * This file is autogenerated.
 *
 * DO NOT EDIT DIRECTLY
 *
 **/
import type { Bridge } from '../../bridge';
import type { ApiResponsePayload, BaseApiRequestMessage, BaseApiResponseMessage, BaseUrlParams, QueryParam } from '../../types';
export type PluginsRequestApi = 'plugins';
export type CommonApiResponseMessage = BaseApiResponseMessage<ApiResponsePayload>;
export interface CommonApiRequestMessage extends BaseApiRequestMessage<BaseUrlParams, unknown> {
    api: PluginsRequestApi;
}
export interface GetEntitiesConfigsV1QueryParams extends BaseUrlParams {
    ids?: QueryParam;
    appId?: QueryParam;
}
export type GetEntitiesConfigsV1ApiResponse = ApiResponsePayload;
export type GetEntitiesConfigsV1ResponseMessage = BaseApiResponseMessage<GetEntitiesConfigsV1ApiResponse>;
export interface GetEntitiesConfigsV1RequestMessage extends BaseApiRequestMessage<GetEntitiesConfigsV1QueryParams> {
    api: PluginsRequestApi;
    method: 'getEntitiesConfigsV1';
}
export interface GetEntitiesDefinitionsV1QueryParams extends BaseUrlParams {
    ids: QueryParam;
}
export type GetEntitiesDefinitionsV1ApiResponse = ApiResponsePayload;
export type GetEntitiesDefinitionsV1ResponseMessage = BaseApiResponseMessage<GetEntitiesDefinitionsV1ApiResponse>;
export interface GetEntitiesDefinitionsV1RequestMessage extends BaseApiRequestMessage<GetEntitiesDefinitionsV1QueryParams> {
    api: PluginsRequestApi;
    method: 'getEntitiesDefinitionsV1';
}
export type PostEntitiesExecuteDraftV1QueryParams = BaseUrlParams;
export type PostEntitiesExecuteDraftV1ApiResponse = ApiResponsePayload;
export type PostEntitiesExecuteDraftV1PostData = Record<string, never>;
export type PostEntitiesExecuteDraftV1ResponseMessage = BaseApiResponseMessage<PostEntitiesExecuteDraftV1ApiResponse>;
export interface PostEntitiesExecuteDraftV1RequestMessage extends BaseApiRequestMessage<PostEntitiesExecuteDraftV1QueryParams, PostEntitiesExecuteDraftV1PostData> {
    api: PluginsRequestApi;
    method: 'postEntitiesExecuteDraftV1';
}
export type PostEntitiesExecuteV1QueryParams = BaseUrlParams;
export type PostEntitiesExecuteV1ApiResponse = ApiResponsePayload;
export type PostEntitiesExecuteV1PostData = {
    resources?: Array<{
        definition_id?: string;
        operation_id?: string;
        request?: Record<string, unknown>;
    }>;
};
export type PostEntitiesExecuteV1ResponseMessage = BaseApiResponseMessage<PostEntitiesExecuteV1ApiResponse>;
export interface PostEntitiesExecuteV1RequestMessage extends BaseApiRequestMessage<PostEntitiesExecuteV1QueryParams, PostEntitiesExecuteV1PostData> {
    api: PluginsRequestApi;
    method: 'postEntitiesExecuteV1';
}
export type PluginsApiRequestMessage = GetEntitiesConfigsV1RequestMessage | GetEntitiesDefinitionsV1RequestMessage | PostEntitiesExecuteDraftV1RequestMessage | PostEntitiesExecuteV1RequestMessage;
export type PluginsApiResponseMessage = GetEntitiesConfigsV1ResponseMessage | GetEntitiesDefinitionsV1ResponseMessage | PostEntitiesExecuteDraftV1ResponseMessage | PostEntitiesExecuteV1ResponseMessage;
export declare class PluginsApiBridge {
    private bridge;
    constructor(bridge: Bridge);
    getBridge(): Bridge<import("../../types").LocalData>;
    getEntitiesConfigsV1(urlParams?: GetEntitiesConfigsV1QueryParams): Promise<GetEntitiesConfigsV1ApiResponse>;
    getEntitiesDefinitionsV1(urlParams: GetEntitiesDefinitionsV1QueryParams): Promise<GetEntitiesDefinitionsV1ApiResponse>;
    postEntitiesExecuteDraftV1(postBody: PostEntitiesExecuteDraftV1PostData, urlParams?: PostEntitiesExecuteDraftV1QueryParams): Promise<PostEntitiesExecuteDraftV1ApiResponse>;
    postEntitiesExecuteV1(postBody: PostEntitiesExecuteV1PostData, urlParams?: PostEntitiesExecuteV1QueryParams): Promise<PostEntitiesExecuteV1ApiResponse>;
}
